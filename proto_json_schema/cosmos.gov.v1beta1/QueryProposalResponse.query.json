{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/QueryProposalResponse",
    "definitions": {
        "QueryProposalResponse": {
            "properties": {
                "proposal": {
                    "$ref": "#/definitions/cosmos.gov.v1beta1.Proposal",
                    "additionalProperties": true
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Query Proposal Response",
            "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Coin",
            "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "cosmos.gov.v1beta1.Proposal": {
            "properties": {
                "proposal_id": {
                    "type": "string",
                    "description": "proposal_id defines the unique id of the proposal."
                },
                "content": {
                    "properties": {
                        "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. As of May 2023, there are no widely used type server implementations and no plans to implement one. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                        },
                        "value": {
                            "type": "string",
                            "description": "Must be a valid serialized protocol buffer of the above specified type.",
                            "format": "binary",
                            "binaryEncoding": "base64"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "content is the proposal's content."
                },
                "status": {
                    "enum": [
                        "PROPOSAL_STATUS_UNSPECIFIED",
                        0,
                        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                        1,
                        "PROPOSAL_STATUS_VOTING_PERIOD",
                        2,
                        "PROPOSAL_STATUS_PASSED",
                        3,
                        "PROPOSAL_STATUS_REJECTED",
                        4,
                        "PROPOSAL_STATUS_FAILED",
                        5
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Proposal Status",
                    "description": "ProposalStatus enumerates the valid statuses of a proposal."
                },
                "final_tally_result": {
                    "$ref": "#/definitions/cosmos.gov.v1beta1.TallyResult",
                    "additionalProperties": true,
                    "description": "final_tally_result is the final tally result of the proposal. When querying a proposal via gRPC, this field is not populated until the proposal's voting period has ended."
                },
                "submit_time": {
                    "type": "string",
                    "description": "submit_time is the time of proposal submission.",
                    "format": "date-time"
                },
                "deposit_end_time": {
                    "type": "string",
                    "description": "deposit_end_time is the end time for deposition.",
                    "format": "date-time"
                },
                "total_deposit": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array",
                    "description": "total_deposit is the total deposit on the proposal."
                },
                "voting_start_time": {
                    "type": "string",
                    "description": "voting_start_time is the starting time to vote on a proposal.",
                    "format": "date-time"
                },
                "voting_end_time": {
                    "type": "string",
                    "description": "voting_end_time is the end time of voting on a proposal.",
                    "format": "date-time"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Proposal",
            "description": "Proposal defines the core field members of a governance proposal."
        },
        "cosmos.gov.v1beta1.TallyResult": {
            "properties": {
                "yes": {
                    "type": "string",
                    "description": "yes is the number of yes votes on a proposal."
                },
                "abstain": {
                    "type": "string",
                    "description": "abstain is the number of abstain votes on a proposal."
                },
                "no": {
                    "type": "string",
                    "description": "no is the number of no votes on a proposal."
                },
                "no_with_veto": {
                    "type": "string",
                    "description": "no_with_veto is the number of no with veto votes on a proposal."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Tally Result",
            "description": "TallyResult defines a standard tally for a governance proposal."
        }
    }
}