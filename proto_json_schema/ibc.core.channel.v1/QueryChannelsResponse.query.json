{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/QueryChannelsResponse",
    "definitions": {
        "QueryChannelsResponse": {
            "properties": {
                "channels": {
                    "items": {
                        "$ref": "#/definitions/ibc.core.channel.v1.IdentifiedChannel"
                    },
                    "type": "array",
                    "description": "list of stored channels of the chain."
                },
                "pagination": {
                    "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
                    "additionalProperties": true,
                    "description": "pagination response"
                },
                "height": {
                    "$ref": "#/definitions/ibc.core.client.v1.Height",
                    "additionalProperties": true,
                    "description": "query block height"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Query Channels Response",
            "description": "QueryChannelsResponse is the response type for the Query/Channels RPC method."
        },
        "cosmos.base.query.v1beta1.PageResponse": {
            "properties": {
                "next_key": {
                    "type": "string",
                    "description": "next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "total": {
                    "type": "string",
                    "description": "total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Page Response",
            "description": "PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"
        },
        "ibc.core.channel.v1.Counterparty": {
            "properties": {
                "port_id": {
                    "type": "string",
                    "description": "port on the counterparty chain which owns the other end of the channel."
                },
                "channel_id": {
                    "type": "string",
                    "description": "channel end on the counterparty chain"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Counterparty",
            "description": "Counterparty defines a channel end counterparty"
        },
        "ibc.core.channel.v1.IdentifiedChannel": {
            "properties": {
                "state": {
                    "enum": [
                        "STATE_UNINITIALIZED_UNSPECIFIED",
                        0,
                        "STATE_INIT",
                        1,
                        "STATE_TRYOPEN",
                        2,
                        "STATE_OPEN",
                        3,
                        "STATE_CLOSED",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "State",
                    "description": "State defines if a channel is in one of the following states: CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED."
                },
                "ordering": {
                    "enum": [
                        "ORDER_NONE_UNSPECIFIED",
                        0,
                        "ORDER_UNORDERED",
                        1,
                        "ORDER_ORDERED",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Order",
                    "description": "Order defines if a channel is ORDERED or UNORDERED"
                },
                "counterparty": {
                    "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
                    "additionalProperties": true,
                    "description": "counterparty channel end"
                },
                "connection_hops": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "list of connection identifiers, in order, along which packets sent on this channel will travel"
                },
                "version": {
                    "type": "string",
                    "description": "opaque channel version, which is agreed upon during the handshake"
                },
                "port_id": {
                    "type": "string",
                    "description": "port identifier"
                },
                "channel_id": {
                    "type": "string",
                    "description": "channel identifier"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Identified Channel",
            "description": "IdentifiedChannel defines a channel with additional port and channel identifier fields."
        },
        "ibc.core.client.v1.Height": {
            "properties": {
                "revision_number": {
                    "type": "string",
                    "description": "the revision that the client is currently on"
                },
                "revision_height": {
                    "type": "string",
                    "description": "the height within the given revision"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Height",
            "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset Please note that json tags for generated Go code are overridden to explicitly exclude the omitempty jsontag. This enforces the Go json marshaller to always emit zero values for both revision_number and revision_height."
        }
    }
}