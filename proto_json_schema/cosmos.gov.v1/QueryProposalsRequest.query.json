{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/QueryProposalsRequest",
    "definitions": {
        "QueryProposalsRequest": {
            "properties": {
                "proposal_status": {
                    "enum": [
                        "PROPOSAL_STATUS_UNSPECIFIED",
                        0,
                        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                        1,
                        "PROPOSAL_STATUS_VOTING_PERIOD",
                        2,
                        "PROPOSAL_STATUS_PASSED",
                        3,
                        "PROPOSAL_STATUS_REJECTED",
                        4,
                        "PROPOSAL_STATUS_FAILED",
                        5
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Proposal Status",
                    "description": "ProposalStatus enumerates the valid statuses of a proposal."
                },
                "voter": {
                    "type": "string",
                    "description": "voter defines the voter address for the proposals."
                },
                "depositor": {
                    "type": "string",
                    "description": "depositor defines the deposit addresses from the proposals."
                },
                "pagination": {
                    "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
                    "additionalProperties": true,
                    "description": "pagination defines an optional pagination for the request."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Query Proposals Request",
            "description": "QueryProposalsRequest is the request type for the Query/Proposals RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "offset": {
                    "type": "string",
                    "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
                },
                "limit": {
                    "type": "string",
                    "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
                },
                "count_total": {
                    "type": "boolean",
                    "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
                },
                "reverse": {
                    "type": "boolean",
                    "description": "reverse is set to true if results are to be returned in the descending order."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Page Request",
            "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"
        }
    }
}