{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/QueryAllBalancesResponse",
    "definitions": {
        "QueryAllBalancesResponse": {
            "properties": {
                "balances": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array",
                    "description": "balances is the balances of all the coins."
                },
                "pagination": {
                    "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
                    "additionalProperties": true,
                    "description": "pagination defines the pagination in the response."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Query All Balances Response",
            "description": "QueryAllBalancesResponse is the response type for the Query/AllBalances RPC method."
        },
        "cosmos.base.query.v1beta1.PageResponse": {
            "properties": {
                "next_key": {
                    "type": "string",
                    "description": "next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "total": {
                    "type": "string",
                    "description": "total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Page Response",
            "description": "PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Coin",
            "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
    }
}