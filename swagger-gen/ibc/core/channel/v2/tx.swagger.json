{
  "swagger": "2.0",
  "info": {
    "title": "ibc/core/channel/v2/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc.core.channel.v2.Msg/Acknowledgement": {
      "post": {
        "summary": "Acknowledgement defines a rpc handler method for MsgAcknowledgement.",
        "operationId": "Msg_Acknowledgement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgAcknowledgementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgAcknowledgement"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.channel.v2.Msg/RecvPacket": {
      "post": {
        "summary": "RecvPacket defines a rpc handler method for MsgRecvPacket.",
        "operationId": "Msg_RecvPacket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgRecvPacketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgRecvPacket"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.channel.v2.Msg/SendPacket": {
      "post": {
        "summary": "SendPacket defines a rpc handler method for MsgSendPacket.",
        "operationId": "Msg_SendPacket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgSendPacketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgSendPacket"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.channel.v2.Msg/Timeout": {
      "post": {
        "summary": "Timeout defines a rpc handler method for MsgTimeout.",
        "operationId": "Msg_Timeout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgTimeoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v2.MsgTimeout"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.core.channel.v2.Acknowledgement": {
      "type": "object",
      "properties": {
        "app_acknowledgements": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "description": "Acknowledgement contains a list of all ack results associated with a single\npacket. In the case of a successful receive, the acknowledgement will contain\nan app acknowledgement for each application that received a payload in the\nsame order that the payloads were sent in the packet. If the receive is not\nsuccessful, the acknowledgement will contain a single app acknowledgment\nwhich will be a constant error acknowledgment as defined by the IBC v2\nprotocol."
    },
    "ibc.core.channel.v2.MsgAcknowledgement": {
      "type": "object",
      "properties": {
        "packet": {
          "$ref": "#/definitions/ibc.core.channel.v2.Packet"
        },
        "acknowledgement": {
          "$ref": "#/definitions/ibc.core.channel.v2.Acknowledgement"
        },
        "proof_acked": {
          "type": "string",
          "format": "byte"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height"
        },
        "signer": {
          "type": "string"
        }
      },
      "description": "MsgAcknowledgement receives incoming IBC acknowledgement."
    },
    "ibc.core.channel.v2.MsgAcknowledgementResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ibc.core.channel.v2.ResponseResultType"
        }
      },
      "description": "MsgAcknowledgementResponse defines the Msg/Acknowledgement response type."
    },
    "ibc.core.channel.v2.MsgRecvPacket": {
      "type": "object",
      "properties": {
        "packet": {
          "$ref": "#/definitions/ibc.core.channel.v2.Packet"
        },
        "proof_commitment": {
          "type": "string",
          "format": "byte"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height"
        },
        "signer": {
          "type": "string"
        }
      },
      "description": "MsgRecvPacket receives an incoming IBC packet."
    },
    "ibc.core.channel.v2.MsgRecvPacketResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ibc.core.channel.v2.ResponseResultType"
        }
      },
      "description": "MsgRecvPacketResponse defines the Msg/RecvPacket response type."
    },
    "ibc.core.channel.v2.MsgSendPacket": {
      "type": "object",
      "properties": {
        "source_client": {
          "type": "string"
        },
        "timeout_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "payloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.core.channel.v2.Payload"
          }
        },
        "signer": {
          "type": "string"
        }
      },
      "description": "MsgSendPacket sends an outgoing IBC packet."
    },
    "ibc.core.channel.v2.MsgSendPacketResponse": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "MsgSendPacketResponse defines the Msg/SendPacket response type."
    },
    "ibc.core.channel.v2.MsgTimeout": {
      "type": "object",
      "properties": {
        "packet": {
          "$ref": "#/definitions/ibc.core.channel.v2.Packet"
        },
        "proof_unreceived": {
          "type": "string",
          "format": "byte"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height"
        },
        "signer": {
          "type": "string"
        }
      },
      "title": "MsgTimeout receives timed-out packet"
    },
    "ibc.core.channel.v2.MsgTimeoutResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/ibc.core.channel.v2.ResponseResultType"
        }
      },
      "description": "MsgTimeoutResponse defines the Msg/Timeout response type."
    },
    "ibc.core.channel.v2.Packet": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64",
          "description": "number corresponds to the order of sends and receives, where a Packet\nwith an earlier sequence number must be sent and received before a Packet\nwith a later sequence number."
        },
        "source_client": {
          "type": "string",
          "description": "identifies the sending client on the sending chain."
        },
        "destination_client": {
          "type": "string",
          "description": "identifies the receiving client on the receiving chain."
        },
        "timeout_timestamp": {
          "type": "string",
          "format": "uint64",
          "description": "timeout timestamp in seconds after which the packet times out."
        },
        "payloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.core.channel.v2.Payload"
          },
          "description": "a list of payloads, each one for a specific application."
        }
      },
      "title": "Packet defines a type that carries data across different chains through IBC"
    },
    "ibc.core.channel.v2.Payload": {
      "type": "object",
      "properties": {
        "source_port": {
          "type": "string",
          "description": "specifies the source port of the packet."
        },
        "destination_port": {
          "type": "string",
          "description": "specifies the destination port of the packet."
        },
        "version": {
          "type": "string",
          "description": "version of the specified application."
        },
        "encoding": {
          "type": "string",
          "description": "the encoding used for the provided value."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "the raw bytes for the payload."
        }
      },
      "title": "Payload contains the source and destination ports and payload for the\napplication (version, encoding, raw bytes)"
    },
    "ibc.core.channel.v2.ResponseResultType": {
      "type": "string",
      "enum": [
        "RESPONSE_RESULT_TYPE_UNSPECIFIED",
        "RESPONSE_RESULT_TYPE_NOOP",
        "RESPONSE_RESULT_TYPE_SUCCESS",
        "RESPONSE_RESULT_TYPE_FAILURE"
      ],
      "default": "RESPONSE_RESULT_TYPE_UNSPECIFIED",
      "description": "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for\nexample, the packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully",
      "title": "ResponseResultType defines the possible outcomes of the execution of a\nmessage"
    },
    "ibc.core.client.v1.Height": {
      "type": "object",
      "properties": {
        "revision_number": {
          "type": "string",
          "format": "uint64",
          "title": "the revision that the client is currently on"
        },
        "revision_height": {
          "type": "string",
          "format": "uint64",
          "title": "the height within the given revision"
        }
      },
      "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset\n\nPlease note that json tags for generated Go code are overridden to explicitly\nexclude the omitempty jsontag. This enforces the Go json marshaller to always\nemit zero values for both revision_number and revision_height.",
      "title": "Height is a monotonically increasing data type\nthat can be compared against another Height for the purposes of updating and\nfreezing clients"
    }
  }
}
