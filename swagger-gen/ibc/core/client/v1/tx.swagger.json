{
  "swagger": "2.0",
  "info": {
    "title": "ibc/core/client/v1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc.core.client.v1.Msg/CreateClient": {
      "post": {
        "summary": "CreateClient defines a rpc handler method for MsgCreateClient.",
        "operationId": "Msg_CreateClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgCreateClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgCreateClient"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/DeleteClientCreator": {
      "post": {
        "summary": "DeleteClientCreator defines a rpc handler method for\nMsgDeleteClientCreator.",
        "operationId": "Msg_DeleteClientCreator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgDeleteClientCreatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgDeleteClientCreator"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/IBCSoftwareUpgrade": {
      "post": {
        "summary": "IBCSoftwareUpgrade defines a rpc handler method for MsgIBCSoftwareUpgrade.",
        "operationId": "Msg_IBCSoftwareUpgrade",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgIBCSoftwareUpgrade"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/RecoverClient": {
      "post": {
        "summary": "RecoverClient defines a rpc handler method for MsgRecoverClient.",
        "operationId": "Msg_RecoverClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgRecoverClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgRecoverClient"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/SubmitMisbehaviour": {
      "post": {
        "summary": "SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.",
        "operationId": "Msg_SubmitMisbehaviour",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviourResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgSubmitMisbehaviour"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/UpdateClient": {
      "post": {
        "summary": "UpdateClient defines a rpc handler method for MsgUpdateClient.",
        "operationId": "Msg_UpdateClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpdateClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpdateClient"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/UpdateClientParams": {
      "post": {
        "summary": "UpdateClientParams defines a rpc handler method for MsgUpdateParams.",
        "operationId": "Msg_UpdateClientParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpdateParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpdateParams"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.core.client.v1.Msg/UpgradeClient": {
      "post": {
        "summary": "UpgradeClient defines a rpc handler method for MsgUpgradeClient.",
        "operationId": "Msg_UpgradeClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpgradeClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.MsgUpgradeClient"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.upgrade.v1beta1.Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Sets the name for the upgrade. This name will be used by the upgraded\nversion of the software to apply any special \"on-upgrade\" commands during\nthe first BeginBlock method after the upgrade is applied. It is also used\nto detect whether a software version can handle a given upgrade. If no\nupgrade handler with this name has been set in the software, it will be\nassumed that the software is out-of-date when the upgrade Time or Height is\nreached and the software will exit."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade\nlogic has been removed from the SDK. If this field is not empty, an error\nwill be thrown."
        },
        "height": {
          "type": "string",
          "format": "int64",
          "description": "The height at which the upgrade must be performed."
        },
        "info": {
          "type": "string",
          "title": "Any application specific upgrade info to be included on-chain\nsuch as a git commit that validators could automatically upgrade to"
        },
        "upgraded_client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade\nlogic has been moved to the IBC module in the sub module 02-client. If this\nfield is not empty, an error will be thrown."
        }
      },
      "description": "Plan specifies information about a planned upgrade and when it should occur."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.core.client.v1.MsgCreateClient": {
      "type": "object",
      "properties": {
        "client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "light client state"
        },
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "consensus state associated with the client that corresponds to a given\nheight."
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "title": "MsgCreateClient defines a message to create an IBC client"
    },
    "ibc.core.client.v1.MsgCreateClientResponse": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        }
      },
      "description": "MsgCreateClientResponse defines the Msg/CreateClient response type."
    },
    "ibc.core.client.v1.MsgDeleteClientCreator": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client identifier"
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "title": "MsgDeleteClientCreator defines a message to delete the client creator of a\nclient"
    },
    "ibc.core.client.v1.MsgDeleteClientCreatorResponse": {
      "type": "object",
      "description": "MsgDeleteClientCreatorResponse defines the Msg/DeleteClientCreator response\ntype."
    },
    "ibc.core.client.v1.MsgIBCSoftwareUpgrade": {
      "type": "object",
      "properties": {
        "plan": {
          "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan"
        },
        "upgraded_client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "An UpgradedClientState must be provided to perform an IBC breaking upgrade.\nThis will make the chain commit to the correct upgraded (self) client state\nbefore the upgrade occurs, so that connecting chains can verify that the\nnew upgraded client is valid by verifying a proof on the previous version\nof the chain. This will allow IBC connections to persist smoothly across\nplanned chain upgrades. Correspondingly, the UpgradedClientState field has\nbeen deprecated in the Cosmos SDK to allow for this logic to exist solely\nin the 02-client module."
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "title": "MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an\nIBC client using a v1 governance proposal"
    },
    "ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse": {
      "type": "object",
      "description": "MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response\ntype."
    },
    "ibc.core.client.v1.MsgRecoverClient": {
      "type": "object",
      "properties": {
        "subject_client_id": {
          "type": "string",
          "title": "the client identifier for the client to be updated if the proposal passes"
        },
        "substitute_client_id": {
          "type": "string",
          "title": "the substitute client identifier for the client which will replace the\nsubject client"
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "description": "MsgRecoverClient defines the message used to recover a frozen or expired\nclient."
    },
    "ibc.core.client.v1.MsgRecoverClientResponse": {
      "type": "object",
      "description": "MsgRecoverClientResponse defines the Msg/RecoverClient response type."
    },
    "ibc.core.client.v1.MsgSubmitMisbehaviour": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client unique identifier"
        },
        "misbehaviour": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "misbehaviour used for freezing the light client"
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "description": "MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for\nlight client misbehaviour.\nThis message has been deprecated. Use MsgUpdateClient instead."
    },
    "ibc.core.client.v1.MsgSubmitMisbehaviourResponse": {
      "type": "object",
      "description": "MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response\ntype."
    },
    "ibc.core.client.v1.MsgUpdateClient": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client unique identifier"
        },
        "client_message": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "client message to update the light client"
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "description": "MsgUpdateClient defines an sdk.Msg to update a IBC client state using\nthe given client message."
    },
    "ibc.core.client.v1.MsgUpdateClientResponse": {
      "type": "object",
      "description": "MsgUpdateClientResponse defines the Msg/UpdateClient response type."
    },
    "ibc.core.client.v1.MsgUpdateParams": {
      "type": "object",
      "properties": {
        "signer": {
          "type": "string",
          "title": "signer address"
        },
        "params": {
          "$ref": "#/definitions/ibc.core.client.v1.Params",
          "description": "params defines the client parameters to update.\n\nNOTE: All parameters must be supplied."
        }
      },
      "description": "MsgUpdateParams defines the sdk.Msg type to update the client parameters."
    },
    "ibc.core.client.v1.MsgUpdateParamsResponse": {
      "type": "object",
      "description": "MsgUpdateParamsResponse defines the MsgUpdateParams response type."
    },
    "ibc.core.client.v1.MsgUpgradeClient": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client unique identifier"
        },
        "client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "upgraded client state"
        },
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "upgraded consensus state, only contains enough information to serve as a\nbasis of trust in update logic"
        },
        "proof_upgrade_client": {
          "type": "string",
          "format": "byte",
          "title": "proof that old chain committed to new client"
        },
        "proof_upgrade_consensus_state": {
          "type": "string",
          "format": "byte",
          "title": "proof that old chain committed to new consensus state"
        },
        "signer": {
          "type": "string",
          "title": "signer address"
        }
      },
      "title": "MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client\nstate"
    },
    "ibc.core.client.v1.MsgUpgradeClientResponse": {
      "type": "object",
      "description": "MsgUpgradeClientResponse defines the Msg/UpgradeClient response type."
    },
    "ibc.core.client.v1.Params": {
      "type": "object",
      "properties": {
        "allowed_clients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "allowed_clients defines the list of allowed client state types which can be\ncreated and interacted with. If a client type is removed from the allowed\nclients list, usage of this client will be disabled until it is added again\nto the list."
        }
      },
      "description": "Params defines the set of IBC light client parameters."
    }
  }
}
