{
  "swagger": "2.0",
  "info": {
    "title": "ibc/applications/interchain_accounts/controller/v1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc.applications.interchain_accounts.controller.v1.Msg/RegisterInterchainAccount": {
      "post": {
        "summary": "RegisterInterchainAccount defines a rpc handler for\nMsgRegisterInterchainAccount.",
        "operationId": "Msg_RegisterInterchainAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.applications.interchain_accounts.controller.v1.Msg/SendTx": {
      "post": {
        "summary": "SendTx defines a rpc handler for MsgSendTx.",
        "operationId": "Msg_SendTx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgSendTx"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/ibc.applications.interchain_accounts.controller.v1.Msg/UpdateParams": {
      "post": {
        "summary": "UpdateParams defines a rpc handler for MsgUpdateParams.",
        "operationId": "Msg_UpdateParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "connection_id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "ordering": {
          "$ref": "#/definitions/ibc.core.channel.v1.Order"
        }
      },
      "title": "MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount"
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string"
        },
        "port_id": {
          "type": "string"
        }
      },
      "title": "MsgRegisterInterchainAccountResponse defines the response for\nMsg/RegisterAccount"
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgSendTx": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "connection_id": {
          "type": "string"
        },
        "packet_data": {
          "$ref": "#/definitions/ibc.applications.interchain_accounts.v1.InterchainAccountPacketData"
        },
        "relative_timeout": {
          "type": "string",
          "format": "uint64",
          "description": "Relative timeout timestamp provided will be added to the current block time\nduring transaction execution. The timeout timestamp must be non-zero."
        }
      },
      "title": "MsgSendTx defines the payload for Msg/SendTx"
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "MsgSendTxResponse defines the response for MsgSendTx"
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams": {
      "type": "object",
      "properties": {
        "signer": {
          "type": "string",
          "title": "signer address"
        },
        "params": {
          "$ref": "#/definitions/ibc.applications.interchain_accounts.controller.v1.Params",
          "description": "params defines the 27-interchain-accounts/controller parameters to update.\n\nNOTE: All parameters must be supplied."
        }
      },
      "title": "MsgUpdateParams defines the payload for Msg/UpdateParams"
    },
    "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse": {
      "type": "object",
      "title": "MsgUpdateParamsResponse defines the response for Msg/UpdateParams"
    },
    "ibc.applications.interchain_accounts.controller.v1.Params": {
      "type": "object",
      "properties": {
        "controller_enabled": {
          "type": "boolean",
          "description": "controller_enabled enables or disables the controller submodule."
        }
      },
      "description": "Params defines the set of on-chain interchain accounts parameters.\nThe following parameters may be used to disable the controller submodule."
    },
    "ibc.applications.interchain_accounts.v1.InterchainAccountPacketData": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ibc.applications.interchain_accounts.v1.Type"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "memo": {
          "type": "string"
        }
      },
      "description": "InterchainAccountPacketData is comprised of a raw transaction, type of\ntransaction and optional memo field."
    },
    "ibc.applications.interchain_accounts.v1.Type": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_EXECUTE_TX"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "- TYPE_UNSPECIFIED: Default zero value enumeration\n - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain",
      "title": "Type defines a classification of message issued from a controller chain to\nits associated interchain accounts host"
    },
    "ibc.core.channel.v1.Order": {
      "type": "string",
      "enum": [
        "ORDER_NONE_UNSPECIFIED",
        "ORDER_UNORDERED",
        "ORDER_ORDERED"
      ],
      "default": "ORDER_NONE_UNSPECIFIED",
      "description": "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent",
      "title": "Order defines if a channel is ORDERED or UNORDERED"
    }
  }
}
