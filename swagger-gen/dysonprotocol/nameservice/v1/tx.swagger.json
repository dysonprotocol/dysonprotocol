{
  "swagger": "2.0",
  "info": {
    "title": "dysonprotocol/nameservice/v1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/dysonprotocol.nameservice.v1.Msg/AcceptBid": {
      "post": {
        "operationId": "Msg_AcceptBid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgAcceptBidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgAcceptBid"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/BurnCoins": {
      "post": {
        "operationId": "Msg_BurnCoins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgBurnCoinsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgBurnCoins"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/BurnNFT": {
      "post": {
        "operationId": "Msg_BurnNFT",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgBurnNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgBurnNFT"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/ClaimBid": {
      "post": {
        "operationId": "Msg_ClaimBid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgClaimBidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgClaimBid"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/Commit": {
      "post": {
        "operationId": "Msg_Commit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgCommitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgCommit"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/MintCoins": {
      "post": {
        "operationId": "Msg_MintCoins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgMintCoinsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgMintCoins"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/MintNFT": {
      "post": {
        "operationId": "Msg_MintNFT",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgMintNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgMintNFT"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/PlaceBid": {
      "post": {
        "operationId": "Msg_PlaceBid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgPlaceBidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgPlaceBid"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/RejectBid": {
      "post": {
        "operationId": "Msg_RejectBid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgRejectBidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgRejectBid"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/Renew": {
      "post": {
        "operationId": "Msg_Renew",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgRenewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgRenew"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/Reveal": {
      "post": {
        "operationId": "Msg_Reveal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgRevealResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgReveal"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SaveClass": {
      "post": {
        "operationId": "Msg_SaveClass",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSaveClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSaveClass"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SetDenomMetadata": {
      "post": {
        "operationId": "Msg_SetDenomMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetDenomMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetDenomMetadata"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SetDestination": {
      "post": {
        "operationId": "Msg_SetDestination",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetDestinationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetDestination"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SetNFTClassExtraData": {
      "post": {
        "operationId": "Msg_SetNFTClassExtraData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetNFTClassExtraDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetNFTClassExtraData"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SetNFTMetadata": {
      "post": {
        "operationId": "Msg_SetNFTMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetNFTMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetNFTMetadata"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/SetValuation": {
      "post": {
        "operationId": "Msg_SetValuation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetValuationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgSetValuation"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.nameservice.v1.Msg/UpdateParams": {
      "post": {
        "operationId": "Msg_UpdateParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgUpdateParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.nameservice.v1.MsgUpdateParams"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.bank.v1beta1.DenomUnit": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string",
          "description": "denom represents the string name of the given denom unit (e.g uatom)."
        },
        "exponent": {
          "type": "integer",
          "format": "int64",
          "description": "exponent represents power of 10 exponent that one must\nraise the base_denom to in order to equal the given DenomUnit's denom\n1 denom = 10^exponent base_denom\n(e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\nexponent = 6, thus: 1 atom = 10^6 uatom)."
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "aliases is a list of string aliases for the given denom"
        }
      },
      "description": "DenomUnit represents a struct that describes a given\ndenomination unit of the basic token."
    },
    "cosmos.bank.v1beta1.Metadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "denom_units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.bank.v1beta1.DenomUnit"
          },
          "title": "denom_units represents the list of DenomUnit's for a given coin"
        },
        "base": {
          "type": "string",
          "description": "base represents the base denom (should be the DenomUnit with exponent = 0)."
        },
        "display": {
          "type": "string",
          "description": "display indicates the suggested denom that should be\ndisplayed in clients."
        },
        "name": {
          "type": "string",
          "title": "name defines the name of the token (eg: Cosmos Atom)"
        },
        "symbol": {
          "type": "string",
          "description": "symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\nbe the same as the display."
        },
        "uri": {
          "type": "string",
          "description": "URI to a document (on or off-chain) that contains additional information.\nOptional."
        },
        "uri_hash": {
          "type": "string",
          "description": "URIHash is a sha256 hash of a document pointed by URI. It's used to verify\nthat the document didn't change. Optional."
        }
      },
      "description": "Metadata represents a struct that describes\na basic token."
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "dysonprotocol.nameservice.v1.MsgAcceptBid": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgAcceptBidResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgBurnCoins": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner address"
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "Using the same annotation as MintCoins for consistency"
        }
      },
      "description": "MsgBurnCoins burns coins from the owner's balance, if each coin's root name\nis owned by that owner."
    },
    "dysonprotocol.nameservice.v1.MsgBurnCoinsResponse": {
      "type": "object",
      "title": "Response for BurnCoins"
    },
    "dysonprotocol.nameservice.v1.MsgBurnNFT": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        }
      },
      "title": "BurnNFT"
    },
    "dysonprotocol.nameservice.v1.MsgBurnNFTResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgClaimBid": {
      "type": "object",
      "properties": {
        "bidder": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgClaimBidResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgCommit": {
      "type": "object",
      "properties": {
        "committer": {
          "type": "string"
        },
        "hexhash": {
          "type": "string"
        },
        "valuation": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgCommitResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgMintCoins": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "Owner must be a valid address"
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Using repeated cosmos.base.v1beta1.Coin with the annotation\n(gogoproto.castrepeated) = \"github.com/cosmos/cosmos-sdk/types.Coins\"\nso that the generated Go code will have `Amount sdk.Coins` automatically."
        }
      },
      "description": "MsgMintCoins mints coins into the owner's balance, as long as each coin's\n\"root name\" is owned by that owner."
    },
    "dysonprotocol.nameservice.v1.MsgMintCoinsResponse": {
      "type": "object",
      "title": "Response for MintCoins"
    },
    "dysonprotocol.nameservice.v1.MsgMintNFT": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "uri_hash": {
          "type": "string"
        }
      },
      "title": "MintNFT"
    },
    "dysonprotocol.nameservice.v1.MsgMintNFTResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgPlaceBid": {
      "type": "object",
      "properties": {
        "bidder": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "bid_amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgPlaceBidResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgRejectBid": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "new_valuation": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgRejectBidResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgRenew": {
      "type": "object",
      "properties": {
        "payer": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgRenewResponse": {
      "type": "object",
      "properties": {
        "expiry": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgReveal": {
      "type": "object",
      "properties": {
        "committer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "salt": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgRevealResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgSaveClass": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "class_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "uri_hash": {
          "type": "string"
        }
      },
      "title": "SaveClass"
    },
    "dysonprotocol.nameservice.v1.MsgSaveClassResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgSetDenomMetadata": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "authority is the address that controls the module (defaults to x/gov unless\noverwritten)."
        },
        "metadata": {
          "$ref": "#/definitions/cosmos.bank.v1beta1.Metadata",
          "description": "The bank module metadata describing the denom, display, base, etc."
        }
      },
      "description": "MsgSetDenomMetadata allows a governance-authorized account to set denom\nmetadata."
    },
    "dysonprotocol.nameservice.v1.MsgSetDenomMetadataResponse": {
      "type": "object",
      "description": "MsgSetDenomMetadataResponse defines the response structure for executing a\nMsgSetDenomMetadata message."
    },
    "dysonprotocol.nameservice.v1.MsgSetDestination": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgSetDestinationResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgSetNFTClassExtraData": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "class_id": {
          "type": "string"
        },
        "extra_data": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgSetNFTClassExtraDataResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgSetNFTMetadata": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgSetNFTMetadataResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgSetValuation": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "nft_class_id": {
          "type": "string"
        },
        "nft_id": {
          "type": "string"
        },
        "valuation": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      }
    },
    "dysonprotocol.nameservice.v1.MsgSetValuationResponse": {
      "type": "object"
    },
    "dysonprotocol.nameservice.v1.MsgUpdateParams": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "authority is the address that controls the module (defaults to x/gov unless\noverwritten)."
        },
        "params": {
          "$ref": "#/definitions/dysonprotocol.nameservice.v1.Params",
          "description": "params defines the x/nameservice parameters to update.\n\nNOTE: All parameters must be supplied."
        }
      },
      "description": "MsgUpdateParams is the Msg/UpdateParams request type."
    },
    "dysonprotocol.nameservice.v1.MsgUpdateParamsResponse": {
      "type": "object",
      "description": "MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message."
    },
    "dysonprotocol.nameservice.v1.Params": {
      "type": "object",
      "properties": {
        "bid_timeout": {
          "type": "string",
          "title": "bid_timeout defines the duration after which a bid can be claimed by the\nbidder"
        },
        "allowed_denoms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "allowed_denoms defines the denominations that are allowed to be used for\nvaluations and bids"
        },
        "reject_bid_valuation_fee_percent": {
          "type": "string",
          "title": "reject_bid_valuation_fee_percent defines the percentage of the new\nvaluation to charge as a fee when rejecting a bid"
        },
        "minimum_bid_percent_increase": {
          "type": "string",
          "title": "minimum_bid_percent_increase defines the minimum percentage increase\nrequired for a new bid compared to the previous bid"
        }
      },
      "description": "Params defines the parameters for the nameservice module."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
