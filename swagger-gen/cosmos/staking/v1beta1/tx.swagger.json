{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/staking/v1beta1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos.staking.v1beta1.Msg/BeginRedelegate": {
      "post": {
        "summary": "BeginRedelegate defines a method for performing a redelegation\nof coins from a delegator and source validator to a destination validator.",
        "operationId": "Msg_BeginRedelegate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgBeginRedelegate"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/CancelUnbondingDelegation": {
      "post": {
        "summary": "CancelUnbondingDelegation defines a method for performing canceling the\nunbonding delegation and delegate back to previous validator.",
        "operationId": "Msg_CancelUnbondingDelegation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/CreateValidator": {
      "post": {
        "summary": "CreateValidator defines a method for creating a new validator.",
        "operationId": "Msg_CreateValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgCreateValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgCreateValidator"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/Delegate": {
      "post": {
        "summary": "Delegate defines a method for performing a delegation of coins\nfrom a delegator to a validator.",
        "operationId": "Msg_Delegate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgDelegateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgDelegate"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/EditValidator": {
      "post": {
        "summary": "EditValidator defines a method for editing an existing validator.",
        "operationId": "Msg_EditValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgEditValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgEditValidator"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/Undelegate": {
      "post": {
        "summary": "Undelegate defines a method for performing an undelegation from a\ndelegate and a validator.",
        "operationId": "Msg_Undelegate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgUndelegateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgUndelegate"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.staking.v1beta1.Msg/UpdateParams": {
      "post": {
        "summary": "UpdateParams defines an operation for updating the x/staking module\nparameters.",
        "operationId": "Msg_UpdateParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgUpdateParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.MsgUpdateParams"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.staking.v1beta1.CommissionRates": {
      "type": "object",
      "properties": {
        "rate": {
          "type": "string",
          "description": "rate is the commission rate charged to delegators, as a fraction."
        },
        "max_rate": {
          "type": "string",
          "description": "max_rate defines the maximum commission rate which validator can ever\ncharge, as a fraction."
        },
        "max_change_rate": {
          "type": "string",
          "description": "max_change_rate defines the maximum daily increase of the validator\ncommission, as a fraction."
        }
      },
      "description": "CommissionRates defines the initial commission rates to be used for creating\na validator."
    },
    "cosmos.staking.v1beta1.Description": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string",
          "description": "moniker defines a human-readable name for the validator."
        },
        "identity": {
          "type": "string",
          "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
        },
        "website": {
          "type": "string",
          "description": "website defines an optional website link."
        },
        "security_contact": {
          "type": "string",
          "description": "security_contact defines an optional email for security contact."
        },
        "details": {
          "type": "string",
          "description": "details define other optional details."
        }
      },
      "description": "Description defines a validator description."
    },
    "cosmos.staking.v1beta1.MsgBeginRedelegate": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string"
        },
        "validator_src_address": {
          "type": "string"
        },
        "validator_dst_address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation\nof coins from a delegator and source validator to a destination validator."
    },
    "cosmos.staking.v1beta1.MsgBeginRedelegateResponse": {
      "type": "object",
      "properties": {
        "completion_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type."
    },
    "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string"
        },
        "validator_address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "title": "amount is always less than or equal to unbonding delegation entry balance"
        },
        "creation_height": {
          "type": "string",
          "format": "int64",
          "description": "creation_height is the height which the unbonding took place."
        }
      },
      "title": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel\nunbonding delegation for delegator"
    },
    "cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse": {
      "type": "object",
      "title": "MsgCancelUnbondingDelegationResponse"
    },
    "cosmos.staking.v1beta1.MsgCreateValidator": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Description"
        },
        "commission": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates"
        },
        "min_self_delegation": {
          "type": "string"
        },
        "delegator_address": {
          "type": "string",
          "description": "Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.\nThe validator address bytes and delegator address bytes refer to the same\naccount while creating validator (defer only in bech32 notation)."
        },
        "validator_address": {
          "type": "string"
        },
        "pubkey": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "value": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "MsgCreateValidator defines a SDK message for creating a new validator."
    },
    "cosmos.staking.v1beta1.MsgCreateValidatorResponse": {
      "type": "object",
      "description": "MsgCreateValidatorResponse defines the Msg/CreateValidator response type."
    },
    "cosmos.staking.v1beta1.MsgDelegate": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string"
        },
        "validator_address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "MsgDelegate defines a SDK message for performing a delegation of coins\nfrom a delegator to a validator."
    },
    "cosmos.staking.v1beta1.MsgDelegateResponse": {
      "type": "object",
      "description": "MsgDelegateResponse defines the Msg/Delegate response type."
    },
    "cosmos.staking.v1beta1.MsgEditValidator": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Description"
        },
        "validator_address": {
          "type": "string"
        },
        "commission_rate": {
          "type": "string",
          "title": "We pass a reference to the new commission rate and min self delegation as\nit's not mandatory to update. If not updated, the deserialized rate will be\nzero with no way to distinguish if an update was intended.\nREF: #2373"
        },
        "min_self_delegation": {
          "type": "string"
        }
      },
      "description": "MsgEditValidator defines a SDK message for editing an existing validator."
    },
    "cosmos.staking.v1beta1.MsgEditValidatorResponse": {
      "type": "object",
      "description": "MsgEditValidatorResponse defines the Msg/EditValidator response type."
    },
    "cosmos.staking.v1beta1.MsgUndelegate": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string"
        },
        "validator_address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "MsgUndelegate defines a SDK message for performing an undelegation from a\ndelegate and a validator."
    },
    "cosmos.staking.v1beta1.MsgUndelegateResponse": {
      "type": "object",
      "properties": {
        "completion_time": {
          "type": "string",
          "format": "date-time"
        },
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "title": "amount returns the amount of undelegated coins"
        }
      },
      "description": "MsgUndelegateResponse defines the Msg/Undelegate response type."
    },
    "cosmos.staking.v1beta1.MsgUpdateParams": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "authority is the address that controls the module (defaults to x/gov unless\noverwritten)."
        },
        "params": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Params",
          "description": "params defines the x/staking parameters to update.\n\nNOTE: All parameters must be supplied."
        }
      },
      "description": "MsgUpdateParams is the Msg/UpdateParams request type."
    },
    "cosmos.staking.v1beta1.MsgUpdateParamsResponse": {
      "type": "object",
      "description": "MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message."
    },
    "cosmos.staking.v1beta1.Params": {
      "type": "object",
      "properties": {
        "unbonding_time": {
          "type": "string",
          "description": "unbonding_time is the time duration of unbonding."
        },
        "max_validators": {
          "type": "integer",
          "format": "int64",
          "description": "max_validators is the maximum number of validators."
        },
        "max_entries": {
          "type": "integer",
          "format": "int64",
          "description": "max_entries is the max entries for either unbonding delegation or\nredelegation (per pair/trio)."
        },
        "historical_entries": {
          "type": "integer",
          "format": "int64",
          "description": "historical_entries is the number of historical entries to persist."
        },
        "bond_denom": {
          "type": "string",
          "description": "bond_denom defines the bondable coin denomination."
        },
        "min_commission_rate": {
          "type": "string",
          "title": "min_commission_rate is the chain-wide minimum commission rate that a\nvalidator can charge their delegators"
        }
      },
      "description": "Params defines the parameters for the x/staking module."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
