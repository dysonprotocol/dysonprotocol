{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/gov/v1beta1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos.gov.v1beta1.Msg/Deposit": {
      "post": {
        "summary": "Deposit defines a method to add deposit on a specific proposal.",
        "operationId": "Msg_Deposit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgDeposit"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.gov.v1beta1.Msg/SubmitProposal": {
      "post": {
        "summary": "SubmitProposal defines a method to create new proposal given a content.",
        "operationId": "Msg_SubmitProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgSubmitProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgSubmitProposal"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.gov.v1beta1.Msg/Vote": {
      "post": {
        "summary": "Vote defines a method to add a vote on a specific proposal.",
        "operationId": "Msg_Vote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgVote"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.gov.v1beta1.Msg/VoteWeighted": {
      "post": {
        "summary": "VoteWeighted defines a method to add a weighted vote on a specific\nproposal.",
        "operationId": "Msg_VoteWeighted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgVoteWeightedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.MsgVoteWeighted"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.gov.v1beta1.MsgDeposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "depositor": {
          "type": "string",
          "description": "depositor defines the deposit addresses from the proposals."
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "amount to be deposited by depositor."
        }
      },
      "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
    },
    "cosmos.gov.v1beta1.MsgDepositResponse": {
      "type": "object",
      "description": "MsgDepositResponse defines the Msg/Deposit response type."
    },
    "cosmos.gov.v1beta1.MsgSubmitProposal": {
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "content is the proposal's content."
        },
        "initial_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "initial_deposit is the deposit value that must be paid at proposal\nsubmission."
        },
        "proposer": {
          "type": "string",
          "description": "proposer is the account address of the proposer."
        }
      },
      "description": "MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary\nproposal Content."
    },
    "cosmos.gov.v1beta1.MsgSubmitProposalResponse": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        }
      },
      "description": "MsgSubmitProposalResponse defines the Msg/SubmitProposal response type."
    },
    "cosmos.gov.v1beta1.MsgVote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the voter address for the proposal."
        },
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption",
          "description": "option defines the vote option."
        }
      },
      "description": "MsgVote defines a message to cast a vote."
    },
    "cosmos.gov.v1beta1.MsgVoteResponse": {
      "type": "object",
      "description": "MsgVoteResponse defines the Msg/Vote response type."
    },
    "cosmos.gov.v1beta1.MsgVoteWeighted": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the voter address for the proposal."
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
          },
          "description": "options defines the weighted vote options."
        }
      },
      "description": "MsgVoteWeighted defines a message to cast a vote."
    },
    "cosmos.gov.v1beta1.MsgVoteWeightedResponse": {
      "type": "object",
      "description": "MsgVoteWeightedResponse defines the Msg/VoteWeighted response type."
    },
    "cosmos.gov.v1beta1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.gov.v1beta1.WeightedVoteOption": {
      "type": "object",
      "properties": {
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption",
          "description": "option defines the valid vote options, it must not contain duplicate vote\noptions."
        },
        "weight": {
          "type": "string",
          "description": "weight is the vote weight associated with the vote option."
        }
      },
      "description": "WeightedVoteOption defines a unit of vote for vote split."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
