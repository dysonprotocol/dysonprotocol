{
  "swagger": "2.0",
  "info": {
    "title": "dysonprotocol/script/v1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/dysonprotocol.script.v1.Msg/CreateNewScript": {
      "post": {
        "summary": "Create a new script with new address = hash(creator + content), a new authz\nupdatescript permission will also be created for the creator",
        "operationId": "Msg_CreateNewScript",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgCreateNewScriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgCreateNewScript"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.script.v1.Msg/ExecScript": {
      "post": {
        "summary": "ExecScript executes a script by calling a function with arguments.",
        "operationId": "Msg_ExecScript",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgExecResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgExec"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.script.v1.Msg/UpdateParams": {
      "post": {
        "summary": "UpdateParams defines a governance operation for updating the x/script\nmodule parameters. The authority defaults to the x/gov module account.",
        "operationId": "Msg_UpdateParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgUpdateParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgUpdateParams"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/dysonprotocol.script.v1.Msg/UpdateScript": {
      "post": {
        "summary": "Update Script updates the script of the given address and increments the\nthe version.",
        "operationId": "Msg_UpdateScript",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgUpdateScriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dysonprotocol.script.v1.MsgUpdateScript"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "dysonprotocol.script.v1.MsgCreateNewScript": {
      "type": "object",
      "properties": {
        "creator_address": {
          "type": "string",
          "description": "creator is the account address creating the script."
        },
        "code": {
          "type": "string",
          "description": "code is the script content."
        }
      },
      "description": "MsgCreateNewScript is the Msg/CreateNewScript request type."
    },
    "dysonprotocol.script.v1.MsgCreateNewScriptResponse": {
      "type": "object",
      "properties": {
        "script_address": {
          "type": "string",
          "description": "script_address is the address of the newly created script."
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "description": "version is the initial script version."
        }
      },
      "description": "MsgCreateNewScriptResponse is the Msg/CreateNewScript response type."
    },
    "dysonprotocol.script.v1.MsgExec": {
      "type": "object",
      "properties": {
        "executor_address": {
          "type": "string",
          "description": "executor is the account address used to execute the script."
        },
        "script_address": {
          "type": "string",
          "title": "address is the script address to execute.\nThis can be either a bech32 address or a nameservice name (e.g.,\n\"example.dys\")"
        },
        "extra_code": {
          "type": "string",
          "description": "Only if the executor is the owner of the script  will the optional\nextra_code be temporary appended to the script for this message before\ncalling the function."
        },
        "function_name": {
          "type": "string",
          "title": "The function name to run"
        },
        "args": {
          "type": "string",
          "title": "The positional arguments to pass to the function (*args) encoded as a\njson list"
        },
        "kwargs": {
          "type": "string",
          "title": "The keyword argument to pass to the function (**kwargs) encoded as a\njson dict"
        },
        "attached_messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "The list of messages to run before the script and the result will be\navailable in `dys.get_attached_messages()`. If any of the attached messages\nfails, the script execution will be aborted. The script can assume that the\nattached messages have been executed successfully by virtue of the fact\nthat the script execution will never occur if any of the attached messages\nhad failed. The attached messages are executed in the order they are\nprovided."
        }
      },
      "description": "MsgExec executes a script by calling a function with arguments."
    },
    "dysonprotocol.script.v1.MsgExecResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "description": "result is the final result of the proposal execution."
        },
        "attached_message_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "Results of the attached messages."
        }
      },
      "description": "MsgExecResponse is the Msg/Exec request type."
    },
    "dysonprotocol.script.v1.MsgUpdateParams": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "authority is the address that controls the module (defaults to x/gov unless\noverwritten)."
        },
        "params": {
          "$ref": "#/definitions/dysonprotocol.script.v1.Params",
          "description": "params defines the x/script parameters to update.\n\nNOTE: All parameters must be supplied."
        }
      },
      "description": "MsgUpdateParams is the Msg/UpdateParams request type."
    },
    "dysonprotocol.script.v1.MsgUpdateParamsResponse": {
      "type": "object",
      "description": "MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message."
    },
    "dysonprotocol.script.v1.MsgUpdateScript": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the account address of the script."
        },
        "code": {
          "type": "string",
          "description": "script is the updated script."
        }
      },
      "description": "MsgUpdateScript is the Msg/UpdateScript request type."
    },
    "dysonprotocol.script.v1.MsgUpdateScriptResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "uint64",
          "description": "version is the updated script version."
        }
      },
      "description": "MsgUpdateScriptResponse is the Msg/UpdateScript response type."
    },
    "dysonprotocol.script.v1.Params": {
      "type": "object",
      "properties": {
        "max_relative_historical_blocks": {
          "type": "string",
          "format": "int64",
          "description": "max_relative_historical_blocks defines the maximum number of historical\nblocks relative to the current block height that must be kept by nodes for\nscript queries. For example, if this value is 1000 and the current height\nis 5000, nodes must be able to query blocks back to height 4000."
        },
        "absolute_historical_block_cutoff": {
          "type": "string",
          "format": "int64",
          "description": "absolute_historical_block_cutoff defines the lowest absolute block height\nthat nodes are required to have when max_relative_historical_blocks is\nenforced. This parameter is used when params are updated so that if\nMaxRelativeHistoricalBlocks is increased, nodes are not suddenly required\nto retroactively have historical blocks that predate this cutoff. When\nMaxRelativeHistoricalBlocks validation occurs, the oldest required block\nheight will be max(current_height - max_relative_historical_blocks,\nabsolute_historical_block_cutoff)."
        }
      },
      "description": "Params defines the parameters for the script module."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}