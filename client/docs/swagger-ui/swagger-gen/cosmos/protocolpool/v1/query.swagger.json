{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/protocolpool/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos/protocolpool/v1/community_pool": {
      "get": {
        "summary": "CommunityPool queries the community pool coins.",
        "operationId": "Query_CommunityPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.protocolpool.v1.QueryCommunityPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/protocolpool/v1/continuous_funds": {
      "get": {
        "summary": "ContinuousFunds queries all continuous funds in the store.",
        "operationId": "Query_ContinuousFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.protocolpool.v1.QueryContinuousFundsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/protocolpool/v1/continuous_funds/{recipient}": {
      "get": {
        "summary": "ContinuousFund queries a continuous fund by the recipient is is associated\nwith.",
        "operationId": "Query_ContinuousFund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.protocolpool.v1.QueryContinuousFundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "recipient",
            "description": "recipient is the recipient address to query unclaimed budget amount for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/protocolpool/v1/params": {
      "get": {
        "summary": "Params returns the total set of x/protocolpool parameters.",
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.protocolpool.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.protocolpool.v1.ContinuousFund": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string",
          "description": "Recipient is the address string of the account receiving funds."
        },
        "percentage": {
          "type": "string",
          "description": "Percentage is the percentage of funds to be allocated from Community pool."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Optional, if expiry is set, removes the state object when expired."
        }
      },
      "description": "ContinuousFund defines the fields of continuous fund proposal."
    },
    "cosmos.protocolpool.v1.Params": {
      "type": "object",
      "properties": {
        "enabled_distribution_denoms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "EnabledDistributionDenoms lists the denoms that are allowed to be\ndistributed. This is to avoid spending time distributing undesired tokens\nto continuous funds and budgets."
        },
        "distribution_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "DistributionFrequency is the frequency (in terms of blocks) that funds are\ndistributed out from the x/protocolpool module."
        }
      },
      "description": "Params defines the parameters for the protocolpool module."
    },
    "cosmos.protocolpool.v1.QueryCommunityPoolResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "pool defines community pool's coins."
        }
      },
      "description": "QueryCommunityPoolResponse is the response type for the Query/CommunityPool\nRPC method."
    },
    "cosmos.protocolpool.v1.QueryContinuousFundResponse": {
      "type": "object",
      "properties": {
        "continuous_fund": {
          "$ref": "#/definitions/cosmos.protocolpool.v1.ContinuousFund",
          "description": "ContinuousFunds is the given continuous fund returned in the query."
        }
      },
      "description": "QueryUnclaimedBudgetResponse is the response type for the\nQuery/ContinuousFund RPC method."
    },
    "cosmos.protocolpool.v1.QueryContinuousFundsResponse": {
      "type": "object",
      "properties": {
        "continuous_funds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.protocolpool.v1.ContinuousFund"
          },
          "description": "ContinuousFunds defines all continuous funds in state."
        }
      },
      "description": "QueryUnclaimedBudgetResponse is the response type for the\nQuery/ContinuousFunds RPC method."
    },
    "cosmos.protocolpool.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.protocolpool.v1.Params"
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}