{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/group/v1/tx.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos.group.v1.Msg/CreateGroup": {
      "post": {
        "summary": "CreateGroup creates a new group with an admin account address, a list of\nmembers and some optional metadata.",
        "operationId": "Msg_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroup"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/CreateGroupPolicy": {
      "post": {
        "summary": "CreateGroupPolicy creates a new group policy using given DecisionPolicy.",
        "operationId": "Msg_CreateGroupPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroupPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroupPolicy"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/CreateGroupWithPolicy": {
      "post": {
        "summary": "CreateGroupWithPolicy creates a new group with policy.",
        "operationId": "Msg_CreateGroupWithPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgCreateGroupWithPolicy"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/Exec": {
      "post": {
        "summary": "Exec executes a proposal.",
        "operationId": "Msg_Exec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgExecResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgExec"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/LeaveGroup": {
      "post": {
        "summary": "LeaveGroup allows a group member to leave the group.",
        "operationId": "Msg_LeaveGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgLeaveGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgLeaveGroup"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/SubmitProposal": {
      "post": {
        "summary": "SubmitProposal submits a new proposal.",
        "operationId": "Msg_SubmitProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgSubmitProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgSubmitProposal"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupAdmin": {
      "post": {
        "summary": "UpdateGroupAdmin updates the group admin with given group id and previous\nadmin address.",
        "operationId": "Msg_UpdateGroupAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupAdmin"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupMembers": {
      "post": {
        "summary": "UpdateGroupMembers updates the group members with given group id and admin\naddress.",
        "operationId": "Msg_UpdateGroupMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupMembers"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupMetadata": {
      "post": {
        "summary": "UpdateGroupMetadata updates the group metadata with given group id and\nadmin address.",
        "operationId": "Msg_UpdateGroupMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupMetadata"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupPolicyAdmin": {
      "post": {
        "summary": "UpdateGroupPolicyAdmin updates a group policy admin.",
        "operationId": "Msg_UpdateGroupPolicyAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupPolicyDecisionPolicy": {
      "post": {
        "summary": "UpdateGroupPolicyDecisionPolicy allows a group policy's decision policy to\nbe updated.",
        "operationId": "Msg_UpdateGroupPolicyDecisionPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/UpdateGroupPolicyMetadata": {
      "post": {
        "summary": "UpdateGroupPolicyMetadata updates a group policy metadata.",
        "operationId": "Msg_UpdateGroupPolicyMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/Vote": {
      "post": {
        "summary": "Vote allows a voter to vote on a proposal.",
        "operationId": "Msg_Vote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgVote"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/cosmos.group.v1.Msg/WithdrawProposal": {
      "post": {
        "summary": "WithdrawProposal withdraws a proposal.",
        "operationId": "Msg_WithdrawProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgWithdrawProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.MsgWithdrawProposal"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.group.v1.Exec": {
      "type": "string",
      "enum": [
        "EXEC_UNSPECIFIED",
        "EXEC_TRY"
      ],
      "default": "EXEC_UNSPECIFIED",
      "description": "Exec defines modes of execution of a proposal on creation or on new vote.\n\n - EXEC_UNSPECIFIED: An empty value means that there should be a separate\nMsgExec request for the proposal to execute.\n - EXEC_TRY: Try to execute the proposal immediately.\nIf the proposal is not allowed per the DecisionPolicy,\nthe proposal will still be open and could\nbe executed at a later point."
    },
    "cosmos.group.v1.MemberRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the member's account address."
        },
        "weight": {
          "type": "string",
          "description": "weight is the member's voting weight that should be greater than 0."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the member."
        }
      },
      "description": "MemberRequest represents a group member to be used in Msg server requests.\nContrary to `Member`, it doesn't have any `added_at` field\nsince this field cannot be set as part of requests."
    },
    "cosmos.group.v1.MsgCreateGroup": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
          },
          "description": "members defines the group members."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the group."
        }
      },
      "description": "MsgCreateGroup is the Msg/CreateGroup request type."
    },
    "cosmos.group.v1.MsgCreateGroupPolicy": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the group policy."
        },
        "decision_policy": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "decision_policy specifies the group policy's decision policy."
        }
      },
      "description": "MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
    },
    "cosmos.group.v1.MsgCreateGroupPolicyResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the account address of the newly created group policy."
        }
      },
      "description": "MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type."
    },
    "cosmos.group.v1.MsgCreateGroupResponse": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the newly created group."
        }
      },
      "description": "MsgCreateGroupResponse is the Msg/CreateGroup response type."
    },
    "cosmos.group.v1.MsgCreateGroupWithPolicy": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group and group policy admin."
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
          },
          "description": "members defines the group members."
        },
        "group_metadata": {
          "type": "string",
          "description": "group_metadata is any arbitrary metadata attached to the group."
        },
        "group_policy_metadata": {
          "type": "string",
          "description": "group_policy_metadata is any arbitrary metadata attached to the group\npolicy."
        },
        "group_policy_as_admin": {
          "type": "boolean",
          "description": "group_policy_as_admin is a boolean field, if set to true, the group policy\naccount address will be used as group and group policy admin."
        },
        "decision_policy": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "decision_policy specifies the group policy's decision policy."
        }
      },
      "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
    },
    "cosmos.group.v1.MsgCreateGroupWithPolicyResponse": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the newly created group with policy."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of the newly created group\npolicy."
        }
      },
      "description": "MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response\ntype."
    },
    "cosmos.group.v1.MsgExec": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        },
        "executor": {
          "type": "string",
          "description": "executor is the account address used to execute the proposal."
        }
      },
      "description": "MsgExec is the Msg/Exec request type."
    },
    "cosmos.group.v1.MsgExecResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/cosmos.group.v1.ProposalExecutorResult",
          "description": "result is the final result of the proposal execution."
        }
      },
      "description": "MsgExecResponse is the Msg/Exec request type."
    },
    "cosmos.group.v1.MsgLeaveGroup": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the account address of the group member."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        }
      },
      "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
    },
    "cosmos.group.v1.MsgLeaveGroupResponse": {
      "type": "object",
      "description": "MsgLeaveGroupResponse is the Msg/LeaveGroup response type."
    },
    "cosmos.group.v1.MsgSubmitProposal": {
      "type": "object",
      "properties": {
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of group policy."
        },
        "proposers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "proposers are the account addresses of the proposers.\nProposers signatures will be counted as yes votes."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the proposal."
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal\npasses."
        },
        "exec": {
          "$ref": "#/definitions/cosmos.group.v1.Exec",
          "description": "exec defines the mode of execution of the proposal,\nwhether it should be executed immediately on creation or not.\nIf so, proposers signatures are considered as Yes votes."
        },
        "title": {
          "type": "string",
          "description": "title is the title of the proposal."
        },
        "summary": {
          "type": "string",
          "description": "summary is the summary of the proposal."
        }
      },
      "description": "MsgSubmitProposal is the Msg/SubmitProposal request type."
    },
    "cosmos.group.v1.MsgSubmitProposalResponse": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        }
      },
      "description": "MsgSubmitProposalResponse is the Msg/SubmitProposal response type."
    },
    "cosmos.group.v1.MsgUpdateGroupAdmin": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the current account address of the group admin."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "new_admin": {
          "type": "string",
          "description": "new_admin is the group new admin account address."
        }
      },
      "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
    },
    "cosmos.group.v1.MsgUpdateGroupAdminResponse": {
      "type": "object",
      "description": "MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type."
    },
    "cosmos.group.v1.MsgUpdateGroupMembers": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "member_updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
          },
          "description": "member_updates is the list of members to update,\nset weight to 0 to remove a member."
        }
      },
      "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
    },
    "cosmos.group.v1.MsgUpdateGroupMembersResponse": {
      "type": "object",
      "description": "MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type."
    },
    "cosmos.group.v1.MsgUpdateGroupMetadata": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is the updated group's metadata."
        }
      },
      "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
    },
    "cosmos.group.v1.MsgUpdateGroupMetadataResponse": {
      "type": "object",
      "description": "MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyAdmin": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of the group policy."
        },
        "new_admin": {
          "type": "string",
          "description": "new_admin is the new group policy admin."
        }
      },
      "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse": {
      "type": "object",
      "description": "MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response\ntype."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of group policy."
        },
        "decision_policy": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "decision_policy is the updated group policy's decision policy."
        }
      },
      "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy\nrequest type."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse": {
      "type": "object",
      "description": "MsgUpdateGroupPolicyDecisionPolicyResponse is the\nMsg/UpdateGroupPolicyDecisionPolicy response type."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyMetadata": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of group policy."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is the group policy metadata to be updated."
        }
      },
      "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request\ntype."
    },
    "cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse": {
      "type": "object",
      "description": "MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata\nresponse type."
    },
    "cosmos.group.v1.MsgVote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the voter account address."
        },
        "option": {
          "$ref": "#/definitions/cosmos.group.v1.VoteOption",
          "description": "option is the voter's choice on the proposal."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the vote."
        },
        "exec": {
          "$ref": "#/definitions/cosmos.group.v1.Exec",
          "description": "exec defines whether the proposal should be executed\nimmediately after voting or not."
        }
      },
      "description": "MsgVote is the Msg/Vote request type."
    },
    "cosmos.group.v1.MsgVoteResponse": {
      "type": "object",
      "description": "MsgVoteResponse is the Msg/Vote response type."
    },
    "cosmos.group.v1.MsgWithdrawProposal": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        },
        "address": {
          "type": "string",
          "description": "address is the admin of the group policy or one of the proposer of the\nproposal."
        }
      },
      "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
    },
    "cosmos.group.v1.MsgWithdrawProposalResponse": {
      "type": "object",
      "description": "MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type."
    },
    "cosmos.group.v1.ProposalExecutorResult": {
      "type": "string",
      "enum": [
        "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
        "PROPOSAL_EXECUTOR_RESULT_NOT_RUN",
        "PROPOSAL_EXECUTOR_RESULT_SUCCESS",
        "PROPOSAL_EXECUTOR_RESULT_FAILURE"
      ],
      "default": "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
      "description": "ProposalExecutorResult defines types of proposal executor results.\n\n - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.\n - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.\n - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.\n - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state."
    },
    "cosmos.group.v1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will\nreturn an error.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}