definitions:
  cosmos.auth.v1beta1.AddressBytesToStringResponse:
    description: 'AddressBytesToStringResponse is the response type for AddressString
      rpc

      method.'
    properties:
      address_string:
        type: string
    type: object
  cosmos.auth.v1beta1.AddressStringToBytesResponse:
    description: 'AddressStringToBytesResponse is the response type for AddressBytes
      rpc

      method.'
    properties:
      address_bytes:
        format: byte
        type: string
    type: object
  cosmos.auth.v1beta1.BaseAccount:
    description: 'BaseAccount defines a base account type. It contains all the necessary
      fields

      for basic account functionality. Any custom account type should extend this

      type for additional functionality (e.g. vesting).'
    properties:
      account_number:
        format: uint64
        type: string
      address:
        type: string
      pub_key:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      sequence:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.Bech32PrefixResponse:
    description: Bech32PrefixResponse is the response type for Bech32Prefix rpc method.
    properties:
      bech32_prefix:
        type: string
    type: object
  cosmos.auth.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/auth parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          max_memo_characters:
            format: uint64
            type: string
          sig_verify_cost_ed25519:
            format: uint64
            type: string
          sig_verify_cost_secp256k1:
            format: uint64
            type: string
          tx_sig_limit:
            format: uint64
            type: string
          tx_size_cost_per_byte:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.auth.v1beta1.Params:
    description: Params defines the parameters for the auth module.
    properties:
      max_memo_characters:
        format: uint64
        type: string
      sig_verify_cost_ed25519:
        format: uint64
        type: string
      sig_verify_cost_secp256k1:
        format: uint64
        type: string
      tx_sig_limit:
        format: uint64
        type: string
      tx_size_cost_per_byte:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
    properties:
      account_address:
        type: string
    title: 'QueryAccountAddressByIDResponse is the response type for AccountAddressByID

      rpc method'
    type: object
  cosmos.auth.v1beta1.QueryAccountInfoResponse:
    description: QueryAccountInfoResponse is the Query/AccountInfo response type.
    properties:
      info:
        description: info is the account info which is represented by BaseAccount.
        properties:
          account_number:
            format: uint64
            type: string
          address:
            type: string
          pub_key:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          sequence:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryAccountResponse:
    description: QueryAccountResponse is the response type for the Query/Account RPC
      method.
    properties:
      account:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryAccountsResponse:
    description: QueryAccountsResponse is the response type for the Query/Accounts
      RPC method.
    properties:
      accounts:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: accounts are the existing accounts
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
    description: 'QueryModuleAccountByNameResponse is the response type for the

      Query/ModuleAccountByName RPC method.'
    properties:
      account:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountsResponse:
    description: 'QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts

      RPC method.'
    properties:
      accounts:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
    type: object
  cosmos.auth.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          max_memo_characters:
            format: uint64
            type: string
          sig_verify_cost_ed25519:
            format: uint64
            type: string
          sig_verify_cost_secp256k1:
            format: uint64
            type: string
          tx_sig_limit:
            format: uint64
            type: string
          tx_size_cost_per_byte:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.Grant:
    description: 'Grant gives permissions to execute

      the provide method with expiration time.'
    properties:
      authorization:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      expiration:
        format: date-time
        title: 'time when the grant will expire and will be pruned. If null, then
          the grant

          doesn''t have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)'
        type: string
    type: object
  cosmos.authz.v1beta1.GrantAuthorization:
    properties:
      authorization:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      expiration:
        format: date-time
        type: string
      grantee:
        type: string
      granter:
        type: string
    title: 'GrantAuthorization extends a grant with both the addresses of the grantee
      and

      granter. It is used in genesis.proto and query.proto'
    type: object
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
    description: 'QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants

      RPC method.'
    properties:
      grants:
        description: grants is a list of grants granted to the grantee.
        items:
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              type: string
            grantee:
              type: string
            granter:
              type: string
          title: 'GrantAuthorization extends a grant with both the addresses of the
            grantee and

            granter. It is used in genesis.proto and query.proto'
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGranterGrantsResponse:
    description: 'QueryGranterGrantsResponse is the response type for the Query/GranterGrants

      RPC method.'
    properties:
      grants:
        description: grants is a list of grants granted by the granter.
        items:
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              type: string
            grantee:
              type: string
            granter:
              type: string
          title: 'GrantAuthorization extends a grant with both the addresses of the
            grantee and

            granter. It is used in genesis.proto and query.proto'
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGrantsResponse:
    description: 'QueryGrantsResponse is the response type for the Query/Authorizations
      RPC

      method.'
    properties:
      grants:
        description: authorizations is a list of grants granted for grantee by granter.
        items:
          description: 'Grant gives permissions to execute

            the provide method with expiration time.'
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              title: 'time when the grant will expire and will be pruned. If null,
                then the grant

                doesn''t have a time expiration (other conditions  in `authorization`

                may apply to invalidate the grant)'
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.DenomOwner:
    description: 'DenomOwner defines structure representing an account that owns or
      holds a

      particular denominated token. It contains the account address and account

      balance of the denominated token.'
    properties:
      address:
        description: address defines the address that owns a particular denomination.
        type: string
      balance:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.DenomUnit:
    description: 'DenomUnit represents a struct that describes a given

      denomination unit of the basic token.'
    properties:
      aliases:
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
        type: array
      denom:
        description: denom represents the string name of the given denom unit (e.g
          uatom).
        type: string
      exponent:
        description: 'exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit''s denom

          1 denom = 10^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of ''atom''
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).'
        format: int64
        type: integer
    type: object
  cosmos.bank.v1beta1.Input:
    description: Input models transaction input.
    properties:
      address:
        type: string
      coins:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.Metadata:
    description: 'Metadata represents a struct that describes

      a basic token.'
    properties:
      base:
        description: base represents the base denom (should be the DenomUnit with
          exponent = 0).
        type: string
      denom_units:
        items:
          description: 'DenomUnit represents a struct that describes a given

            denomination unit of the basic token.'
          properties:
            aliases:
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
              type: array
            denom:
              description: denom represents the string name of the given denom unit
                (e.g uatom).
              type: string
            exponent:
              description: 'exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit''s denom

                1 denom = 10^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of ''atom''
                with

                exponent = 6, thus: 1 atom = 10^6 uatom).'
              format: int64
              type: integer
          type: object
        title: denom_units represents the list of DenomUnit's for a given coin
        type: array
      description:
        type: string
      display:
        description: 'display indicates the suggested denom that should be

          displayed in clients.'
        type: string
      name:
        title: 'name defines the name of the token (eg: Cosmos Atom)'
        type: string
      symbol:
        description: 'symbol is the token symbol usually shown on exchanges (eg: ATOM).
          This can

          be the same as the display.'
        type: string
      uri:
        description: 'URI to a document (on or off-chain) that contains additional
          information.

          Optional.'
        type: string
      uri_hash:
        description: 'URIHash is a sha256 hash of a document pointed by URI. It''s
          used to verify

          that the document didn''t change. Optional.'
        type: string
    type: object
  cosmos.bank.v1beta1.MsgMultiSend:
    description: MsgMultiSend represents an arbitrary multi-in, multi-out send message.
    properties:
      inputs:
        description: 'Inputs, despite being `repeated`, only allows one sender input.
          This is

          checked in MsgMultiSend''s ValidateBasic.'
        items:
          description: Input models transaction input.
          properties:
            address:
              type: string
            coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        type: array
      outputs:
        items:
          description: Output models transaction outputs.
          properties:
            address:
              type: string
            coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.MsgMultiSendResponse:
    description: MsgMultiSendResponse defines the Msg/MultiSend response type.
    type: object
  cosmos.bank.v1beta1.MsgSend:
    description: MsgSend represents a message to send coins from one account to another.
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      from_address:
        type: string
      to_address:
        type: string
    type: object
  cosmos.bank.v1beta1.MsgSendResponse:
    description: MsgSendResponse defines the Msg/Send response type.
    type: object
  cosmos.bank.v1beta1.MsgSetSendEnabled:
    description: 'MsgSetSendEnabled is the Msg/SetSendEnabled request type.


      Only entries to add/update/delete need to be included.

      Existing SendEnabled entries that are not included in this

      message are left unchanged.'
    properties:
      authority:
        description: authority is the address that controls the module.
        type: string
      send_enabled:
        description: send_enabled is the list of entries to add or update.
        items:
          description: 'SendEnabled maps coin denom to a send_enabled status (whether
            a denom is

            sendable).'
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
      use_default_for:
        description: 'use_default_for is a list of denoms that should use the

          params.default_send_enabled value. Denoms listed here will have their

          SendEnabled entries deleted. If a denom is included that doesn''t have a

          SendEnabled entry, it will be ignored.'
        items:
          type: string
        type: array
    type: object
  cosmos.bank.v1beta1.MsgSetSendEnabledResponse:
    description: MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response
      type.
    type: object
  cosmos.bank.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/bank parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          default_send_enabled:
            type: boolean
          send_enabled:
            description: 'Deprecated: Use of SendEnabled in params is deprecated.

              For genesis, use the newly added send_enabled field in the genesis object.

              Storage, lookup, and manipulation of this information is now in the
              keeper.


              As of cosmos-sdk 0.47, this only exists for backwards compatibility
              of

              genesis files.'
            items:
              description: 'SendEnabled maps coin denom to a send_enabled status (whether
                a denom is

                sendable).'
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              type: object
            type: array
        type: object
    type: object
  cosmos.bank.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.bank.v1beta1.Output:
    description: Output models transaction outputs.
    properties:
      address:
        type: string
      coins:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.Params:
    description: Params defines the parameters for the bank module.
    properties:
      default_send_enabled:
        type: boolean
      send_enabled:
        description: 'Deprecated: Use of SendEnabled in params is deprecated.

          For genesis, use the newly added send_enabled field in the genesis object.

          Storage, lookup, and manipulation of this information is now in the keeper.


          As of cosmos-sdk 0.47, this only exists for backwards compatibility of

          genesis files.'
        items:
          description: 'SendEnabled maps coin denom to a send_enabled status (whether
            a denom is

            sendable).'
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    description: 'QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.'
    properties:
      balances:
        description: balances is the balances of all the coins.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryBalanceResponse:
    description: QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
    properties:
      balance:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse:
    description: 'QueryDenomMetadataByQueryStringResponse is the response type for
      the

      Query/DenomMetadata RPC method. Identical with QueryDenomMetadataResponse but

      receives denom as query string in request.'
    properties:
      metadata:
        description: 'Metadata represents a struct that describes

          a basic token.'
        properties:
          base:
            description: base represents the base denom (should be the DenomUnit with
              exponent = 0).
            type: string
          denom_units:
            items:
              description: 'DenomUnit represents a struct that describes a given

                denomination unit of the basic token.'
              properties:
                aliases:
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
                  type: array
                denom:
                  description: denom represents the string name of the given denom
                    unit (e.g uatom).
                  type: string
                exponent:
                  description: 'exponent represents power of 10 exponent that one
                    must

                    raise the base_denom to in order to equal the given DenomUnit''s
                    denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit of
                    ''atom'' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).'
                  format: int64
                  type: integer
              type: object
            title: denom_units represents the list of DenomUnit's for a given coin
            type: array
          description:
            type: string
          display:
            description: 'display indicates the suggested denom that should be

              displayed in clients.'
            type: string
          name:
            title: 'name defines the name of the token (eg: Cosmos Atom)'
            type: string
          symbol:
            description: 'symbol is the token symbol usually shown on exchanges (eg:
              ATOM). This can

              be the same as the display.'
            type: string
          uri:
            description: 'URI to a document (on or off-chain) that contains additional
              information.

              Optional.'
            type: string
          uri_hash:
            description: 'URIHash is a sha256 hash of a document pointed by URI. It''s
              used to verify

              that the document didn''t change. Optional.'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    description: 'QueryDenomMetadataResponse is the response type for the Query/DenomMetadata

      RPC method.'
    properties:
      metadata:
        description: 'Metadata represents a struct that describes

          a basic token.'
        properties:
          base:
            description: base represents the base denom (should be the DenomUnit with
              exponent = 0).
            type: string
          denom_units:
            items:
              description: 'DenomUnit represents a struct that describes a given

                denomination unit of the basic token.'
              properties:
                aliases:
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
                  type: array
                denom:
                  description: denom represents the string name of the given denom
                    unit (e.g uatom).
                  type: string
                exponent:
                  description: 'exponent represents power of 10 exponent that one
                    must

                    raise the base_denom to in order to equal the given DenomUnit''s
                    denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit of
                    ''atom'' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).'
                  format: int64
                  type: integer
              type: object
            title: denom_units represents the list of DenomUnit's for a given coin
            type: array
          description:
            type: string
          display:
            description: 'display indicates the suggested denom that should be

              displayed in clients.'
            type: string
          name:
            title: 'name defines the name of the token (eg: Cosmos Atom)'
            type: string
          symbol:
            description: 'symbol is the token symbol usually shown on exchanges (eg:
              ATOM). This can

              be the same as the display.'
            type: string
          uri:
            description: 'URI to a document (on or off-chain) that contains additional
              information.

              Optional.'
            type: string
          uri_hash:
            description: 'URIHash is a sha256 hash of a document pointed by URI. It''s
              used to verify

              that the document didn''t change. Optional.'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse:
    description: 'QueryDenomOwnersByQueryResponse defines the RPC response of a

      DenomOwnersByQuery RPC query.'
    properties:
      denom_owners:
        items:
          description: 'DenomOwner defines structure representing an account that
            owns or holds a

            particular denominated token. It contains the account address and account

            balance of the denominated token.'
          properties:
            address:
              description: address defines the address that owns a particular denomination.
              type: string
            balance:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersResponse:
    description: QueryDenomOwnersResponse defines the RPC response of a DenomOwners
      RPC query.
    properties:
      denom_owners:
        items:
          description: 'DenomOwner defines structure representing an account that
            owns or holds a

            particular denominated token. It contains the account address and account

            balance of the denominated token.'
          properties:
            address:
              description: address defines the address that owns a particular denomination.
              type: string
            balance:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    description: 'QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata

      RPC method.'
    properties:
      metadatas:
        description: metadata provides the client information for all the registered
          tokens.
        items:
          description: 'Metadata represents a struct that describes

            a basic token.'
          properties:
            base:
              description: base represents the base denom (should be the DenomUnit
                with exponent = 0).
              type: string
            denom_units:
              items:
                description: 'DenomUnit represents a struct that describes a given

                  denomination unit of the basic token.'
                properties:
                  aliases:
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                    type: array
                  denom:
                    description: denom represents the string name of the given denom
                      unit (e.g uatom).
                    type: string
                  exponent:
                    description: 'exponent represents power of 10 exponent that one
                      must

                      raise the base_denom to in order to equal the given DenomUnit''s
                      denom

                      1 denom = 10^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a DenomUnit
                      of ''atom'' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).'
                    format: int64
                    type: integer
                type: object
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
            description:
              type: string
            display:
              description: 'display indicates the suggested denom that should be

                displayed in clients.'
              type: string
            name:
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
            symbol:
              description: 'symbol is the token symbol usually shown on exchanges
                (eg: ATOM). This can

                be the same as the display.'
              type: string
            uri:
              description: 'URI to a document (on or off-chain) that contains additional
                information.

                Optional.'
              type: string
            uri_hash:
              description: 'URIHash is a sha256 hash of a document pointed by URI.
                It''s used to verify

                that the document didn''t change. Optional.'
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse defines the response type for querying x/bank
      parameters.
    properties:
      params:
        description: params provides the parameters of the bank module.
        properties:
          default_send_enabled:
            type: boolean
          send_enabled:
            description: 'Deprecated: Use of SendEnabled in params is deprecated.

              For genesis, use the newly added send_enabled field in the genesis object.

              Storage, lookup, and manipulation of this information is now in the
              keeper.


              As of cosmos-sdk 0.47, this only exists for backwards compatibility
              of

              genesis files.'
            items:
              description: 'SendEnabled maps coin denom to a send_enabled status (whether
                a denom is

                sendable).'
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              type: object
            type: array
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySendEnabledResponse:
    description: QuerySendEnabledResponse defines the RPC response of a SendEnable
      query.
    properties:
      pagination:
        description: 'pagination defines the pagination in the response. This field
          is only

          populated if the denoms field in the request is empty.'
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      send_enabled:
        items:
          description: 'SendEnabled maps coin denom to a send_enabled status (whether
            a denom is

            sendable).'
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
    description: 'QuerySpendableBalanceByDenomResponse defines the gRPC response structure
      for

      querying an account''s spendable balance for a specific denom.'
    properties:
      balance:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
    description: 'QuerySpendableBalancesResponse defines the gRPC response structure
      for

      querying an account''s spendable balances.'
    properties:
      balances:
        description: balances is the spendable balances of all the coins.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
      RPC method.
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      supply:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: supply is the supply of the coins
        type: array
    title: 'QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method'
    type: object
  cosmos.bank.v1beta1.SendEnabled:
    description: 'SendEnabled maps coin denom to a send_enabled status (whether a
      denom is

      sendable).'
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    type: object
  cosmos.base.abci.v1beta1.ABCIMessageLog:
    description: ABCIMessageLog defines a structure containing an indexed tx ABCI
      message log.
    properties:
      events:
        description: 'Events contains a slice of Event objects that were emitted during
          some

          execution.'
        items:
          description: 'StringEvent defines en Event object wrapper where all the
            attributes

            contain key/value pairs that are strings instead of raw bytes.'
          properties:
            attributes:
              items:
                description: 'Attribute defines an attribute wrapper where the key
                  and value are

                  strings instead of raw bytes.'
                properties:
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        type: string
      msg_index:
        format: int64
        type: integer
    type: object
  cosmos.base.abci.v1beta1.Attribute:
    description: 'Attribute defines an attribute wrapper where the key and value are

      strings instead of raw bytes.'
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  cosmos.base.abci.v1beta1.GasInfo:
    description: GasInfo defines tx execution gas context.
    properties:
      gas_used:
        description: GasUsed is the amount of gas actually consumed.
        format: uint64
        type: string
      gas_wanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        format: uint64
        type: string
    type: object
  cosmos.base.abci.v1beta1.Result:
    description: Result is the union of ResponseFormat and ResponseCheckTx.
    properties:
      data:
        description: 'Data is any data returned from message or handler execution.
          It MUST be

          length prefixed in order to separate data from multiple message executions.

          Deprecated. This field is still populated, but prefer msg_response instead

          because it also contains the Msg response typeURL.'
        format: byte
        type: string
      events:
        description: 'Events contains a slice of Event objects that were emitted during
          message

          or handler execution.'
        items:
          description: 'Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.'
          properties:
            attributes:
              items:
                description: EventAttribute is a single key-value pair, associated
                  with an event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        description: Log contains the log information from message or handler execution.
        type: string
      msg_responses:
        description: msg_responses contains the Msg handler responses type packed
          in Anys.
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
    type: object
  cosmos.base.abci.v1beta1.StringEvent:
    description: 'StringEvent defines en Event object wrapper where all the attributes

      contain key/value pairs that are strings instead of raw bytes.'
    properties:
      attributes:
        items:
          description: 'Attribute defines an attribute wrapper where the key and value
            are

            strings instead of raw bytes.'
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        type: array
      type:
        type: string
    type: object
  cosmos.base.abci.v1beta1.TxResponse:
    description: 'TxResponse defines a structure containing relevant tx data and metadata.
      The

      tags are stringified and the log is JSON decoded.'
    properties:
      code:
        description: Response code.
        format: int64
        type: integer
      codespace:
        title: Namespace for the Code
        type: string
      data:
        description: Result bytes, if any.
        type: string
      events:
        description: 'Events defines all the events emitted by processing a transaction.
          Note,

          these events include those emitted by processing all the messages and those

          emitted from the ante. Whereas Logs contains the events, with

          additional metadata, emitted only by processing the messages.'
        items:
          description: 'Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.'
          properties:
            attributes:
              items:
                description: EventAttribute is a single key-value pair, associated
                  with an event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      gas_used:
        description: Amount of gas consumed by transaction.
        format: int64
        type: string
      gas_wanted:
        description: Amount of gas requested for transaction.
        format: int64
        type: string
      height:
        format: int64
        title: The block height
        type: string
      info:
        description: Additional information. May be non-deterministic.
        type: string
      logs:
        description: The output of the application's logger (typed). May be non-deterministic.
        items:
          description: ABCIMessageLog defines a structure containing an indexed tx
            ABCI message log.
          properties:
            events:
              description: 'Events contains a slice of Event objects that were emitted
                during some

                execution.'
              items:
                description: 'StringEvent defines en Event object wrapper where all
                  the attributes

                  contain key/value pairs that are strings instead of raw bytes.'
                properties:
                  attributes:
                    items:
                      description: 'Attribute defines an attribute wrapper where the
                        key and value are

                        strings instead of raw bytes.'
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            log:
              type: string
            msg_index:
              format: int64
              type: integer
          type: object
        type: array
      raw_log:
        description: 'The output of the application''s logger (raw string). May be

          non-deterministic.'
        type: string
      timestamp:
        description: 'Time of the previous block. For heights > 1, it''s the weighted
          median of

          the timestamps of the valid votes in the block.LastCommit. For height ==
          1,

          it''s genesis time.'
        type: string
      tx:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      txhash:
        description: The transaction hash.
        type: string
    type: object
  cosmos.base.node.v1beta1.ConfigResponse:
    description: ConfigResponse defines the response structure for the Config gRPC
      query.
    properties:
      halt_height:
        format: uint64
        type: string
      minimum_gas_price:
        type: string
      pruning_interval:
        type: string
      pruning_keep_recent:
        type: string
    type: object
  cosmos.base.node.v1beta1.StatusResponse:
    description: StateResponse defines the response structure for the status of a
      node.
    properties:
      app_hash:
        format: byte
        type: string
      earliest_store_height:
        format: uint64
        type: string
      height:
        format: uint64
        type: string
      timestamp:
        format: date-time
        type: string
      validator_hash:
        format: byte
        type: string
    type: object
  cosmos.base.query.v1beta1.PageRequest:
    description: "message SomeRequest {\n         Foo some_parameter = 1;\n      \
      \   PageRequest pagination = 2;\n }"
    properties:
      count_total:
        description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        type: boolean
      key:
        description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        type: string
      limit:
        description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        type: string
      offset:
        description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        type: string
      reverse:
        description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        type: boolean
    title: 'PageRequest is to be embedded in gRPC request messages for efficient

      pagination. Ex:'
    type: object
  cosmos.base.query.v1beta1.PageResponse:
    description: "PageResponse is to be embedded in gRPC response messages where the\n\
      corresponding request message has used PageRequest.\n\n message SomeResponse\
      \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    properties:
      next_key:
        description: 'next_key is the key to be passed to PageRequest.key to

          query the next page most efficiently. It will be empty if

          there are no more results.'
        format: byte
        type: string
      total:
        format: uint64
        title: 'total is total number of results available if PageRequest.count_total

          was set, its value is undefined otherwise'
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
    description: 'ABCIQueryResponse defines the response structure for the ABCIQuery
      gRPC

      query.


      Note: This type is a duplicate of the ResponseQuery proto type defined in

      Tendermint.'
    properties:
      code:
        format: int64
        type: integer
      codespace:
        type: string
      height:
        format: int64
        type: string
      index:
        format: int64
        type: string
      info:
        type: string
      key:
        format: byte
        type: string
      log:
        type: string
      proof_ops:
        description: 'ProofOps is Merkle proof defined by the list of ProofOps.


          Note: This type is a duplicate of the ProofOps proto type defined in

          Tendermint.'
        properties:
          ops:
            items:
              description: 'ProofOp defines an operation used for calculating Merkle
                root. The data could

                be arbitrary format, providing necessary data for example neighbouring
                node

                hash.


                Note: This type is a duplicate of the ProofOp proto type defined in

                Tendermint.'
              properties:
                data:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
                type:
                  type: string
              type: object
            type: array
        type: object
      value:
        format: byte
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.Block:
    description: 'Block is tendermint type Block, with the Header proposer address

      field converted to bech32 string.'
    properties:
      data:
        properties:
          txs:
            description: 'Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We''re just agreeing on the order
              first.

              This means that block.AppHash does not include these txs.'
            items:
              format: byte
              type: string
            type: array
        title: Data contains the set of transactions included in the block
        type: object
      evidence:
        properties:
          evidence:
            items:
              properties:
                duplicate_vote_evidence:
                  description: 'DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting

                    votes.'
                  properties:
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                    validator_power:
                      format: int64
                      type: string
                    vote_a:
                      description: 'Vote represents a prevote or precommit vote from
                        validators for

                        consensus.'
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: 'Vote extension provided by the application.
                            Only valid for precommit

                            messages.'
                          format: byte
                          type: string
                        extension_signature:
                          description: 'Vote extension signature by the validator
                            if they participated in

                            consensus for the associated block.

                            Only valid for precommit messages.'
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: 'Vote signature by the validator if they participated
                            in consensus for the

                            associated block.'
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: "SignedMsgType is a type of signed message\
                            \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                          enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                    vote_b:
                      description: 'Vote represents a prevote or precommit vote from
                        validators for

                        consensus.'
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: 'Vote extension provided by the application.
                            Only valid for precommit

                            messages.'
                          format: byte
                          type: string
                        extension_signature:
                          description: 'Vote extension signature by the validator
                            if they participated in

                            consensus for the associated block.

                            Only valid for precommit messages.'
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: 'Vote signature by the validator if they participated
                            in consensus for the

                            associated block.'
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: "SignedMsgType is a type of signed message\
                            \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                          enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                  type: object
                light_client_attack_evidence:
                  description: 'LightClientAttackEvidence contains evidence of a set
                    of validators attempting

                    to mislead a light client.'
                  properties:
                    byzantine_validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: PublicKey defines the keys available for use with
                              Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                    common_height:
                      format: int64
                      type: string
                    conflicting_block:
                      properties:
                        signed_header:
                          properties:
                            commit:
                              description: 'Commit contains the evidence that a block
                                was committed by a set of

                                validators.'
                              properties:
                                block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                height:
                                  format: int64
                                  type: string
                                round:
                                  format: int32
                                  type: integer
                                signatures:
                                  items:
                                    description: CommitSig is a part of the Vote included
                                      in a Commit.
                                    properties:
                                      block_id_flag:
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        enum:
                                        - BLOCK_ID_FLAG_UNKNOWN
                                        - BLOCK_ID_FLAG_ABSENT
                                        - BLOCK_ID_FLAG_COMMIT
                                        - BLOCK_ID_FLAG_NIL
                                        title: BlockIdFlag indicates which BlockID
                                          the signature is for
                                        type: string
                                      signature:
                                        format: byte
                                        type: string
                                      timestamp:
                                        format: date-time
                                        type: string
                                      validator_address:
                                        format: byte
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            header:
                              description: Header defines the structure of a block
                                header.
                              properties:
                                app_hash:
                                  format: byte
                                  type: string
                                chain_id:
                                  type: string
                                consensus_hash:
                                  format: byte
                                  type: string
                                data_hash:
                                  format: byte
                                  type: string
                                evidence_hash:
                                  format: byte
                                  title: consensus info
                                  type: string
                                height:
                                  format: int64
                                  type: string
                                last_block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                last_commit_hash:
                                  format: byte
                                  title: hashes of block data
                                  type: string
                                last_results_hash:
                                  format: byte
                                  type: string
                                next_validators_hash:
                                  format: byte
                                  type: string
                                proposer_address:
                                  format: byte
                                  type: string
                                time:
                                  format: date-time
                                  type: string
                                validators_hash:
                                  format: byte
                                  title: hashes from the app output from the prev
                                    block
                                  type: string
                                version:
                                  description: 'Consensus captures the consensus rules
                                    for processing a block in the

                                    blockchain, including all blockchain data structures
                                    and the rules of the

                                    application''s state transition machine.'
                                  properties:
                                    app:
                                      format: uint64
                                      type: string
                                    block:
                                      format: uint64
                                      type: string
                                  title: basic block info
                                  type: object
                              type: object
                          type: object
                        validator_set:
                          properties:
                            proposer:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            total_voting_power:
                              format: int64
                              type: string
                            validators:
                              items:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                  type: object
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a Tendermint block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            description: 'proposer_address is the original block proposer address,
              formatted as a

              Bech32 string. In Tendermint, this type is `bytes`, but in the SDK,
              we

              convert it to a Bech32 string for better UX.'
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            description: 'Consensus captures the consensus rules for processing a
              block in the

              blockchain, including all blockchain data structures and the rules of
              the

              application''s state transition machine.'
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            title: basic block info
            type: object
        type: object
      last_commit:
        description: 'Commit contains the evidence that a block was committed by a
          set of

          validators.'
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                  - BLOCK_ID_FLAG_UNKNOWN
                  - BLOCK_ID_FLAG_ABSENT
                  - BLOCK_ID_FLAG_COMMIT
                  - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
    description: 'GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight

      RPC method.'
    properties:
      block:
        properties:
          data:
            properties:
              txs:
                description: 'Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We''re just agreeing on the order
                  first.

                  This means that block.AppHash does not include these txs.'
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: 'DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting

                        votes.'
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: 'LightClientAttackEvidence contains evidence of
                        a set of validators attempting

                        to mislead a light client.'
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: 'Commit contains the evidence that
                                    a block was committed by a set of

                                    validators.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: CommitSig is a part of the Vote
                                          included in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                            title: BlockIdFlag indicates which BlockID
                                              the signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      description: 'Consensus captures the consensus
                                        rules for processing a block in the

                                        blockchain, including all blockchain data
                                        structures and the rules of the

                                        application''s state transition machine.'
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      title: basic block info
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          last_commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        title: 'Deprecated: please use `sdk_block` instead'
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      sdk_block:
        description: 'Block is tendermint type Block, with the Header proposer address

          field converted to bech32 string.'
        properties:
          data:
            properties:
              txs:
                description: 'Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We''re just agreeing on the order
                  first.

                  This means that block.AppHash does not include these txs.'
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: 'DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting

                        votes.'
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: 'LightClientAttackEvidence contains evidence of
                        a set of validators attempting

                        to mislead a light client.'
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: 'Commit contains the evidence that
                                    a block was committed by a set of

                                    validators.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: CommitSig is a part of the Vote
                                          included in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                            title: BlockIdFlag indicates which BlockID
                                              the signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      description: 'Consensus captures the consensus
                                        rules for processing a block in the

                                        blockchain, including all blockchain data
                                        structures and the rules of the

                                        application''s state transition machine.'
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      title: basic block info
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a Tendermint block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                description: 'proposer_address is the original block proposer address,
                  formatted as a

                  Bech32 string. In Tendermint, this type is `bytes`, but in the SDK,
                  we

                  convert it to a Bech32 string for better UX.'
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          last_commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
    description: 'GetLatestBlockResponse is the response type for the Query/GetLatestBlock
      RPC

      method.'
    properties:
      block:
        properties:
          data:
            properties:
              txs:
                description: 'Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We''re just agreeing on the order
                  first.

                  This means that block.AppHash does not include these txs.'
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: 'DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting

                        votes.'
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: 'LightClientAttackEvidence contains evidence of
                        a set of validators attempting

                        to mislead a light client.'
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: 'Commit contains the evidence that
                                    a block was committed by a set of

                                    validators.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: CommitSig is a part of the Vote
                                          included in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                            title: BlockIdFlag indicates which BlockID
                                              the signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      description: 'Consensus captures the consensus
                                        rules for processing a block in the

                                        blockchain, including all blockchain data
                                        structures and the rules of the

                                        application''s state transition machine.'
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      title: basic block info
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          last_commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        title: 'Deprecated: please use `sdk_block` instead'
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      sdk_block:
        description: 'Block is tendermint type Block, with the Header proposer address

          field converted to bech32 string.'
        properties:
          data:
            properties:
              txs:
                description: 'Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We''re just agreeing on the order
                  first.

                  This means that block.AppHash does not include these txs.'
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: 'DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting

                        votes.'
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: 'LightClientAttackEvidence contains evidence of
                        a set of validators attempting

                        to mislead a light client.'
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: 'Commit contains the evidence that
                                    a block was committed by a set of

                                    validators.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: CommitSig is a part of the Vote
                                          included in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                            title: BlockIdFlag indicates which BlockID
                                              the signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      description: 'Consensus captures the consensus
                                        rules for processing a block in the

                                        blockchain, including all blockchain data
                                        structures and the rules of the

                                        application''s state transition machine.'
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      title: basic block info
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a Tendermint block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                description: 'proposer_address is the original block proposer address,
                  formatted as a

                  Bech32 string. In Tendermint, this type is `bytes`, but in the SDK,
                  we

                  convert it to a Bech32 string for better UX.'
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          last_commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
    description: 'GetLatestValidatorSetResponse is the response type for the

      Query/GetValidatorSetByHeight RPC method.'
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      validators:
        items:
          description: Validator is the type for the validator-set.
          properties:
            address:
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
    description: 'GetNodeInfoResponse is the response type for the Query/GetNodeInfo
      RPC

      method.'
    properties:
      application_version:
        description: VersionInfo is the type for the GetNodeInfoResponse message.
        properties:
          app_name:
            type: string
          build_deps:
            items:
              properties:
                path:
                  title: module path
                  type: string
                sum:
                  title: checksum
                  type: string
                version:
                  title: module version
                  type: string
              title: Module is the type for VersionInfo
              type: object
            type: array
          build_tags:
            type: string
          cosmos_sdk_version:
            type: string
          git_commit:
            type: string
          go_version:
            type: string
          name:
            type: string
          version:
            type: string
        type: object
      default_node_info:
        properties:
          channels:
            format: byte
            type: string
          default_node_id:
            type: string
          listen_addr:
            type: string
          moniker:
            type: string
          network:
            type: string
          other:
            properties:
              rpc_address:
                type: string
              tx_index:
                type: string
            type: object
          protocol_version:
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
              p2p:
                format: uint64
                type: string
            type: object
          version:
            type: string
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetSyncingResponse:
    description: GetSyncingResponse is the response type for the Query/GetSyncing
      RPC method.
    properties:
      syncing:
        type: boolean
    type: object
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
    description: 'GetValidatorSetByHeightResponse is the response type for the

      Query/GetValidatorSetByHeight RPC method.'
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      validators:
        items:
          description: Validator is the type for the validator-set.
          properties:
            address:
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Header:
    description: Header defines the structure of a Tendermint block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        description: 'proposer_address is the original block proposer address, formatted
          as a

          Bech32 string. In Tendermint, this type is `bytes`, but in the SDK, we

          convert it to a Bech32 string for better UX.'
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        description: 'Consensus captures the consensus rules for processing a block
          in the

          blockchain, including all blockchain data structures and the rules of the

          application''s state transition machine.'
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
        title: basic block info
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.Module:
    properties:
      path:
        title: module path
        type: string
      sum:
        title: checksum
        type: string
      version:
        title: module version
        type: string
    title: Module is the type for VersionInfo
    type: object
  cosmos.base.tendermint.v1beta1.ProofOp:
    description: 'ProofOp defines an operation used for calculating Merkle root. The
      data could

      be arbitrary format, providing necessary data for example neighbouring node

      hash.


      Note: This type is a duplicate of the ProofOp proto type defined in

      Tendermint.'
    properties:
      data:
        format: byte
        type: string
      key:
        format: byte
        type: string
      type:
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ProofOps:
    description: 'ProofOps is Merkle proof defined by the list of ProofOps.


      Note: This type is a duplicate of the ProofOps proto type defined in

      Tendermint.'
    properties:
      ops:
        items:
          description: 'ProofOp defines an operation used for calculating Merkle root.
            The data could

            be arbitrary format, providing necessary data for example neighbouring
            node

            hash.


            Note: This type is a duplicate of the ProofOp proto type defined in

            Tendermint.'
          properties:
            data:
              format: byte
              type: string
            key:
              format: byte
              type: string
            type:
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Validator:
    description: Validator is the type for the validator-set.
    properties:
      address:
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      voting_power:
        format: int64
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.VersionInfo:
    description: VersionInfo is the type for the GetNodeInfoResponse message.
    properties:
      app_name:
        type: string
      build_deps:
        items:
          properties:
            path:
              title: module path
              type: string
            sum:
              title: checksum
              type: string
            version:
              title: module version
              type: string
          title: Module is the type for VersionInfo
          type: object
        type: array
      build_tags:
        type: string
      cosmos_sdk_version:
        type: string
      git_commit:
        type: string
      go_version:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  cosmos.base.v1beta1.Coin:
    description: 'Coin defines a token with a denomination and an amount.


      NOTE: The amount field is an Int which implements the custom method

      signatures required by gogoproto.'
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.base.v1beta1.DecCoin:
    description: 'DecCoin defines a token with a denomination and a decimal amount.


      NOTE: The amount field is an Dec which implements the custom method

      signatures required by gogoproto.'
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.circuit.v1.AccountResponse:
    description: AccountResponse is the response type for the Query/Account RPC method.
    properties:
      permission:
        description: 'Permissions are the permissions that an account has to trip

          or reset the circuit breaker.'
        properties:
          level:
            default: LEVEL_NONE_UNSPECIFIED
            description: level is the level of permissions granted to this account.
            enum:
            - LEVEL_NONE_UNSPECIFIED
            - LEVEL_SOME_MSGS
            - LEVEL_ALL_MSGS
            - LEVEL_SUPER_ADMIN
            type: string
          limit_type_urls:
            description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit the
              lists of Msg type

              URLs that the account can trip. It is an error to use limit_type_urls
              with

              a level other than LEVEL_SOME_MSGS.'
            items:
              type: string
            type: array
        type: object
    type: object
  cosmos.circuit.v1.AccountsResponse:
    description: AccountsResponse is the response type for the Query/Accounts RPC
      method.
    properties:
      accounts:
        items:
          properties:
            address:
              type: string
            permissions:
              description: 'Permissions are the permissions that an account has to
                trip

                or reset the circuit breaker.'
              properties:
                level:
                  default: LEVEL_NONE_UNSPECIFIED
                  description: level is the level of permissions granted to this account.
                  enum:
                  - LEVEL_NONE_UNSPECIFIED
                  - LEVEL_SOME_MSGS
                  - LEVEL_ALL_MSGS
                  - LEVEL_SUPER_ADMIN
                  type: string
                limit_type_urls:
                  description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit
                    the lists of Msg type

                    URLs that the account can trip. It is an error to use limit_type_urls
                    with

                    a level other than LEVEL_SOME_MSGS.'
                  items:
                    type: string
                  type: array
              type: object
          title: 'GenesisAccountPermissions is the account permissions for the circuit
            breaker

            in genesis'
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.circuit.v1.DisabledListResponse:
    description: 'DisabledListResponse is the response type for the Query/DisabledList
      RPC

      method.'
    properties:
      disabled_list:
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.GenesisAccountPermissions:
    properties:
      address:
        type: string
      permissions:
        description: 'Permissions are the permissions that an account has to trip

          or reset the circuit breaker.'
        properties:
          level:
            default: LEVEL_NONE_UNSPECIFIED
            description: level is the level of permissions granted to this account.
            enum:
            - LEVEL_NONE_UNSPECIFIED
            - LEVEL_SOME_MSGS
            - LEVEL_ALL_MSGS
            - LEVEL_SUPER_ADMIN
            type: string
          limit_type_urls:
            description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit the
              lists of Msg type

              URLs that the account can trip. It is an error to use limit_type_urls
              with

              a level other than LEVEL_SOME_MSGS.'
            items:
              type: string
            type: array
        type: object
    title: 'GenesisAccountPermissions is the account permissions for the circuit breaker

      in genesis'
    type: object
  cosmos.circuit.v1.MsgAuthorizeCircuitBreaker:
    description: 'MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker
      request

      type.'
    properties:
      grantee:
        description: grantee is the account authorized with the provided permissions.
        type: string
      granter:
        description: 'granter is the granter of the circuit breaker permissions and
          must have

          LEVEL_SUPER_ADMIN.'
        type: string
      permissions:
        description: 'permissions are the circuit breaker permissions that the grantee
          receives.

          These will overwrite any existing permissions. LEVEL_NONE_UNSPECIFIED can

          be specified to revoke all permissions.'
        properties:
          level:
            default: LEVEL_NONE_UNSPECIFIED
            description: level is the level of permissions granted to this account.
            enum:
            - LEVEL_NONE_UNSPECIFIED
            - LEVEL_SOME_MSGS
            - LEVEL_ALL_MSGS
            - LEVEL_SUPER_ADMIN
            type: string
          limit_type_urls:
            description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit the
              lists of Msg type

              URLs that the account can trip. It is an error to use limit_type_urls
              with

              a level other than LEVEL_SOME_MSGS.'
            items:
              type: string
            type: array
        type: object
    type: object
  cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse:
    description: 'MsgAuthorizeCircuitBreakerResponse defines the Msg/AuthorizeCircuitBreaker

      response type.'
    properties:
      success:
        type: boolean
    type: object
  cosmos.circuit.v1.MsgResetCircuitBreaker:
    description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request
      type.
    properties:
      authority:
        description: authority is the account authorized to trip or reset the circuit
          breaker.
        type: string
      msg_type_urls:
        description: 'msg_type_urls specifies a list of Msg type URLs to resume processing.
          If

          it is left empty all Msg processing for type URLs that the account is

          authorized to trip will resume.'
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.MsgResetCircuitBreakerResponse:
    description: 'MsgResetCircuitBreakerResponse defines the Msg/ResetCircuitBreaker
      response

      type.'
    properties:
      success:
        type: boolean
    type: object
  cosmos.circuit.v1.MsgTripCircuitBreaker:
    description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request
      type.
    properties:
      authority:
        description: authority is the account authorized to trip the circuit breaker.
        type: string
      msg_type_urls:
        description: 'msg_type_urls specifies a list of type URLs to immediately stop
          processing.

          IF IT IS LEFT EMPTY, ALL MSG PROCESSING WILL STOP IMMEDIATELY.

          This value is validated against the authority''s permissions and if the

          authority does not have permissions to trip the specified msg type URLs

          (or all URLs), the operation will fail.'
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.MsgTripCircuitBreakerResponse:
    description: 'MsgTripCircuitBreakerResponse defines the Msg/TripCircuitBreaker
      response

      type.'
    properties:
      success:
        type: boolean
    type: object
  cosmos.circuit.v1.Permissions:
    description: 'Permissions are the permissions that an account has to trip

      or reset the circuit breaker.'
    properties:
      level:
        default: LEVEL_NONE_UNSPECIFIED
        description: level is the level of permissions granted to this account.
        enum:
        - LEVEL_NONE_UNSPECIFIED
        - LEVEL_SOME_MSGS
        - LEVEL_ALL_MSGS
        - LEVEL_SUPER_ADMIN
        type: string
      limit_type_urls:
        description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists
          of Msg type

          URLs that the account can trip. It is an error to use limit_type_urls with

          a level other than LEVEL_SOME_MSGS.'
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.Permissions.Level:
    default: LEVEL_NONE_UNSPECIFIED
    description: "Level is the permission level.\n\n - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED\
      \ indicates that the account will have no circuit\nbreaker permissions.\n -\
      \ LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission\
      \ to\ntrip or reset the circuit breaker for some Msg type URLs. If this level\n\
      is chosen, a non-empty list of Msg type URLs must be provided in\nlimit_type_urls.\n\
      \ - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset\
      \ the circuit\nbreaker for Msg's of all type URLs.\n - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN\
      \ indicates that the account can take all circuit breaker\nactions and can grant\
      \ permissions to other accounts."
    enum:
    - LEVEL_NONE_UNSPECIFIED
    - LEVEL_SOME_MSGS
    - LEVEL_ALL_MSGS
    - LEVEL_SUPER_ADMIN
    type: string
  cosmos.consensus.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      abci:
        description: 'ABCIParams configure functionality specific to the Application
          Blockchain

          Interface.'
        properties:
          vote_extensions_enable_height:
            description: 'vote_extensions_enable_height configures the first height
              during which

              vote extensions will be enabled. During this specified height, and for
              all

              subsequent heights, precommit messages that do not contain valid extension

              data will be considered invalid. Prior to this height, vote extensions
              will

              not be used or accepted by validators on the network.


              Once enabled, vote extensions will be created by the application in

              ExtendVote, passed to the application for validation in VerifyVoteExtension

              and given to the application to use when proposing a block during

              PrepareProposal.'
            format: int64
            type: string
        type: object
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      block:
        description: 'params defines the x/consensus parameters to update.

          VersionsParams is not included in this Msg because it is tracked

          separarately in x/upgrade.


          NOTE: All parameters must be supplied.'
        properties:
          max_bytes:
            format: int64
            title: 'Max block size, in bytes.

              Note: must be greater than 0'
            type: string
          max_gas:
            format: int64
            title: 'Max gas per block.

              Note: must be greater or equal to -1'
            type: string
        type: object
      evidence:
        description: EvidenceParams determine how we handle evidence of malfeasance.
        properties:
          max_age_duration:
            description: 'Max age of evidence, in time.


              It should correspond with an app''s "unbonding period" or other similar

              mechanism for handling [Nothing-At-Stake

              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
            type: string
          max_age_num_blocks:
            description: 'Max age of evidence, in blocks.


              The basic formula for calculating this is: MaxAgeDuration / {average
              block

              time}.'
            format: int64
            type: string
          max_bytes:
            format: int64
            title: 'This sets the maximum size of total evidence in bytes that can
              be committed

              in a single block. and should fall comfortably under the max block bytes.

              Default is 1048576 or 1MB'
            type: string
        type: object
      validator:
        description: 'ValidatorParams restrict the public key types validators can
          use.

          NOTE: uses ABCI pubkey naming, not Amino names.'
        properties:
          pub_key_types:
            items:
              type: string
            type: array
        type: object
    type: object
  cosmos.consensus.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.consensus.v1.QueryParamsResponse:
    description: 'QueryParamsResponse defines the response type for querying x/consensus

      parameters.'
    properties:
      params:
        description: 'params are the tendermint consensus params stored in the consensus
          module.

          Please note that `params.version` is not populated in this response, it
          is

          tracked separately in the x/upgrade module.'
        properties:
          abci:
            description: 'ABCIParams configure functionality specific to the Application
              Blockchain

              Interface.'
            properties:
              vote_extensions_enable_height:
                description: 'vote_extensions_enable_height configures the first height
                  during which

                  vote extensions will be enabled. During this specified height, and
                  for all

                  subsequent heights, precommit messages that do not contain valid
                  extension

                  data will be considered invalid. Prior to this height, vote extensions
                  will

                  not be used or accepted by validators on the network.


                  Once enabled, vote extensions will be created by the application
                  in

                  ExtendVote, passed to the application for validation in VerifyVoteExtension

                  and given to the application to use when proposing a block during

                  PrepareProposal.'
                format: int64
                type: string
            type: object
          block:
            description: BlockParams contains limits on the block size.
            properties:
              max_bytes:
                format: int64
                title: 'Max block size, in bytes.

                  Note: must be greater than 0'
                type: string
              max_gas:
                format: int64
                title: 'Max gas per block.

                  Note: must be greater or equal to -1'
                type: string
            type: object
          evidence:
            description: EvidenceParams determine how we handle evidence of malfeasance.
            properties:
              max_age_duration:
                description: 'Max age of evidence, in time.


                  It should correspond with an app''s "unbonding period" or other
                  similar

                  mechanism for handling [Nothing-At-Stake

                  attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
                type: string
              max_age_num_blocks:
                description: 'Max age of evidence, in blocks.


                  The basic formula for calculating this is: MaxAgeDuration / {average
                  block

                  time}.'
                format: int64
                type: string
              max_bytes:
                format: int64
                title: 'This sets the maximum size of total evidence in bytes that
                  can be committed

                  in a single block. and should fall comfortably under the max block
                  bytes.

                  Default is 1048576 or 1MB'
                type: string
            type: object
          validator:
            description: 'ValidatorParams restrict the public key types validators
              can use.

              NOTE: uses ABCI pubkey naming, not Amino names.'
            properties:
              pub_key_types:
                items:
                  type: string
                type: array
            type: object
          version:
            description: VersionParams contains the ABCI application version.
            properties:
              app:
                format: uint64
                type: string
            type: object
        type: object
    type: object
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    description: 'CompactBitArray is an implementation of a space efficient bit array.

      This is used to ensure that the encoded data takes up a minimal amount of

      space after proto encoding.

      This is not thread safe, and is not intended for concurrent usage.'
    properties:
      elems:
        format: byte
        type: string
      extra_bits_stored:
        format: int64
        type: integer
    type: object
  cosmos.distribution.v1beta1.DelegationDelegatorReward:
    description: 'DelegationDelegatorReward represents the properties

      of a delegator''s delegation reward.'
    properties:
      reward:
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgCommunityPoolSpend:
    description: 'MsgCommunityPoolSpend defines a message for sending tokens from
      the community

      pool to another account. This message is typically executed via a governance

      proposal with the governance module being the executing authority.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      recipient:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse:
    description: 'MsgCommunityPoolSpendResponse defines the response to executing
      a

      MsgCommunityPoolSpend message.'
    type: object
  cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool:
    description: 'DepositValidatorRewardsPool defines the request structure to provide

      additional rewards to delegators from a specific validator.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        type: string
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse:
    description: 'MsgDepositValidatorRewardsPoolResponse defines the response to executing
      a

      MsgDepositValidatorRewardsPool message.'
    type: object
  cosmos.distribution.v1beta1.MsgFundCommunityPool:
    description: 'MsgFundCommunityPool allows an account to directly

      fund the community pool.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse:
    description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response
      type.
    type: object
  cosmos.distribution.v1beta1.MsgSetWithdrawAddress:
    description: 'MsgSetWithdrawAddress sets the withdraw address for

      a delegator (or validator self-delegation).'
    properties:
      delegator_address:
        type: string
      withdraw_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse:
    description: 'MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress
      response

      type.'
    type: object
  cosmos.distribution.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/distribution parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          base_proposer_reward:
            description: 'Deprecated: The base_proposer_reward field is deprecated
              and is no longer

              used in the x/distribution module''s reward mechanism.'
            type: string
          bonus_proposer_reward:
            description: 'Deprecated: The bonus_proposer_reward field is deprecated
              and is no longer

              used in the x/distribution module''s reward mechanism.'
            type: string
          community_tax:
            type: string
          withdraw_addr_enabled:
            type: boolean
        type: object
    type: object
  cosmos.distribution.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward:
    description: 'MsgWithdrawDelegatorReward represents delegation withdrawal to a
      delegator

      from a single validator.'
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse:
    description: 'MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward

      response type.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission:
    description: 'MsgWithdrawValidatorCommission withdraws the full commission to
      the validator

      address.'
    properties:
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse:
    description: 'MsgWithdrawValidatorCommissionResponse defines the

      Msg/WithdrawValidatorCommission response type.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.Params:
    description: Params defines the set of params for the distribution module.
    properties:
      base_proposer_reward:
        description: 'Deprecated: The base_proposer_reward field is deprecated and
          is no longer

          used in the x/distribution module''s reward mechanism.'
        type: string
      bonus_proposer_reward:
        description: 'Deprecated: The bonus_proposer_reward field is deprecated and
          is no longer

          used in the x/distribution module''s reward mechanism.'
        type: string
      community_tax:
        type: string
      withdraw_addr_enabled:
        type: boolean
    type: object
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
    description: 'QueryCommunityPoolResponse is the response type for the Query/CommunityPool

      RPC method.'
    properties:
      pool:
        description: pool defines community pool's coins.
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
    description: 'QueryDelegationRewardsResponse is the response type for the

      Query/DelegationRewards RPC method.'
    properties:
      rewards:
        description: rewards defines the rewards accrued by a delegation.
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
    description: 'QueryDelegationTotalRewardsResponse is the response type for the

      Query/DelegationTotalRewards RPC method.'
    properties:
      rewards:
        description: rewards defines all the rewards accrued by a delegator.
        items:
          description: 'DelegationDelegatorReward represents the properties

            of a delegator''s delegation reward.'
          properties:
            reward:
              items:
                description: 'DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            validator_address:
              type: string
          type: object
        type: array
      total:
        description: total defines the sum of all the rewards.
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
    description: 'QueryDelegatorValidatorsResponse is the response type for the

      Query/DelegatorValidators RPC method.'
    properties:
      validators:
        description: validators defines the validators a delegator is delegating for.
        items:
          type: string
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
    description: 'QueryDelegatorWithdrawAddressResponse is the response type for the

      Query/DelegatorWithdrawAddress RPC method.'
    properties:
      withdraw_address:
        description: withdraw_address defines the delegator address to query for.
        type: string
    type: object
  cosmos.distribution.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          base_proposer_reward:
            description: 'Deprecated: The base_proposer_reward field is deprecated
              and is no longer

              used in the x/distribution module''s reward mechanism.'
            type: string
          bonus_proposer_reward:
            description: 'Deprecated: The bonus_proposer_reward field is deprecated
              and is no longer

              used in the x/distribution module''s reward mechanism.'
            type: string
          community_tax:
            type: string
          withdraw_addr_enabled:
            type: boolean
        type: object
    type: object
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
    properties:
      commission:
        description: commission defines the commission the validator received.
        properties:
          commission:
            items:
              description: 'DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
    title: 'QueryValidatorCommissionResponse is the response type for the

      Query/ValidatorCommission RPC method'
    type: object
  cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
    description: 'QueryValidatorDistributionInfoResponse is the response type for
      the

      Query/ValidatorDistributionInfo RPC method.'
    properties:
      commission:
        description: commission defines the commission the validator received.
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      operator_address:
        description: operator_address defines the validator operator address.
        type: string
      self_bond_rewards:
        description: self_bond_rewards defines the self delegations rewards.
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
    description: 'QueryValidatorOutstandingRewardsResponse is the response type for
      the

      Query/ValidatorOutstandingRewards RPC method.'
    properties:
      rewards:
        description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
          rewards

          for a validator inexpensive to track, allows simple sanity checks.'
        properties:
          rewards:
            items:
              description: 'DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
    description: 'QueryValidatorSlashesResponse is the response type for the

      Query/ValidatorSlashes RPC method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      slashes:
        description: slashes defines the slashes the validator received.
        items:
          description: 'ValidatorSlashEvent represents a validator slash event.

            Height is implicit within the store key.

            This is needed to calculate appropriate amount of staking tokens

            for delegations which are withdrawn after a slash has occurred.'
          properties:
            fraction:
              type: string
            validator_period:
              format: uint64
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    description: 'ValidatorAccumulatedCommission represents accumulated commission

      for a validator kept as a running counter, can be withdrawn at any time.'
    properties:
      commission:
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
    description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
      rewards

      for a validator inexpensive to track, allows simple sanity checks.'
    properties:
      rewards:
        items:
          description: 'DecCoin defines a token with a denomination and a decimal
            amount.


            NOTE: The amount field is an Dec which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorSlashEvent:
    description: 'ValidatorSlashEvent represents a validator slash event.

      Height is implicit within the store key.

      This is needed to calculate appropriate amount of staking tokens

      for delegations which are withdrawn after a slash has occurred.'
    properties:
      fraction:
        type: string
      validator_period:
        format: uint64
        type: string
    type: object
  cosmos.evidence.v1beta1.MsgSubmitEvidence:
    description: 'MsgSubmitEvidence represents a message that supports submitting
      arbitrary

      Evidence of misbehavior such as equivocation or counterfactual signing.'
    properties:
      evidence:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      submitter:
        description: submitter is the signer account address of evidence.
        type: string
    type: object
  cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse:
    description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response
      type.
    properties:
      hash:
        description: hash defines the hash of the evidence.
        format: byte
        type: string
    type: object
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    description: 'QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.'
    properties:
      evidence:
        description: evidence returns all evidences.
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    description: QueryEvidenceResponse is the response type for the Query/Evidence
      RPC method.
    properties:
      evidence:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    type: object
  cosmos.feegrant.v1beta1.Grant:
    properties:
      allowance:
        description: allowance can be any of basic, periodic, allowed fee allowance.
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      grantee:
        description: 'grantee is the address of the user being granted an allowance
          of another

          user''s funds.'
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their
          funds.
        type: string
    title: Grant is stored in the KVStore to record a grant with full context
    type: object
  cosmos.feegrant.v1beta1.MsgGrantAllowance:
    description: 'MsgGrantAllowance adds permission for Grantee to spend up to Allowance

      of fees from the account of Granter.'
    properties:
      allowance:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      grantee:
        description: 'grantee is the address of the user being granted an allowance
          of another

          user''s funds.'
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their
          funds.
        type: string
    type: object
  cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse:
    description: 'MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse
      response

      type.'
    type: object
  cosmos.feegrant.v1beta1.MsgPruneAllowances:
    description: MsgPruneAllowances prunes expired fee allowances.
    properties:
      pruner:
        description: pruner is the address of the user pruning expired allowances.
        type: string
    type: object
  cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse:
    description: 'MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse
      response

      type.'
    type: object
  cosmos.feegrant.v1beta1.MsgRevokeAllowance:
    description: MsgRevokeAllowance removes any existing Allowance from Granter to
      Grantee.
    properties:
      grantee:
        description: 'grantee is the address of the user being granted an allowance
          of another

          user''s funds.'
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their
          funds.
        type: string
    type: object
  cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse:
    description: 'MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse
      response

      type.'
    type: object
  cosmos.feegrant.v1beta1.QueryAllowanceResponse:
    description: 'QueryAllowanceResponse is the response type for the Query/Allowance
      RPC

      method.'
    properties:
      allowance:
        description: allowance is a allowance granted for grantee by granter.
        properties:
          allowance:
            description: allowance can be any of basic, periodic, allowed fee allowance.
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          grantee:
            description: 'grantee is the address of the user being granted an allowance
              of another

              user''s funds.'
            type: string
          granter:
            description: granter is the address of the user granting an allowance
              of their funds.
            type: string
        title: Grant is stored in the KVStore to record a grant with full context
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
    description: 'QueryAllowancesByGranterResponse is the response type for the

      Query/AllowancesByGranter RPC method.'
    properties:
      allowances:
        description: allowances that have been issued by the granter.
        items:
          properties:
            allowance:
              description: allowance can be any of basic, periodic, allowed fee allowance.
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            grantee:
              description: 'grantee is the address of the user being granted an allowance
                of another

                user''s funds.'
              type: string
            granter:
              description: granter is the address of the user granting an allowance
                of their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesResponse:
    description: 'QueryAllowancesResponse is the response type for the Query/Allowances
      RPC

      method.'
    properties:
      allowances:
        description: allowances are allowance's granted for grantee by granter.
        items:
          properties:
            allowance:
              description: allowance can be any of basic, periodic, allowed fee allowance.
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            grantee:
              description: 'grantee is the address of the user being granted an allowance
                of another

                user''s funds.'
              type: string
            granter:
              description: granter is the address of the user granting an allowance
                of their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.gov.v1.Deposit:
    description: 'Deposit defines an amount deposited by an account address to an
      active

      proposal.'
    properties:
      amount:
        description: amount to be deposited by depositor.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties:
      max_deposit_period:
        description: 'Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.'
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1.MsgCancelProposal:
    description: MsgCancelProposal is the Msg/CancelProposal request type.
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      proposer:
        description: proposer is the account address of the proposer.
        type: string
    type: object
  cosmos.gov.v1.MsgCancelProposalResponse:
    description: 'MsgCancelProposalResponse defines the response structure for executing
      a

      MsgCancelProposal message.'
    properties:
      canceled_height:
        description: canceled_height defines the block height at which the proposal
          is canceled.
        format: uint64
        type: string
      canceled_time:
        description: canceled_time is the time when proposal is canceled.
        format: date-time
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.MsgDeposit:
    description: MsgDeposit defines a message to submit a deposit to an existing proposal.
    properties:
      amount:
        description: amount to be deposited by depositor.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.MsgDepositResponse:
    description: MsgDepositResponse defines the Msg/Deposit response type.
    type: object
  cosmos.gov.v1.MsgExecLegacyContent:
    description: 'MsgExecLegacyContent is used to wrap the legacy content field into
      a message.

      This ensures backwards compatibility with v1beta1.MsgSubmitProposal.'
    properties:
      authority:
        description: authority must be the gov module address.
        type: string
      content:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    type: object
  cosmos.gov.v1.MsgExecLegacyContentResponse:
    description: MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response
      type.
    type: object
  cosmos.gov.v1.MsgSubmitProposal:
    description: 'MsgSubmitProposal defines an sdk.Msg type that supports submitting
      arbitrary

      proposal Content.'
    properties:
      expedited:
        title: expedited defines if the proposal is expedited or not
        type: boolean
      initial_deposit:
        description: 'initial_deposit is the deposit value that must be paid at proposal

          submission.'
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      messages:
        description: messages are the arbitrary messages to be executed if proposal
          passes.
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      metadata:
        description: metadata is any arbitrary metadata attached to the proposal.
        type: string
      proposer:
        description: proposer is the account address of the proposer.
        type: string
      summary:
        title: summary is the summary of the proposal
        type: string
      title:
        description: title is the title of the proposal.
        type: string
    type: object
  cosmos.gov.v1.MsgSubmitProposalResponse:
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response
      type.
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/gov parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          burn_proposal_deposit_prevote:
            title: burn deposits if the proposal does not enter voting period
            type: boolean
          burn_vote_quorum:
            title: burn deposits if a proposal does not meet quorum
            type: boolean
          burn_vote_veto:
            title: burn deposits if quorum with vote type no_veto is met
            type: boolean
          expedited_min_deposit:
            description: Minimum expedited deposit for a proposal to enter voting
              period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          expedited_threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.67.'
            type: string
          expedited_voting_period:
            description: Duration of the voting period of an expedited proposal.
            type: string
          max_deposit_period:
            description: 'Maximum period for Atom holders to deposit on a proposal.
              Initial value: 2

              months.'
            type: string
          min_deposit:
            description: Minimum deposit for a proposal to enter voting period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          min_deposit_ratio:
            description: 'The ratio representing the proportion of the deposit value
              minimum that

              must be met when making a deposit. Default value: 0.01. Meaning that
              for a

              chain with a min_deposit of 100stake, a deposit of 1stake would be

              required.'
            type: string
          min_initial_deposit_ratio:
            description: "The ratio representing the proportion of the deposit value\
              \ that must be\n paid at proposal submission."
            type: string
          proposal_cancel_dest:
            description: 'The address which will receive (proposal_cancel_ratio *
              deposit) proposal

              deposits. If empty, the (proposal_cancel_ratio * deposit) proposal deposits

              will be burned.'
            type: string
          proposal_cancel_ratio:
            description: 'The cancel ratio which will not be returned back to the
              depositors when a

              proposal is cancelled.'
            type: string
          quorum:
            description: "Minimum percentage of total stake needed to vote for a result\
              \ to be\n considered valid."
            type: string
          threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.'
            type: string
          veto_threshold:
            description: "Minimum value of Veto votes to Total votes ratio for proposal\
              \ to be\n vetoed. Default value: 1/3."
            type: string
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
    type: object
  cosmos.gov.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.gov.v1.MsgVote:
    description: MsgVote defines a message to cast a vote.
    properties:
      metadata:
        description: metadata is any arbitrary metadata attached to the Vote.
        type: string
      option:
        default: VOTE_OPTION_UNSPECIFIED
        description: option defines the vote option.
        enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address for the proposal.
        type: string
    type: object
  cosmos.gov.v1.MsgVoteResponse:
    description: MsgVoteResponse defines the Msg/Vote response type.
    type: object
  cosmos.gov.v1.MsgVoteWeighted:
    description: MsgVoteWeighted defines a message to cast a vote.
    properties:
      metadata:
        description: metadata is any arbitrary metadata attached to the VoteWeighted.
        type: string
      options:
        description: options defines the weighted vote options.
        items:
          description: WeightedVoteOption defines a unit of vote for vote split.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'option defines the valid vote options, it must not contain
                duplicate vote

                options.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            weight:
              description: weight is the vote weight associated with the vote option.
              type: string
          type: object
        type: array
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address for the proposal.
        type: string
    type: object
  cosmos.gov.v1.MsgVoteWeightedResponse:
    description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
    type: object
  cosmos.gov.v1.Params:
    description: Params defines the parameters for the x/gov module.
    properties:
      burn_proposal_deposit_prevote:
        title: burn deposits if the proposal does not enter voting period
        type: boolean
      burn_vote_quorum:
        title: burn deposits if a proposal does not meet quorum
        type: boolean
      burn_vote_veto:
        title: burn deposits if quorum with vote type no_veto is met
        type: boolean
      expedited_min_deposit:
        description: Minimum expedited deposit for a proposal to enter voting period.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      expedited_threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.67.'
        type: string
      expedited_voting_period:
        description: Duration of the voting period of an expedited proposal.
        type: string
      max_deposit_period:
        description: 'Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.'
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      min_deposit_ratio:
        description: 'The ratio representing the proportion of the deposit value minimum
          that

          must be met when making a deposit. Default value: 0.01. Meaning that for
          a

          chain with a min_deposit of 100stake, a deposit of 1stake would be

          required.'
        type: string
      min_initial_deposit_ratio:
        description: "The ratio representing the proportion of the deposit value that\
          \ must be\n paid at proposal submission."
        type: string
      proposal_cancel_dest:
        description: 'The address which will receive (proposal_cancel_ratio * deposit)
          proposal

          deposits. If empty, the (proposal_cancel_ratio * deposit) proposal deposits

          will be burned.'
        type: string
      proposal_cancel_ratio:
        description: 'The cancel ratio which will not be returned back to the depositors
          when a

          proposal is cancelled.'
        type: string
      quorum:
        description: "Minimum percentage of total stake needed to vote for a result\
          \ to be\n considered valid."
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.5.'
        type: string
      veto_threshold:
        description: "Minimum value of Veto votes to Total votes ratio for proposal\
          \ to be\n vetoed. Default value: 1/3."
        type: string
      voting_period:
        description: Duration of the voting period.
        type: string
    type: object
  cosmos.gov.v1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      expedited:
        title: expedited defines if the proposal is expedited
        type: boolean
      failed_reason:
        title: failed_reason defines the reason why the proposal failed
        type: string
      final_tally_result:
        description: 'final_tally_result is the final tally result of the proposal.
          When

          querying a proposal via gRPC, this field is not populated until the

          proposal''s voting period has ended.'
        properties:
          abstain_count:
            description: abstain_count is the number of abstain votes on a proposal.
            type: string
          no_count:
            description: no_count is the number of no votes on a proposal.
            type: string
          no_with_veto_count:
            description: no_with_veto_count is the number of no with veto votes on
              a proposal.
            type: string
          yes_count:
            description: yes_count is the number of yes votes on a proposal.
            type: string
        type: object
      id:
        description: id defines the unique id of the proposal.
        format: uint64
        type: string
      messages:
        description: messages are the arbitrary messages to be executed if the proposal
          passes.
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      metadata:
        title: 'metadata is any arbitrary metadata attached to the proposal.

          the recommended format of the metadata is to be found here:

          https://docs.cosmos.network/v0.47/modules/gov#proposal-3'
        type: string
      proposer:
        title: proposer is the address of the proposal sumbitter
        type: string
      status:
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: status defines the proposal status.
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      summary:
        title: summary is a short summary of the proposal
        type: string
      title:
        title: title is the title of the proposal
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: "ProposalStatus enumerates the valid statuses of a proposal.\n\n\
      \ - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default\
      \ proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
      \ defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD:\
      \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
      period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
      \ status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
      \ defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
      \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
      failed."
    enum:
    - PROPOSAL_STATUS_UNSPECIFIED
    - PROPOSAL_STATUS_DEPOSIT_PERIOD
    - PROPOSAL_STATUS_VOTING_PERIOD
    - PROPOSAL_STATUS_PASSED
    - PROPOSAL_STATUS_REJECTED
    - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1.QueryConstitutionResponse:
    properties:
      constitution:
        type: string
    title: 'QueryConstitutionResponse is the response type for the Query/Constitution
      RPC

      method'
    type: object
  cosmos.gov.v1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        description: 'Deposit defines an amount deposited by an account address to
          an active

          proposal.'
        properties:
          amount:
            description: amount to be deposited by depositor.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          depositor:
            description: depositor defines the deposit addresses from the proposals.
            type: string
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits
      RPC method.
    properties:
      deposits:
        description: deposits defines the requested deposits.
        items:
          description: 'Deposit defines an amount deposited by an account address
            to an active

            proposal.'
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      deposit_params:
        description: 'Deprecated: Prefer to use `params` instead.

          deposit_params defines the parameters related to deposit.'
        properties:
          max_deposit_period:
            description: 'Maximum period for Atom holders to deposit on a proposal.
              Initial value: 2

              months.'
            type: string
          min_deposit:
            description: Minimum deposit for a proposal to enter voting period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
      params:
        description: params defines all the paramaters of x/gov module.
        properties:
          burn_proposal_deposit_prevote:
            title: burn deposits if the proposal does not enter voting period
            type: boolean
          burn_vote_quorum:
            title: burn deposits if a proposal does not meet quorum
            type: boolean
          burn_vote_veto:
            title: burn deposits if quorum with vote type no_veto is met
            type: boolean
          expedited_min_deposit:
            description: Minimum expedited deposit for a proposal to enter voting
              period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          expedited_threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.67.'
            type: string
          expedited_voting_period:
            description: Duration of the voting period of an expedited proposal.
            type: string
          max_deposit_period:
            description: 'Maximum period for Atom holders to deposit on a proposal.
              Initial value: 2

              months.'
            type: string
          min_deposit:
            description: Minimum deposit for a proposal to enter voting period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          min_deposit_ratio:
            description: 'The ratio representing the proportion of the deposit value
              minimum that

              must be met when making a deposit. Default value: 0.01. Meaning that
              for a

              chain with a min_deposit of 100stake, a deposit of 1stake would be

              required.'
            type: string
          min_initial_deposit_ratio:
            description: "The ratio representing the proportion of the deposit value\
              \ that must be\n paid at proposal submission."
            type: string
          proposal_cancel_dest:
            description: 'The address which will receive (proposal_cancel_ratio *
              deposit) proposal

              deposits. If empty, the (proposal_cancel_ratio * deposit) proposal deposits

              will be burned.'
            type: string
          proposal_cancel_ratio:
            description: 'The cancel ratio which will not be returned back to the
              depositors when a

              proposal is cancelled.'
            type: string
          quorum:
            description: "Minimum percentage of total stake needed to vote for a result\
              \ to be\n considered valid."
            type: string
          threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.'
            type: string
          veto_threshold:
            description: "Minimum value of Veto votes to Total votes ratio for proposal\
              \ to be\n vetoed. Default value: 1/3."
            type: string
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
      tally_params:
        description: 'Deprecated: Prefer to use `params` instead.

          tally_params defines the parameters related to tally.'
        properties:
          quorum:
            description: 'Minimum percentage of total stake needed to vote for a result
              to be

              considered valid.'
            type: string
          threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.'
            type: string
          veto_threshold:
            description: 'Minimum value of Veto votes to Total votes ratio for proposal
              to be

              vetoed. Default value: 1/3.'
            type: string
        type: object
      voting_params:
        description: 'Deprecated: Prefer to use `params` instead.

          voting_params defines the parameters related to voting.'
        properties:
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal
      RPC method.
    properties:
      proposal:
        description: Proposal defines the core field members of a governance proposal.
        properties:
          deposit_end_time:
            description: deposit_end_time is the end time for deposition.
            format: date-time
            type: string
          expedited:
            title: expedited defines if the proposal is expedited
            type: boolean
          failed_reason:
            title: failed_reason defines the reason why the proposal failed
            type: string
          final_tally_result:
            description: 'final_tally_result is the final tally result of the proposal.
              When

              querying a proposal via gRPC, this field is not populated until the

              proposal''s voting period has ended.'
            properties:
              abstain_count:
                description: abstain_count is the number of abstain votes on a proposal.
                type: string
              no_count:
                description: no_count is the number of no votes on a proposal.
                type: string
              no_with_veto_count:
                description: no_with_veto_count is the number of no with veto votes
                  on a proposal.
                type: string
              yes_count:
                description: yes_count is the number of yes votes on a proposal.
                type: string
            type: object
          id:
            description: id defines the unique id of the proposal.
            format: uint64
            type: string
          messages:
            description: messages are the arbitrary messages to be executed if the
              proposal passes.
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            type: array
          metadata:
            title: 'metadata is any arbitrary metadata attached to the proposal.

              the recommended format of the metadata is to be found here:

              https://docs.cosmos.network/v0.47/modules/gov#proposal-3'
            type: string
          proposer:
            title: proposer is the address of the proposal sumbitter
            type: string
          status:
            default: PROPOSAL_STATUS_UNSPECIFIED
            description: status defines the proposal status.
            enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
            type: string
          submit_time:
            description: submit_time is the time of proposal submission.
            format: date-time
            type: string
          summary:
            title: summary is a short summary of the proposal
            type: string
          title:
            title: title is the title of the proposal
            type: string
          total_deposit:
            description: total_deposit is the total deposit on the proposal.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          voting_end_time:
            description: voting_end_time is the end time of voting on a proposal.
            format: date-time
            type: string
          voting_start_time:
            description: voting_start_time is the starting time to vote on a proposal.
            format: date-time
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryProposalsResponse:
    description: 'QueryProposalsResponse is the response type for the Query/Proposals
      RPC

      method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      proposals:
        description: proposals defines all the requested governance proposals.
        items:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            expedited:
              title: expedited defines if the proposal is expedited
              type: boolean
            failed_reason:
              title: failed_reason defines the reason why the proposal failed
              type: string
            final_tally_result:
              description: 'final_tally_result is the final tally result of the proposal.
                When

                querying a proposal via gRPC, this field is not populated until the

                proposal''s voting period has ended.'
              properties:
                abstain_count:
                  description: abstain_count is the number of abstain votes on a proposal.
                  type: string
                no_count:
                  description: no_count is the number of no votes on a proposal.
                  type: string
                no_with_veto_count:
                  description: no_with_veto_count is the number of no with veto votes
                    on a proposal.
                  type: string
                yes_count:
                  description: yes_count is the number of yes votes on a proposal.
                  type: string
              type: object
            id:
              description: id defines the unique id of the proposal.
              format: uint64
              type: string
            messages:
              description: messages are the arbitrary messages to be executed if the
                proposal passes.
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            metadata:
              title: 'metadata is any arbitrary metadata attached to the proposal.

                the recommended format of the metadata is to be found here:

                https://docs.cosmos.network/v0.47/modules/gov#proposal-3'
              type: string
            proposer:
              title: proposer is the address of the proposal sumbitter
              type: string
            status:
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: status defines the proposal status.
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            summary:
              title: summary is a short summary of the proposal
              type: string
            title:
              title: title is the title of the proposal
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally
      RPC method.
    properties:
      tally:
        description: tally defines the requested tally.
        properties:
          abstain_count:
            description: abstain_count is the number of abstain votes on a proposal.
            type: string
          no_count:
            description: no_count is the number of no votes on a proposal.
            type: string
          no_with_veto_count:
            description: no_with_veto_count is the number of no with veto votes on
              a proposal.
            type: string
          yes_count:
            description: yes_count is the number of yes votes on a proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        description: 'Vote defines a vote on a governance proposal.

          A Vote consists of a proposal ID, the voter, and the vote option.'
        properties:
          metadata:
            title: 'metadata is any arbitrary metadata attached to the vote.

              the recommended format of the metadata is to be found here:

              https://docs.cosmos.network/v0.47/modules/gov#vote-5'
            type: string
          options:
            description: options is the weighted vote options.
            items:
              description: WeightedVoteOption defines a unit of vote for vote split.
              properties:
                option:
                  default: VOTE_OPTION_UNSPECIFIED
                  description: 'option defines the valid vote options, it must not
                    contain duplicate vote

                    options.'
                  enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                  type: string
                weight:
                  description: weight is the vote weight associated with the vote
                    option.
                  type: string
              type: object
            type: array
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
          voter:
            description: voter is the voter address of the proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      votes:
        description: votes defines the queried votes.
        items:
          description: 'Vote defines a vote on a governance proposal.

            A Vote consists of a proposal ID, the voter, and the vote option.'
          properties:
            metadata:
              title: 'metadata is any arbitrary metadata attached to the vote.

                the recommended format of the metadata is to be found here:

                https://docs.cosmos.network/v0.47/modules/gov#vote-5'
              type: string
            options:
              description: options is the weighted vote options.
              items:
                description: WeightedVoteOption defines a unit of vote for vote split.
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not
                      contain duplicate vote

                      options.'
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote
                      option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address of the proposal.
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties:
      quorum:
        description: 'Minimum percentage of total stake needed to vote for a result
          to be

          considered valid.'
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.5.'
        type: string
      veto_threshold:
        description: 'Minimum value of Veto votes to Total votes ratio for proposal
          to be

          vetoed. Default value: 1/3.'
        type: string
    type: object
  cosmos.gov.v1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain_count:
        description: abstain_count is the number of abstain votes on a proposal.
        type: string
      no_count:
        description: no_count is the number of no votes on a proposal.
        type: string
      no_with_veto_count:
        description: no_with_veto_count is the number of no with veto votes on a proposal.
        type: string
      yes_count:
        description: yes_count is the number of yes votes on a proposal.
        type: string
    type: object
  cosmos.gov.v1.Vote:
    description: 'Vote defines a vote on a governance proposal.

      A Vote consists of a proposal ID, the voter, and the vote option.'
    properties:
      metadata:
        title: 'metadata is any arbitrary metadata attached to the vote.

          the recommended format of the metadata is to be found here:

          https://docs.cosmos.network/v0.47/modules/gov#vote-5'
        type: string
      options:
        description: options is the weighted vote options.
        items:
          description: WeightedVoteOption defines a unit of vote for vote split.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'option defines the valid vote options, it must not contain
                duplicate vote

                options.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            weight:
              description: weight is the vote weight associated with the vote option.
              type: string
          type: object
        type: array
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address of the proposal.
        type: string
    type: object
  cosmos.gov.v1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: "VoteOption enumerates the valid vote options for a given governance\
      \ proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a\
      \ no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote\
      \ option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote\
      \ option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
      \ VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    enum:
    - VOTE_OPTION_UNSPECIFIED
    - VOTE_OPTION_YES
    - VOTE_OPTION_ABSTAIN
    - VOTE_OPTION_NO
    - VOTE_OPTION_NO_WITH_VETO
    type: string
  cosmos.gov.v1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties:
      voting_period:
        description: Duration of the voting period.
        type: string
    type: object
  cosmos.gov.v1.WeightedVoteOption:
    description: WeightedVoteOption defines a unit of vote for vote split.
    properties:
      option:
        default: VOTE_OPTION_UNSPECIFIED
        description: 'option defines the valid vote options, it must not contain duplicate
          vote

          options.'
        enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
        type: string
      weight:
        description: weight is the vote weight associated with the vote option.
        type: string
    type: object
  cosmos.gov.v1beta1.Deposit:
    description: 'Deposit defines an amount deposited by an account address to an
      active

      proposal.'
    properties:
      amount:
        description: amount to be deposited by depositor.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1beta1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties:
      max_deposit_period:
        description: 'Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2

          months.'
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1beta1.MsgDeposit:
    description: MsgDeposit defines a message to submit a deposit to an existing proposal.
    properties:
      amount:
        description: amount to be deposited by depositor.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      depositor:
        description: depositor defines the deposit addresses from the proposals.
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1beta1.MsgDepositResponse:
    description: MsgDepositResponse defines the Msg/Deposit response type.
    type: object
  cosmos.gov.v1beta1.MsgSubmitProposal:
    description: 'MsgSubmitProposal defines an sdk.Msg type that supports submitting
      arbitrary

      proposal Content.'
    properties:
      content:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      initial_deposit:
        description: 'initial_deposit is the deposit value that must be paid at proposal

          submission.'
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      proposer:
        description: proposer is the account address of the proposer.
        type: string
    type: object
  cosmos.gov.v1beta1.MsgSubmitProposalResponse:
    description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response
      type.
    properties:
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
    type: object
  cosmos.gov.v1beta1.MsgVote:
    description: MsgVote defines a message to cast a vote.
    properties:
      option:
        default: VOTE_OPTION_UNSPECIFIED
        description: option defines the vote option.
        enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
        type: string
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address for the proposal.
        type: string
    type: object
  cosmos.gov.v1beta1.MsgVoteResponse:
    description: MsgVoteResponse defines the Msg/Vote response type.
    type: object
  cosmos.gov.v1beta1.MsgVoteWeighted:
    description: MsgVoteWeighted defines a message to cast a vote.
    properties:
      options:
        description: options defines the weighted vote options.
        items:
          description: WeightedVoteOption defines a unit of vote for vote split.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'option defines the valid vote options, it must not contain
                duplicate vote

                options.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            weight:
              description: weight is the vote weight associated with the vote option.
              type: string
          type: object
        type: array
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address for the proposal.
        type: string
    type: object
  cosmos.gov.v1beta1.MsgVoteWeightedResponse:
    description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
    type: object
  cosmos.gov.v1beta1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      content:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      final_tally_result:
        description: 'final_tally_result is the final tally result of the proposal.
          When

          querying a proposal via gRPC, this field is not populated until the

          proposal''s voting period has ended.'
        properties:
          abstain:
            description: abstain is the number of abstain votes on a proposal.
            type: string
          'no':
            description: no is the number of no votes on a proposal.
            type: string
          no_with_veto:
            description: no_with_veto is the number of no with veto votes on a proposal.
            type: string
          'yes':
            description: yes is the number of yes votes on a proposal.
            type: string
        type: object
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      status:
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: status defines the proposal status.
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1beta1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: "ProposalStatus enumerates the valid statuses of a proposal.\n\n\
      \ - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default\
      \ proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
      \ defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD:\
      \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
      period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
      \ status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
      \ defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
      \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
      failed."
    enum:
    - PROPOSAL_STATUS_UNSPECIFIED
    - PROPOSAL_STATUS_DEPOSIT_PERIOD
    - PROPOSAL_STATUS_VOTING_PERIOD
    - PROPOSAL_STATUS_PASSED
    - PROPOSAL_STATUS_REJECTED
    - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1beta1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        description: 'Deposit defines an amount deposited by an account address to
          an active

          proposal.'
        properties:
          amount:
            description: amount to be deposited by depositor.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          depositor:
            description: depositor defines the deposit addresses from the proposals.
            type: string
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits
      RPC method.
    properties:
      deposits:
        description: deposits defines the requested deposits.
        items:
          description: 'Deposit defines an amount deposited by an account address
            to an active

            proposal.'
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      deposit_params:
        description: deposit_params defines the parameters related to deposit.
        properties:
          max_deposit_period:
            description: 'Maximum period for Atom holders to deposit on a proposal.
              Initial value: 2

              months.'
            type: string
          min_deposit:
            description: Minimum deposit for a proposal to enter voting period.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
      tally_params:
        description: tally_params defines the parameters related to tally.
        properties:
          quorum:
            description: 'Minimum percentage of total stake needed to vote for a result
              to be

              considered valid.'
            format: byte
            type: string
          threshold:
            description: 'Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.'
            format: byte
            type: string
          veto_threshold:
            description: 'Minimum value of Veto votes to Total votes ratio for proposal
              to be

              vetoed. Default value: 1/3.'
            format: byte
            type: string
        type: object
      voting_params:
        description: voting_params defines the parameters related to voting.
        properties:
          voting_period:
            description: Duration of the voting period.
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal
      RPC method.
    properties:
      proposal:
        description: Proposal defines the core field members of a governance proposal.
        properties:
          content:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          deposit_end_time:
            description: deposit_end_time is the end time for deposition.
            format: date-time
            type: string
          final_tally_result:
            description: 'final_tally_result is the final tally result of the proposal.
              When

              querying a proposal via gRPC, this field is not populated until the

              proposal''s voting period has ended.'
            properties:
              abstain:
                description: abstain is the number of abstain votes on a proposal.
                type: string
              'no':
                description: no is the number of no votes on a proposal.
                type: string
              no_with_veto:
                description: no_with_veto is the number of no with veto votes on a
                  proposal.
                type: string
              'yes':
                description: yes is the number of yes votes on a proposal.
                type: string
            type: object
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
          status:
            default: PROPOSAL_STATUS_UNSPECIFIED
            description: status defines the proposal status.
            enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
            type: string
          submit_time:
            description: submit_time is the time of proposal submission.
            format: date-time
            type: string
          total_deposit:
            description: total_deposit is the total deposit on the proposal.
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          voting_end_time:
            description: voting_end_time is the end time of voting on a proposal.
            format: date-time
            type: string
          voting_start_time:
            description: voting_start_time is the starting time to vote on a proposal.
            format: date-time
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryProposalsResponse:
    description: 'QueryProposalsResponse is the response type for the Query/Proposals
      RPC

      method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      proposals:
        description: proposals defines all the requested governance proposals.
        items:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            content:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            final_tally_result:
              description: 'final_tally_result is the final tally result of the proposal.
                When

                querying a proposal via gRPC, this field is not populated until the

                proposal''s voting period has ended.'
              properties:
                abstain:
                  description: abstain is the number of abstain votes on a proposal.
                  type: string
                'no':
                  description: no is the number of no votes on a proposal.
                  type: string
                no_with_veto:
                  description: no_with_veto is the number of no with veto votes on
                    a proposal.
                  type: string
                'yes':
                  description: yes is the number of yes votes on a proposal.
                  type: string
              type: object
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            status:
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: status defines the proposal status.
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1beta1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally
      RPC method.
    properties:
      tally:
        description: tally defines the requested tally.
        properties:
          abstain:
            description: abstain is the number of abstain votes on a proposal.
            type: string
          'no':
            description: no is the number of no votes on a proposal.
            type: string
          no_with_veto:
            description: no_with_veto is the number of no with veto votes on a proposal.
            type: string
          'yes':
            description: yes is the number of yes votes on a proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        description: 'Vote defines a vote on a governance proposal.

          A Vote consists of a proposal ID, the voter, and the vote option.'
        properties:
          option:
            default: VOTE_OPTION_UNSPECIFIED
            description: 'Deprecated: Prefer to use `options` instead. This field
              is set in queries

              if and only if `len(options) == 1` and that option has weight 1. In
              all

              other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
            enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
            type: string
          options:
            description: options is the weighted vote options.
            items:
              description: WeightedVoteOption defines a unit of vote for vote split.
              properties:
                option:
                  default: VOTE_OPTION_UNSPECIFIED
                  description: 'option defines the valid vote options, it must not
                    contain duplicate vote

                    options.'
                  enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                  type: string
                weight:
                  description: weight is the vote weight associated with the vote
                    option.
                  type: string
              type: object
            type: array
          proposal_id:
            description: proposal_id defines the unique id of the proposal.
            format: uint64
            type: string
          voter:
            description: voter is the voter address of the proposal.
            type: string
        type: object
    type: object
  cosmos.gov.v1beta1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      votes:
        description: votes defines the queried votes.
        items:
          description: 'Vote defines a vote on a governance proposal.

            A Vote consists of a proposal ID, the voter, and the vote option.'
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'Deprecated: Prefer to use `options` instead. This field
                is set in queries

                if and only if `len(options) == 1` and that option has weight 1. In
                all

                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            options:
              description: options is the weighted vote options.
              items:
                description: WeightedVoteOption defines a unit of vote for vote split.
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not
                      contain duplicate vote

                      options.'
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote
                      option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address of the proposal.
              type: string
          type: object
        type: array
    type: object
  cosmos.gov.v1beta1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties:
      quorum:
        description: 'Minimum percentage of total stake needed to vote for a result
          to be

          considered valid.'
        format: byte
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.5.'
        format: byte
        type: string
      veto_threshold:
        description: 'Minimum value of Veto votes to Total votes ratio for proposal
          to be

          vetoed. Default value: 1/3.'
        format: byte
        type: string
    type: object
  cosmos.gov.v1beta1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain:
        description: abstain is the number of abstain votes on a proposal.
        type: string
      'no':
        description: no is the number of no votes on a proposal.
        type: string
      no_with_veto:
        description: no_with_veto is the number of no with veto votes on a proposal.
        type: string
      'yes':
        description: yes is the number of yes votes on a proposal.
        type: string
    type: object
  cosmos.gov.v1beta1.Vote:
    description: 'Vote defines a vote on a governance proposal.

      A Vote consists of a proposal ID, the voter, and the vote option.'
    properties:
      option:
        default: VOTE_OPTION_UNSPECIFIED
        description: 'Deprecated: Prefer to use `options` instead. This field is set
          in queries

          if and only if `len(options) == 1` and that option has weight 1. In all

          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
        enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
        type: string
      options:
        description: options is the weighted vote options.
        items:
          description: WeightedVoteOption defines a unit of vote for vote split.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'option defines the valid vote options, it must not contain
                duplicate vote

                options.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            weight:
              description: weight is the vote weight associated with the vote option.
              type: string
          type: object
        type: array
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      voter:
        description: voter is the voter address of the proposal.
        type: string
    type: object
  cosmos.gov.v1beta1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: "VoteOption enumerates the valid vote options for a given governance\
      \ proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a\
      \ no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote\
      \ option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote\
      \ option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
      \ VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    enum:
    - VOTE_OPTION_UNSPECIFIED
    - VOTE_OPTION_YES
    - VOTE_OPTION_ABSTAIN
    - VOTE_OPTION_NO
    - VOTE_OPTION_NO_WITH_VETO
    type: string
  cosmos.gov.v1beta1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties:
      voting_period:
        description: Duration of the voting period.
        type: string
    type: object
  cosmos.gov.v1beta1.WeightedVoteOption:
    description: WeightedVoteOption defines a unit of vote for vote split.
    properties:
      option:
        default: VOTE_OPTION_UNSPECIFIED
        description: 'option defines the valid vote options, it must not contain duplicate
          vote

          options.'
        enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
        type: string
      weight:
        description: weight is the vote weight associated with the vote option.
        type: string
    type: object
  cosmos.mint.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/mint parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          blocks_per_year:
            format: uint64
            title: expected blocks per year
            type: string
          goal_bonded:
            title: goal of percent bonded atoms
            type: string
          inflation_max:
            title: maximum inflation rate
            type: string
          inflation_min:
            title: minimum inflation rate
            type: string
          inflation_rate_change:
            title: maximum annual change in inflation rate
            type: string
          mint_denom:
            title: type of coin to mint
            type: string
        type: object
    type: object
  cosmos.mint.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.mint.v1beta1.Params:
    description: Params defines the parameters for the x/mint module.
    properties:
      blocks_per_year:
        format: uint64
        title: expected blocks per year
        type: string
      goal_bonded:
        title: goal of percent bonded atoms
        type: string
      inflation_max:
        title: maximum inflation rate
        type: string
      inflation_min:
        title: minimum inflation rate
        type: string
      inflation_rate_change:
        title: maximum annual change in inflation rate
        type: string
      mint_denom:
        title: type of coin to mint
        type: string
    type: object
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    description: 'QueryAnnualProvisionsResponse is the response type for the

      Query/AnnualProvisions RPC method.'
    properties:
      annual_provisions:
        description: annual_provisions is the current minting annual provisions value.
        format: byte
        type: string
    type: object
  cosmos.mint.v1beta1.QueryInflationResponse:
    description: 'QueryInflationResponse is the response type for the Query/Inflation
      RPC

      method.'
    properties:
      inflation:
        description: inflation is the current minting inflation value.
        format: byte
        type: string
    type: object
  cosmos.mint.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          blocks_per_year:
            format: uint64
            title: expected blocks per year
            type: string
          goal_bonded:
            title: goal of percent bonded atoms
            type: string
          inflation_max:
            title: maximum inflation rate
            type: string
          inflation_min:
            title: minimum inflation rate
            type: string
          inflation_rate_change:
            title: maximum annual change in inflation rate
            type: string
          mint_denom:
            title: type of coin to mint
            type: string
        type: object
    type: object
  cosmos.nft.v1beta1.Class:
    description: Class defines the class of the nft type.
    properties:
      data:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: data is the app specific metadata of the NFT class. Optional
        type: object
      description:
        title: description is a brief description of nft classification. Optional
        type: string
      id:
        title: 'id defines the unique identifier of the NFT classification, similar
          to the

          contract address of ERC721'
        type: string
      name:
        title: name defines the human-readable name of the NFT classification. Optional
        type: string
      symbol:
        title: symbol is an abbreviated name for nft classification. Optional
        type: string
      uri:
        title: 'uri for the class metadata stored off chain. It can define schema
          for Class

          and NFT `Data` attributes. Optional'
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri. Optional
        type: string
    type: object
  cosmos.nft.v1beta1.MsgSend:
    description: 'MsgSend represents a message to send a nft from one account to another

      account.'
    properties:
      class_id:
        title: 'class_id defines the unique identifier of the nft classification,
          similar

          to the contract address of ERC721'
        type: string
      id:
        title: id defines the unique identification of nft
        type: string
      receiver:
        title: receiver is the receiver address of nft
        type: string
      sender:
        title: sender is the address of the owner of nft
        type: string
    type: object
  cosmos.nft.v1beta1.MsgSendResponse:
    description: MsgSendResponse defines the Msg/Send response type.
    type: object
  cosmos.nft.v1beta1.NFT:
    description: NFT defines the NFT.
    properties:
      class_id:
        title: class_id associated with the NFT, similar to the contract address of
          ERC721
        type: string
      data:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: data is an app specific data of the NFT. Optional
        type: object
      id:
        title: id is a unique identifier of the NFT
        type: string
      uri:
        title: uri for the NFT metadata stored off chain
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri
        type: string
    type: object
  cosmos.nft.v1beta1.QueryBalanceResponse:
    properties:
      amount:
        format: uint64
        title: amount is the number of all NFTs of a given class owned by the owner
        type: string
    title: QueryBalanceResponse is the response type for the Query/Balance RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassResponse:
    properties:
      class:
        description: Class defines the class of the nft type.
        properties:
          data:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            title: data is the app specific metadata of the NFT class. Optional
            type: object
          description:
            title: description is a brief description of nft classification. Optional
            type: string
          id:
            title: 'id defines the unique identifier of the NFT classification, similar
              to the

              contract address of ERC721'
            type: string
          name:
            title: name defines the human-readable name of the NFT classification.
              Optional
            type: string
          symbol:
            title: symbol is an abbreviated name for nft classification. Optional
            type: string
          uri:
            title: 'uri for the class metadata stored off chain. It can define schema
              for Class

              and NFT `Data` attributes. Optional'
            type: string
          uri_hash:
            title: uri_hash is a hash of the document pointed by uri. Optional
            type: string
        type: object
    title: QueryClassResponse is the response type for the Query/Class RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassesResponse:
    properties:
      classes:
        description: class defines the class of the nft type.
        items:
          description: Class defines the class of the nft type.
          properties:
            data:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: data is the app specific metadata of the NFT class. Optional
              type: object
            description:
              title: description is a brief description of nft classification. Optional
              type: string
            id:
              title: 'id defines the unique identifier of the NFT classification,
                similar to the

                contract address of ERC721'
              type: string
            name:
              title: name defines the human-readable name of the NFT classification.
                Optional
              type: string
            symbol:
              title: symbol is an abbreviated name for nft classification. Optional
              type: string
            uri:
              title: 'uri for the class metadata stored off chain. It can define schema
                for Class

                and NFT `Data` attributes. Optional'
              type: string
            uri_hash:
              title: uri_hash is a hash of the document pointed by uri. Optional
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    title: QueryClassesResponse is the response type for the Query/Classes RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTResponse:
    properties:
      nft:
        description: NFT defines the NFT.
        properties:
          class_id:
            title: class_id associated with the NFT, similar to the contract address
              of ERC721
            type: string
          data:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            title: data is an app specific data of the NFT. Optional
            type: object
          id:
            title: id is a unique identifier of the NFT
            type: string
          uri:
            title: uri for the NFT metadata stored off chain
            type: string
          uri_hash:
            title: uri_hash is a hash of the document pointed by uri
            type: string
        title: owner is the owner address of the nft
        type: object
    title: QueryNFTResponse is the response type for the Query/NFT RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTsResponse:
    properties:
      nfts:
        items:
          description: NFT defines the NFT.
          properties:
            class_id:
              title: class_id associated with the NFT, similar to the contract address
                of ERC721
              type: string
            data:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: data is an app specific data of the NFT. Optional
              type: object
            id:
              title: id is a unique identifier of the NFT
              type: string
            uri:
              title: uri for the NFT metadata stored off chain
              type: string
            uri_hash:
              title: uri_hash is a hash of the document pointed by uri
              type: string
          type: object
        title: NFT defines the NFT
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
    type: object
  cosmos.nft.v1beta1.QueryOwnerResponse:
    properties:
      owner:
        title: owner is the owner address of the nft
        type: string
    title: QueryOwnerResponse is the response type for the Query/Owner RPC method
    type: object
  cosmos.nft.v1beta1.QuerySupplyResponse:
    properties:
      amount:
        format: uint64
        title: amount is the number of all NFTs from the given class
        type: string
    title: QuerySupplyResponse is the response type for the Query/Supply RPC method
    type: object
  cosmos.params.v1beta1.ParamChange:
    description: 'ParamChange defines an individual parameter change, for use in

      ParameterChangeProposal.'
    properties:
      key:
        type: string
      subspace:
        type: string
      value:
        type: string
    type: object
  cosmos.params.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      param:
        description: param defines the queried parameter.
        properties:
          key:
            type: string
          subspace:
            type: string
          value:
            type: string
        type: object
    type: object
  cosmos.params.v1beta1.QuerySubspacesResponse:
    description: 'QuerySubspacesResponse defines the response types for querying for
      all

      registered subspaces and all keys for a subspace.'
    properties:
      subspaces:
        items:
          description: 'Subspace defines a parameter subspace name and all the keys
            that exist for

            the subspace.'
          properties:
            keys:
              items:
                type: string
              type: array
            subspace:
              type: string
          type: object
        type: array
    type: object
  cosmos.params.v1beta1.Subspace:
    description: 'Subspace defines a parameter subspace name and all the keys that
      exist for

      the subspace.'
    properties:
      keys:
        items:
          type: string
        type: array
      subspace:
        type: string
    type: object
  cosmos.slashing.v1beta1.MsgUnjail:
    properties:
      validator_addr:
        type: string
    title: MsgUnjail defines the Msg/Unjail request type
    type: object
  cosmos.slashing.v1beta1.MsgUnjailResponse:
    title: MsgUnjailResponse defines the Msg/Unjail response type
    type: object
  cosmos.slashing.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/slashing parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          downtime_jail_duration:
            type: string
          min_signed_per_window:
            format: byte
            type: string
          signed_blocks_window:
            format: int64
            type: string
          slash_fraction_double_sign:
            format: byte
            type: string
          slash_fraction_downtime:
            format: byte
            type: string
        type: object
    type: object
  cosmos.slashing.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.slashing.v1beta1.Params:
    description: Params represents the parameters used for by the slashing module.
    properties:
      downtime_jail_duration:
        type: string
      min_signed_per_window:
        format: byte
        type: string
      signed_blocks_window:
        format: int64
        type: string
      slash_fraction_double_sign:
        format: byte
        type: string
      slash_fraction_downtime:
        format: byte
        type: string
    type: object
  cosmos.slashing.v1beta1.QueryParamsResponse:
    properties:
      params:
        description: Params represents the parameters used for by the slashing module.
        properties:
          downtime_jail_duration:
            type: string
          min_signed_per_window:
            format: byte
            type: string
          signed_blocks_window:
            format: int64
            type: string
          slash_fraction_double_sign:
            format: byte
            type: string
          slash_fraction_downtime:
            format: byte
            type: string
        type: object
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfoResponse:
    properties:
      val_signing_info:
        description: 'ValidatorSigningInfo defines a validator''s signing info for
          monitoring their

          liveness activity.'
        properties:
          address:
            type: string
          index_offset:
            description: 'Index which is incremented every time a validator is bonded
              in a block and

              _may_ have signed a pre-commit or not. This in conjunction with the

              signed_blocks_window param determines the index in the missed block
              bitmap.'
            format: int64
            type: string
          jailed_until:
            description: Timestamp until which the validator is jailed due to liveness
              downtime.
            format: date-time
            type: string
          missed_blocks_counter:
            description: 'A counter of missed (unsigned) blocks. It is used to avoid
              unnecessary

              reads in the missed block bitmap.'
            format: int64
            type: string
          start_height:
            format: int64
            title: Height at which validator was first a candidate OR was un-jailed
            type: string
          tombstoned:
            description: 'Whether or not a validator has been tombstoned (killed out
              of validator

              set). It is set once the validator commits an equivocation or for any
              other

              configured misbehavior.'
            type: boolean
        title: val_signing_info is the signing info of requested val cons address
        type: object
    title: 'QuerySigningInfoResponse is the response type for the Query/SigningInfo
      RPC

      method'
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfosResponse:
    properties:
      info:
        items:
          description: 'ValidatorSigningInfo defines a validator''s signing info for
            monitoring their

            liveness activity.'
          properties:
            address:
              type: string
            index_offset:
              description: 'Index which is incremented every time a validator is bonded
                in a block and

                _may_ have signed a pre-commit or not. This in conjunction with the

                signed_blocks_window param determines the index in the missed block
                bitmap.'
              format: int64
              type: string
            jailed_until:
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
              type: string
            missed_blocks_counter:
              description: 'A counter of missed (unsigned) blocks. It is used to avoid
                unnecessary

                reads in the missed block bitmap.'
              format: int64
              type: string
            start_height:
              format: int64
              title: Height at which validator was first a candidate OR was un-jailed
              type: string
            tombstoned:
              description: 'Whether or not a validator has been tombstoned (killed
                out of validator

                set). It is set once the validator commits an equivocation or for
                any other

                configured misbehavior.'
              type: boolean
          type: object
        title: info is the signing info of all validators
        type: array
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    title: 'QuerySigningInfosResponse is the response type for the Query/SigningInfos
      RPC

      method'
    type: object
  cosmos.slashing.v1beta1.ValidatorSigningInfo:
    description: 'ValidatorSigningInfo defines a validator''s signing info for monitoring
      their

      liveness activity.'
    properties:
      address:
        type: string
      index_offset:
        description: 'Index which is incremented every time a validator is bonded
          in a block and

          _may_ have signed a pre-commit or not. This in conjunction with the

          signed_blocks_window param determines the index in the missed block bitmap.'
        format: int64
        type: string
      jailed_until:
        description: Timestamp until which the validator is jailed due to liveness
          downtime.
        format: date-time
        type: string
      missed_blocks_counter:
        description: 'A counter of missed (unsigned) blocks. It is used to avoid unnecessary

          reads in the missed block bitmap.'
        format: int64
        type: string
      start_height:
        format: int64
        title: Height at which validator was first a candidate OR was un-jailed
        type: string
      tombstoned:
        description: 'Whether or not a validator has been tombstoned (killed out of
          validator

          set). It is set once the validator commits an equivocation or for any other

          configured misbehavior.'
        type: boolean
    type: object
  cosmos.staking.v1beta1.BondStatus:
    default: BOND_STATUS_UNSPECIFIED
    description: "BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED:\
      \ UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED:\
      \ UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING:\
      \ UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED\
      \ defines a validator that is bonded."
    enum:
    - BOND_STATUS_UNSPECIFIED
    - BOND_STATUS_UNBONDED
    - BOND_STATUS_UNBONDING
    - BOND_STATUS_BONDED
    type: string
  cosmos.staking.v1beta1.Commission:
    description: Commission defines commission parameters for a given validator.
    properties:
      commission_rates:
        description: 'commission_rates defines the initial commission rates to be
          used for

          creating a validator.'
        properties:
          max_change_rate:
            description: 'max_change_rate defines the maximum daily increase of the
              validator

              commission, as a fraction.'
            type: string
          max_rate:
            description: 'max_rate defines the maximum commission rate which validator
              can ever

              charge, as a fraction.'
            type: string
          rate:
            description: rate is the commission rate charged to delegators, as a fraction.
            type: string
        type: object
      update_time:
        description: update_time is the last time the commission rate was changed.
        format: date-time
        type: string
    type: object
  cosmos.staking.v1beta1.CommissionRates:
    description: 'CommissionRates defines the initial commission rates to be used
      for creating

      a validator.'
    properties:
      max_change_rate:
        description: 'max_change_rate defines the maximum daily increase of the validator

          commission, as a fraction.'
        type: string
      max_rate:
        description: 'max_rate defines the maximum commission rate which validator
          can ever

          charge, as a fraction.'
        type: string
      rate:
        description: rate is the commission rate charged to delegators, as a fraction.
        type: string
    type: object
  cosmos.staking.v1beta1.Delegation:
    description: 'Delegation represents the bond with tokens held by an account. It
      is

      owned by one delegator, and is associated with the voting power of one

      validator.'
    properties:
      delegator_address:
        description: delegator_address is the encoded address of the delegator.
        type: string
      shares:
        description: shares define the delegation shares received.
        type: string
      validator_address:
        description: validator_address is the encoded address of the validator.
        type: string
    type: object
  cosmos.staking.v1beta1.DelegationResponse:
    description: 'DelegationResponse is equivalent to Delegation except that it contains
      a

      balance in addition to shares which is more suitable for client responses.'
    properties:
      balance:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      delegation:
        description: 'Delegation represents the bond with tokens held by an account.
          It is

          owned by one delegator, and is associated with the voting power of one

          validator.'
        properties:
          delegator_address:
            description: delegator_address is the encoded address of the delegator.
            type: string
          shares:
            description: shares define the delegation shares received.
            type: string
          validator_address:
            description: validator_address is the encoded address of the validator.
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.Description:
    description: Description defines a validator description.
    properties:
      details:
        description: details define other optional details.
        type: string
      identity:
        description: identity defines an optional identity signature (ex. UPort or
          Keybase).
        type: string
      moniker:
        description: moniker defines a human-readable name for the validator.
        type: string
      security_contact:
        description: security_contact defines an optional email for security contact.
        type: string
      website:
        description: website defines an optional website link.
        type: string
    type: object
  cosmos.staking.v1beta1.HistoricalInfo:
    description: 'HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module''s state, which persists the `n` most

      recent HistoricalInfo

      (`n` is set by the staking module''s `historical_entries` parameter).'
    properties:
      header:
        description: Header defines the structure of a block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: prev block info
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            format: byte
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            description: 'Consensus captures the consensus rules for processing a
              block in the

              blockchain, including all blockchain data structures and the rules of
              the

              application''s state transition machine.'
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            title: basic block info
            type: object
        type: object
      valset:
        items:
          description: 'Validator defines a validator, together with the total amount
            of the

            Validator''s bond shares and their exchange rate to coins. Slashing results
            in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated
            to

            this validator, the validator is credited with a delegation whose number
            of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.'
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: 'commission_rates defines the initial commission rates
                    to be used for

                    creating a validator.'
                  properties:
                    max_change_rate:
                      description: 'max_change_rate defines the maximum daily increase
                        of the validator

                        commission, as a fraction.'
                      type: string
                    max_rate:
                      description: 'max_rate defines the maximum commission rate which
                        validator can ever

                        charge, as a fraction.'
                      type: string
                    rate:
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: 'jailed defined whether the validator has been jailed from
                bonded status or

                not.'
              type: boolean
            min_self_delegation:
              description: 'min_self_delegation is the validator''s self declared
                minimum self

                delegation.'
              type: string
            operator_address:
              description: 'operator_address defines the address of the validator''s
                operator; bech

                encoded in JSON.'
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: 'unbonding_height defines, if unbonding, the height at
                which this validator

                has begun unbonding.'
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: 'list of unbonding ids, each uniquely identifing an unbonding
                of this

                validator'
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: 'strictly positive if this validator''s unbonding has been stopped
                by

                external modules'
              type: string
            unbonding_time:
              description: 'unbonding_time defines, if unbonding, the min time for
                the validator to

                complete unbonding.'
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.MsgBeginRedelegate:
    description: 'MsgBeginRedelegate defines a SDK message for performing a redelegation

      of coins from a delegator and source validator to a destination validator.'
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      delegator_address:
        type: string
      validator_dst_address:
        type: string
      validator_src_address:
        type: string
    type: object
  cosmos.staking.v1beta1.MsgBeginRedelegateResponse:
    description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response
      type.
    properties:
      completion_time:
        format: date-time
        type: string
    type: object
  cosmos.staking.v1beta1.MsgCancelUnbondingDelegation:
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: amount is always less than or equal to unbonding delegation entry balance
        type: object
      creation_height:
        description: creation_height is the height which the unbonding took place.
        format: int64
        type: string
      delegator_address:
        type: string
      validator_address:
        type: string
    title: 'MsgCancelUnbondingDelegation defines the SDK message for performing a
      cancel

      unbonding delegation for delegator'
    type: object
  cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse:
    title: MsgCancelUnbondingDelegationResponse
    type: object
  cosmos.staking.v1beta1.MsgCreateValidator:
    description: MsgCreateValidator defines a SDK message for creating a new validator.
    properties:
      commission:
        description: 'CommissionRates defines the initial commission rates to be used
          for creating

          a validator.'
        properties:
          max_change_rate:
            description: 'max_change_rate defines the maximum daily increase of the
              validator

              commission, as a fraction.'
            type: string
          max_rate:
            description: 'max_rate defines the maximum commission rate which validator
              can ever

              charge, as a fraction.'
            type: string
          rate:
            description: rate is the commission rate charged to delegators, as a fraction.
            type: string
        type: object
      delegator_address:
        description: 'Deprecated: Use of Delegator Address in MsgCreateValidator is
          deprecated.

          The validator address bytes and delegator address bytes refer to the same

          account while creating validator (defer only in bech32 notation).'
        type: string
      description:
        description: Description defines a validator description.
        properties:
          details:
            description: details define other optional details.
            type: string
          identity:
            description: identity defines an optional identity signature (ex. UPort
              or Keybase).
            type: string
          moniker:
            description: moniker defines a human-readable name for the validator.
            type: string
          security_contact:
            description: security_contact defines an optional email for security contact.
            type: string
          website:
            description: website defines an optional website link.
            type: string
        type: object
      min_self_delegation:
        type: string
      pubkey:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      validator_address:
        type: string
      value:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.MsgCreateValidatorResponse:
    description: MsgCreateValidatorResponse defines the Msg/CreateValidator response
      type.
    type: object
  cosmos.staking.v1beta1.MsgDelegate:
    description: 'MsgDelegate defines a SDK message for performing a delegation of
      coins

      from a delegator to a validator.'
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      delegator_address:
        type: string
      validator_address:
        type: string
    type: object
  cosmos.staking.v1beta1.MsgDelegateResponse:
    description: MsgDelegateResponse defines the Msg/Delegate response type.
    type: object
  cosmos.staking.v1beta1.MsgEditValidator:
    description: MsgEditValidator defines a SDK message for editing an existing validator.
    properties:
      commission_rate:
        title: 'We pass a reference to the new commission rate and min self delegation
          as

          it''s not mandatory to update. If not updated, the deserialized rate will
          be

          zero with no way to distinguish if an update was intended.

          REF: #2373'
        type: string
      description:
        description: Description defines a validator description.
        properties:
          details:
            description: details define other optional details.
            type: string
          identity:
            description: identity defines an optional identity signature (ex. UPort
              or Keybase).
            type: string
          moniker:
            description: moniker defines a human-readable name for the validator.
            type: string
          security_contact:
            description: security_contact defines an optional email for security contact.
            type: string
          website:
            description: website defines an optional website link.
            type: string
        type: object
      min_self_delegation:
        type: string
      validator_address:
        type: string
    type: object
  cosmos.staking.v1beta1.MsgEditValidatorResponse:
    description: MsgEditValidatorResponse defines the Msg/EditValidator response type.
    type: object
  cosmos.staking.v1beta1.MsgUndelegate:
    description: 'MsgUndelegate defines a SDK message for performing an undelegation
      from a

      delegate and a validator.'
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      delegator_address:
        type: string
      validator_address:
        type: string
    type: object
  cosmos.staking.v1beta1.MsgUndelegateResponse:
    description: MsgUndelegateResponse defines the Msg/Undelegate response type.
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: amount returns the amount of undelegated coins
        type: object
      completion_time:
        format: date-time
        type: string
    type: object
  cosmos.staking.v1beta1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/staking parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          bond_denom:
            description: bond_denom defines the bondable coin denomination.
            type: string
          historical_entries:
            description: historical_entries is the number of historical entries to
              persist.
            format: int64
            type: integer
          max_entries:
            description: 'max_entries is the max entries for either unbonding delegation
              or

              redelegation (per pair/trio).'
            format: int64
            type: integer
          max_validators:
            description: max_validators is the maximum number of validators.
            format: int64
            type: integer
          min_commission_rate:
            title: 'min_commission_rate is the chain-wide minimum commission rate
              that a

              validator can charge their delegators'
            type: string
          unbonding_time:
            description: unbonding_time is the time duration of unbonding.
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  cosmos.staking.v1beta1.Params:
    description: Params defines the parameters for the x/staking module.
    properties:
      bond_denom:
        description: bond_denom defines the bondable coin denomination.
        type: string
      historical_entries:
        description: historical_entries is the number of historical entries to persist.
        format: int64
        type: integer
      max_entries:
        description: 'max_entries is the max entries for either unbonding delegation
          or

          redelegation (per pair/trio).'
        format: int64
        type: integer
      max_validators:
        description: max_validators is the maximum number of validators.
        format: int64
        type: integer
      min_commission_rate:
        title: 'min_commission_rate is the chain-wide minimum commission rate that
          a

          validator can charge their delegators'
        type: string
      unbonding_time:
        description: unbonding_time is the time duration of unbonding.
        type: string
    type: object
  cosmos.staking.v1beta1.Pool:
    description: 'Pool is used for tracking bonded and not-bonded token supply of
      the bond

      denomination.'
    properties:
      bonded_tokens:
        type: string
      not_bonded_tokens:
        type: string
    type: object
  cosmos.staking.v1beta1.QueryDelegationResponse:
    description: QueryDelegationResponse is response type for the Query/Delegation
      RPC method.
    properties:
      delegation_response:
        description: 'DelegationResponse is equivalent to Delegation except that it
          contains a

          balance in addition to shares which is more suitable for client responses.'
        properties:
          balance:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          delegation:
            description: 'Delegation represents the bond with tokens held by an account.
              It is

              owned by one delegator, and is associated with the voting power of one

              validator.'
            properties:
              delegator_address:
                description: delegator_address is the encoded address of the delegator.
                type: string
              shares:
                description: shares define the delegation shares received.
                type: string
              validator_address:
                description: validator_address is the encoded address of the validator.
                type: string
            type: object
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
    description: 'QueryDelegatorDelegationsResponse is response type for the

      Query/DelegatorDelegations RPC method.'
    properties:
      delegation_responses:
        description: delegation_responses defines all the delegations' info of a delegator.
        items:
          description: 'DelegationResponse is equivalent to Delegation except that
            it contains a

            balance in addition to shares which is more suitable for client responses.'
          properties:
            balance:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegation:
              description: 'Delegation represents the bond with tokens held by an
                account. It is

                owned by one delegator, and is associated with the voting power of
                one

                validator.'
              properties:
                delegator_address:
                  description: delegator_address is the encoded address of the delegator.
                  type: string
                shares:
                  description: shares define the delegation shares received.
                  type: string
                validator_address:
                  description: validator_address is the encoded address of the validator.
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
    description: 'QueryUnbondingDelegatorDelegationsResponse is response type for
      the

      Query/UnbondingDelegatorDelegations RPC method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      unbonding_responses:
        items:
          description: 'UnbondingDelegation stores all of a single delegator''s unbonding
            bonds

            for a single validator in an time-ordered list.'
          properties:
            delegator_address:
              description: delegator_address is the encoded address of the delegator.
              type: string
            entries:
              description: entries are the unbonding delegation entries.
              items:
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
                properties:
                  balance:
                    description: balance defines the tokens to receive at completion.
                    type: string
                  completion_time:
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: 'initial_balance defines the tokens initially scheduled
                      to receive at

                      completion.'
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: 'Strictly positive if this entry''s unbonding has been
                      stopped by external

                      modules'
                    type: string
                type: object
              type: array
            validator_address:
              description: validator_address is the encoded address of the validator.
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
    description: 'QueryDelegatorValidatorResponse response type for the

      Query/DelegatorValidator RPC method.'
    properties:
      validator:
        description: 'Validator defines a validator, together with the total amount
          of the

          Validator''s bond shares and their exchange rate to coins. Slashing results
          in

          a decrease in the exchange rate, allowing correct calculation of future

          undelegations without iterating over delegators. When coins are delegated
          to

          this validator, the validator is credited with a delegation whose number
          of

          bond shares is based on the amount of coins delegated divided by the current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.'
        properties:
          commission:
            description: commission defines the commission parameters.
            properties:
              commission_rates:
                description: 'commission_rates defines the initial commission rates
                  to be used for

                  creating a validator.'
                properties:
                  max_change_rate:
                    description: 'max_change_rate defines the maximum daily increase
                      of the validator

                      commission, as a fraction.'
                    type: string
                  max_rate:
                    description: 'max_rate defines the maximum commission rate which
                      validator can ever

                      charge, as a fraction.'
                    type: string
                  rate:
                    description: rate is the commission rate charged to delegators,
                      as a fraction.
                    type: string
                type: object
              update_time:
                description: update_time is the last time the commission rate was
                  changed.
                format: date-time
                type: string
            type: object
          consensus_pubkey:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          delegator_shares:
            description: delegator_shares defines total shares issued to a validator's
              delegators.
            type: string
          description:
            description: description defines the description terms for the validator.
            properties:
              details:
                description: details define other optional details.
                type: string
              identity:
                description: identity defines an optional identity signature (ex.
                  UPort or Keybase).
                type: string
              moniker:
                description: moniker defines a human-readable name for the validator.
                type: string
              security_contact:
                description: security_contact defines an optional email for security
                  contact.
                type: string
              website:
                description: website defines an optional website link.
                type: string
            type: object
          jailed:
            description: 'jailed defined whether the validator has been jailed from
              bonded status or

              not.'
            type: boolean
          min_self_delegation:
            description: 'min_self_delegation is the validator''s self declared minimum
              self

              delegation.'
            type: string
          operator_address:
            description: 'operator_address defines the address of the validator''s
              operator; bech

              encoded in JSON.'
            type: string
          status:
            default: BOND_STATUS_UNSPECIFIED
            description: status is the validator status (bonded/unbonding/unbonded).
            enum:
            - BOND_STATUS_UNSPECIFIED
            - BOND_STATUS_UNBONDED
            - BOND_STATUS_UNBONDING
            - BOND_STATUS_BONDED
            type: string
          tokens:
            description: tokens define the delegated tokens (incl. self-delegation).
            type: string
          unbonding_height:
            description: 'unbonding_height defines, if unbonding, the height at which
              this validator

              has begun unbonding.'
            format: int64
            type: string
          unbonding_ids:
            items:
              format: uint64
              type: string
            title: 'list of unbonding ids, each uniquely identifing an unbonding of
              this

              validator'
            type: array
          unbonding_on_hold_ref_count:
            format: int64
            title: 'strictly positive if this validator''s unbonding has been stopped
              by

              external modules'
            type: string
          unbonding_time:
            description: 'unbonding_time defines, if unbonding, the min time for the
              validator to

              complete unbonding.'
            format: date-time
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
    description: 'QueryDelegatorValidatorsResponse is response type for the

      Query/DelegatorValidators RPC method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      validators:
        description: validators defines the validators' info of a delegator.
        items:
          description: 'Validator defines a validator, together with the total amount
            of the

            Validator''s bond shares and their exchange rate to coins. Slashing results
            in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated
            to

            this validator, the validator is credited with a delegation whose number
            of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.'
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: 'commission_rates defines the initial commission rates
                    to be used for

                    creating a validator.'
                  properties:
                    max_change_rate:
                      description: 'max_change_rate defines the maximum daily increase
                        of the validator

                        commission, as a fraction.'
                      type: string
                    max_rate:
                      description: 'max_rate defines the maximum commission rate which
                        validator can ever

                        charge, as a fraction.'
                      type: string
                    rate:
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: 'jailed defined whether the validator has been jailed from
                bonded status or

                not.'
              type: boolean
            min_self_delegation:
              description: 'min_self_delegation is the validator''s self declared
                minimum self

                delegation.'
              type: string
            operator_address:
              description: 'operator_address defines the address of the validator''s
                operator; bech

                encoded in JSON.'
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: 'unbonding_height defines, if unbonding, the height at
                which this validator

                has begun unbonding.'
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: 'list of unbonding ids, each uniquely identifing an unbonding
                of this

                validator'
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: 'strictly positive if this validator''s unbonding has been stopped
                by

                external modules'
              type: string
            unbonding_time:
              description: 'unbonding_time defines, if unbonding, the min time for
                the validator to

                complete unbonding.'
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
    description: 'QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
      RPC

      method.'
    properties:
      hist:
        description: hist defines the historical info at the given height.
        properties:
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: prev block info
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          valset:
            items:
              description: 'Validator defines a validator, together with the total
                amount of the

                Validator''s bond shares and their exchange rate to coins. Slashing
                results in

                a decrease in the exchange rate, allowing correct calculation of future

                undelegations without iterating over delegators. When coins are delegated
                to

                this validator, the validator is credited with a delegation whose
                number of

                bond shares is based on the amount of coins delegated divided by the
                current

                exchange rate. Voting power can be calculated as total bonded shares

                multiplied by exchange rate.'
              properties:
                commission:
                  description: commission defines the commission parameters.
                  properties:
                    commission_rates:
                      description: 'commission_rates defines the initial commission
                        rates to be used for

                        creating a validator.'
                      properties:
                        max_change_rate:
                          description: 'max_change_rate defines the maximum daily
                            increase of the validator

                            commission, as a fraction.'
                          type: string
                        max_rate:
                          description: 'max_rate defines the maximum commission rate
                            which validator can ever

                            charge, as a fraction.'
                          type: string
                        rate:
                          description: rate is the commission rate charged to delegators,
                            as a fraction.
                          type: string
                      type: object
                    update_time:
                      description: update_time is the last time the commission rate
                        was changed.
                      format: date-time
                      type: string
                  type: object
                consensus_pubkey:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                delegator_shares:
                  description: delegator_shares defines total shares issued to a validator's
                    delegators.
                  type: string
                description:
                  description: description defines the description terms for the validator.
                  properties:
                    details:
                      description: details define other optional details.
                      type: string
                    identity:
                      description: identity defines an optional identity signature
                        (ex. UPort or Keybase).
                      type: string
                    moniker:
                      description: moniker defines a human-readable name for the validator.
                      type: string
                    security_contact:
                      description: security_contact defines an optional email for
                        security contact.
                      type: string
                    website:
                      description: website defines an optional website link.
                      type: string
                  type: object
                jailed:
                  description: 'jailed defined whether the validator has been jailed
                    from bonded status or

                    not.'
                  type: boolean
                min_self_delegation:
                  description: 'min_self_delegation is the validator''s self declared
                    minimum self

                    delegation.'
                  type: string
                operator_address:
                  description: 'operator_address defines the address of the validator''s
                    operator; bech

                    encoded in JSON.'
                  type: string
                status:
                  default: BOND_STATUS_UNSPECIFIED
                  description: status is the validator status (bonded/unbonding/unbonded).
                  enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                  type: string
                tokens:
                  description: tokens define the delegated tokens (incl. self-delegation).
                  type: string
                unbonding_height:
                  description: 'unbonding_height defines, if unbonding, the height
                    at which this validator

                    has begun unbonding.'
                  format: int64
                  type: string
                unbonding_ids:
                  items:
                    format: uint64
                    type: string
                  title: 'list of unbonding ids, each uniquely identifing an unbonding
                    of this

                    validator'
                  type: array
                unbonding_on_hold_ref_count:
                  format: int64
                  title: 'strictly positive if this validator''s unbonding has been
                    stopped by

                    external modules'
                  type: string
                unbonding_time:
                  description: 'unbonding_time defines, if unbonding, the min time
                    for the validator to

                    complete unbonding.'
                  format: date-time
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.staking.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          bond_denom:
            description: bond_denom defines the bondable coin denomination.
            type: string
          historical_entries:
            description: historical_entries is the number of historical entries to
              persist.
            format: int64
            type: integer
          max_entries:
            description: 'max_entries is the max entries for either unbonding delegation
              or

              redelegation (per pair/trio).'
            format: int64
            type: integer
          max_validators:
            description: max_validators is the maximum number of validators.
            format: int64
            type: integer
          min_commission_rate:
            title: 'min_commission_rate is the chain-wide minimum commission rate
              that a

              validator can charge their delegators'
            type: string
          unbonding_time:
            description: unbonding_time is the time duration of unbonding.
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.QueryPoolResponse:
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
    properties:
      pool:
        description: pool defines the pool info.
        properties:
          bonded_tokens:
            type: string
          not_bonded_tokens:
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.QueryRedelegationsResponse:
    description: 'QueryRedelegationsResponse is response type for the Query/Redelegations
      RPC

      method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      redelegation_responses:
        items:
          description: 'RedelegationResponse is equivalent to a Redelegation except
            that its entries

            contain a balance in addition to shares which is more suitable for client

            responses.'
          properties:
            entries:
              items:
                description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry
                  except that it

                  contains a balance in addition to shares which is more suitable
                  for client

                  responses.'
                properties:
                  balance:
                    type: string
                  redelegation_entry:
                    description: RedelegationEntry defines a redelegation object with
                      relevant metadata.
                    properties:
                      completion_time:
                        description: completion_time defines the unix time for redelegation
                          completion.
                        format: date-time
                        type: string
                      creation_height:
                        description: creation_height  defines the height which the
                          redelegation took place.
                        format: int64
                        type: string
                      initial_balance:
                        description: initial_balance defines the initial balance when
                          redelegation started.
                        type: string
                      shares_dst:
                        description: 'shares_dst is the amount of destination-validator
                          shares created by

                          redelegation.'
                        type: string
                      unbonding_id:
                        format: uint64
                        title: Incrementing id that uniquely identifies this entry
                        type: string
                      unbonding_on_hold_ref_count:
                        format: int64
                        title: 'Strictly positive if this entry''s unbonding has been
                          stopped by external

                          modules'
                        type: string
                    type: object
                type: object
              type: array
            redelegation:
              description: 'Redelegation contains the list of a particular delegator''s
                redelegating bonds

                from a particular source validator to a particular destination validator.'
              properties:
                delegator_address:
                  description: delegator_address is the bech32-encoded address of
                    the delegator.
                  type: string
                entries:
                  description: entries are the redelegation entries.
                  items:
                    description: RedelegationEntry defines a redelegation object with
                      relevant metadata.
                    properties:
                      completion_time:
                        description: completion_time defines the unix time for redelegation
                          completion.
                        format: date-time
                        type: string
                      creation_height:
                        description: creation_height  defines the height which the
                          redelegation took place.
                        format: int64
                        type: string
                      initial_balance:
                        description: initial_balance defines the initial balance when
                          redelegation started.
                        type: string
                      shares_dst:
                        description: 'shares_dst is the amount of destination-validator
                          shares created by

                          redelegation.'
                        type: string
                      unbonding_id:
                        format: uint64
                        title: Incrementing id that uniquely identifies this entry
                        type: string
                      unbonding_on_hold_ref_count:
                        format: int64
                        title: 'Strictly positive if this entry''s unbonding has been
                          stopped by external

                          modules'
                        type: string
                    type: object
                  type: array
                validator_dst_address:
                  description: 'validator_dst_address is the validator redelegation
                    destination operator

                    address.'
                  type: string
                validator_src_address:
                  description: 'validator_src_address is the validator redelegation
                    source operator

                    address.'
                  type: string
              type: object
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
    description: 'QueryDelegationResponse is response type for the Query/UnbondingDelegation

      RPC method.'
    properties:
      unbond:
        description: 'UnbondingDelegation stores all of a single delegator''s unbonding
          bonds

          for a single validator in an time-ordered list.'
        properties:
          delegator_address:
            description: delegator_address is the encoded address of the delegator.
            type: string
          entries:
            description: entries are the unbonding delegation entries.
            items:
              description: UnbondingDelegationEntry defines an unbonding object with
                relevant metadata.
              properties:
                balance:
                  description: balance defines the tokens to receive at completion.
                  type: string
                completion_time:
                  description: completion_time is the unix time for unbonding completion.
                  format: date-time
                  type: string
                creation_height:
                  description: creation_height is the height which the unbonding took
                    place.
                  format: int64
                  type: string
                initial_balance:
                  description: 'initial_balance defines the tokens initially scheduled
                    to receive at

                    completion.'
                  type: string
                unbonding_id:
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                  type: string
                unbonding_on_hold_ref_count:
                  format: int64
                  title: 'Strictly positive if this entry''s unbonding has been stopped
                    by external

                    modules'
                  type: string
              type: object
            type: array
          validator_address:
            description: validator_address is the encoded address of the validator.
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
    properties:
      delegation_responses:
        items:
          description: 'DelegationResponse is equivalent to Delegation except that
            it contains a

            balance in addition to shares which is more suitable for client responses.'
          properties:
            balance:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegation:
              description: 'Delegation represents the bond with tokens held by an
                account. It is

                owned by one delegator, and is associated with the voting power of
                one

                validator.'
              properties:
                delegator_address:
                  description: delegator_address is the encoded address of the delegator.
                  type: string
                shares:
                  description: shares define the delegation shares received.
                  type: string
                validator_address:
                  description: validator_address is the encoded address of the validator.
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    title: 'QueryValidatorDelegationsResponse is response type for the

      Query/ValidatorDelegations RPC method'
    type: object
  cosmos.staking.v1beta1.QueryValidatorResponse:
    properties:
      validator:
        description: 'Validator defines a validator, together with the total amount
          of the

          Validator''s bond shares and their exchange rate to coins. Slashing results
          in

          a decrease in the exchange rate, allowing correct calculation of future

          undelegations without iterating over delegators. When coins are delegated
          to

          this validator, the validator is credited with a delegation whose number
          of

          bond shares is based on the amount of coins delegated divided by the current

          exchange rate. Voting power can be calculated as total bonded shares

          multiplied by exchange rate.'
        properties:
          commission:
            description: commission defines the commission parameters.
            properties:
              commission_rates:
                description: 'commission_rates defines the initial commission rates
                  to be used for

                  creating a validator.'
                properties:
                  max_change_rate:
                    description: 'max_change_rate defines the maximum daily increase
                      of the validator

                      commission, as a fraction.'
                    type: string
                  max_rate:
                    description: 'max_rate defines the maximum commission rate which
                      validator can ever

                      charge, as a fraction.'
                    type: string
                  rate:
                    description: rate is the commission rate charged to delegators,
                      as a fraction.
                    type: string
                type: object
              update_time:
                description: update_time is the last time the commission rate was
                  changed.
                format: date-time
                type: string
            type: object
          consensus_pubkey:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          delegator_shares:
            description: delegator_shares defines total shares issued to a validator's
              delegators.
            type: string
          description:
            description: description defines the description terms for the validator.
            properties:
              details:
                description: details define other optional details.
                type: string
              identity:
                description: identity defines an optional identity signature (ex.
                  UPort or Keybase).
                type: string
              moniker:
                description: moniker defines a human-readable name for the validator.
                type: string
              security_contact:
                description: security_contact defines an optional email for security
                  contact.
                type: string
              website:
                description: website defines an optional website link.
                type: string
            type: object
          jailed:
            description: 'jailed defined whether the validator has been jailed from
              bonded status or

              not.'
            type: boolean
          min_self_delegation:
            description: 'min_self_delegation is the validator''s self declared minimum
              self

              delegation.'
            type: string
          operator_address:
            description: 'operator_address defines the address of the validator''s
              operator; bech

              encoded in JSON.'
            type: string
          status:
            default: BOND_STATUS_UNSPECIFIED
            description: status is the validator status (bonded/unbonding/unbonded).
            enum:
            - BOND_STATUS_UNSPECIFIED
            - BOND_STATUS_UNBONDED
            - BOND_STATUS_UNBONDING
            - BOND_STATUS_BONDED
            type: string
          tokens:
            description: tokens define the delegated tokens (incl. self-delegation).
            type: string
          unbonding_height:
            description: 'unbonding_height defines, if unbonding, the height at which
              this validator

              has begun unbonding.'
            format: int64
            type: string
          unbonding_ids:
            items:
              format: uint64
              type: string
            title: 'list of unbonding ids, each uniquely identifing an unbonding of
              this

              validator'
            type: array
          unbonding_on_hold_ref_count:
            format: int64
            title: 'strictly positive if this validator''s unbonding has been stopped
              by

              external modules'
            type: string
          unbonding_time:
            description: 'unbonding_time defines, if unbonding, the min time for the
              validator to

              complete unbonding.'
            format: date-time
            type: string
        type: object
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
    type: object
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
    description: 'QueryValidatorUnbondingDelegationsResponse is response type for
      the

      Query/ValidatorUnbondingDelegations RPC method.'
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      unbonding_responses:
        items:
          description: 'UnbondingDelegation stores all of a single delegator''s unbonding
            bonds

            for a single validator in an time-ordered list.'
          properties:
            delegator_address:
              description: delegator_address is the encoded address of the delegator.
              type: string
            entries:
              description: entries are the unbonding delegation entries.
              items:
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
                properties:
                  balance:
                    description: balance defines the tokens to receive at completion.
                    type: string
                  completion_time:
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: 'initial_balance defines the tokens initially scheduled
                      to receive at

                      completion.'
                    type: string
                  unbonding_id:
                    format: uint64
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: 'Strictly positive if this entry''s unbonding has been
                      stopped by external

                      modules'
                    type: string
                type: object
              type: array
            validator_address:
              description: validator_address is the encoded address of the validator.
              type: string
          type: object
        type: array
    type: object
  cosmos.staking.v1beta1.QueryValidatorsResponse:
    properties:
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      validators:
        description: validators contains all the queried validators.
        items:
          description: 'Validator defines a validator, together with the total amount
            of the

            Validator''s bond shares and their exchange rate to coins. Slashing results
            in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated
            to

            this validator, the validator is credited with a delegation whose number
            of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.'
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: 'commission_rates defines the initial commission rates
                    to be used for

                    creating a validator.'
                  properties:
                    max_change_rate:
                      description: 'max_change_rate defines the maximum daily increase
                        of the validator

                        commission, as a fraction.'
                      type: string
                    max_rate:
                      description: 'max_rate defines the maximum commission rate which
                        validator can ever

                        charge, as a fraction.'
                      type: string
                    rate:
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: 'jailed defined whether the validator has been jailed from
                bonded status or

                not.'
              type: boolean
            min_self_delegation:
              description: 'min_self_delegation is the validator''s self declared
                minimum self

                delegation.'
              type: string
            operator_address:
              description: 'operator_address defines the address of the validator''s
                operator; bech

                encoded in JSON.'
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: 'unbonding_height defines, if unbonding, the height at
                which this validator

                has begun unbonding.'
              format: int64
              type: string
            unbonding_ids:
              items:
                format: uint64
                type: string
              title: 'list of unbonding ids, each uniquely identifing an unbonding
                of this

                validator'
              type: array
            unbonding_on_hold_ref_count:
              format: int64
              title: 'strictly positive if this validator''s unbonding has been stopped
                by

                external modules'
              type: string
            unbonding_time:
              description: 'unbonding_time defines, if unbonding, the min time for
                the validator to

                complete unbonding.'
              format: date-time
              type: string
          type: object
        type: array
    title: QueryValidatorsResponse is response type for the Query/Validators RPC method
    type: object
  cosmos.staking.v1beta1.Redelegation:
    description: 'Redelegation contains the list of a particular delegator''s redelegating
      bonds

      from a particular source validator to a particular destination validator.'
    properties:
      delegator_address:
        description: delegator_address is the bech32-encoded address of the delegator.
        type: string
      entries:
        description: entries are the redelegation entries.
        items:
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
          properties:
            completion_time:
              description: completion_time defines the unix time for redelegation
                completion.
              format: date-time
              type: string
            creation_height:
              description: creation_height  defines the height which the redelegation
                took place.
              format: int64
              type: string
            initial_balance:
              description: initial_balance defines the initial balance when redelegation
                started.
              type: string
            shares_dst:
              description: 'shares_dst is the amount of destination-validator shares
                created by

                redelegation.'
              type: string
            unbonding_id:
              format: uint64
              title: Incrementing id that uniquely identifies this entry
              type: string
            unbonding_on_hold_ref_count:
              format: int64
              title: 'Strictly positive if this entry''s unbonding has been stopped
                by external

                modules'
              type: string
          type: object
        type: array
      validator_dst_address:
        description: 'validator_dst_address is the validator redelegation destination
          operator

          address.'
        type: string
      validator_src_address:
        description: 'validator_src_address is the validator redelegation source operator

          address.'
        type: string
    type: object
  cosmos.staking.v1beta1.RedelegationEntry:
    description: RedelegationEntry defines a redelegation object with relevant metadata.
    properties:
      completion_time:
        description: completion_time defines the unix time for redelegation completion.
        format: date-time
        type: string
      creation_height:
        description: creation_height  defines the height which the redelegation took
          place.
        format: int64
        type: string
      initial_balance:
        description: initial_balance defines the initial balance when redelegation
          started.
        type: string
      shares_dst:
        description: 'shares_dst is the amount of destination-validator shares created
          by

          redelegation.'
        type: string
      unbonding_id:
        format: uint64
        title: Incrementing id that uniquely identifies this entry
        type: string
      unbonding_on_hold_ref_count:
        format: int64
        title: 'Strictly positive if this entry''s unbonding has been stopped by external

          modules'
        type: string
    type: object
  cosmos.staking.v1beta1.RedelegationEntryResponse:
    description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry except
      that it

      contains a balance in addition to shares which is more suitable for client

      responses.'
    properties:
      balance:
        type: string
      redelegation_entry:
        description: RedelegationEntry defines a redelegation object with relevant
          metadata.
        properties:
          completion_time:
            description: completion_time defines the unix time for redelegation completion.
            format: date-time
            type: string
          creation_height:
            description: creation_height  defines the height which the redelegation
              took place.
            format: int64
            type: string
          initial_balance:
            description: initial_balance defines the initial balance when redelegation
              started.
            type: string
          shares_dst:
            description: 'shares_dst is the amount of destination-validator shares
              created by

              redelegation.'
            type: string
          unbonding_id:
            format: uint64
            title: Incrementing id that uniquely identifies this entry
            type: string
          unbonding_on_hold_ref_count:
            format: int64
            title: 'Strictly positive if this entry''s unbonding has been stopped
              by external

              modules'
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.RedelegationResponse:
    description: 'RedelegationResponse is equivalent to a Redelegation except that
      its entries

      contain a balance in addition to shares which is more suitable for client

      responses.'
    properties:
      entries:
        items:
          description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry
            except that it

            contains a balance in addition to shares which is more suitable for client

            responses.'
          properties:
            balance:
              type: string
            redelegation_entry:
              description: RedelegationEntry defines a redelegation object with relevant
                metadata.
              properties:
                completion_time:
                  description: completion_time defines the unix time for redelegation
                    completion.
                  format: date-time
                  type: string
                creation_height:
                  description: creation_height  defines the height which the redelegation
                    took place.
                  format: int64
                  type: string
                initial_balance:
                  description: initial_balance defines the initial balance when redelegation
                    started.
                  type: string
                shares_dst:
                  description: 'shares_dst is the amount of destination-validator
                    shares created by

                    redelegation.'
                  type: string
                unbonding_id:
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                  type: string
                unbonding_on_hold_ref_count:
                  format: int64
                  title: 'Strictly positive if this entry''s unbonding has been stopped
                    by external

                    modules'
                  type: string
              type: object
          type: object
        type: array
      redelegation:
        description: 'Redelegation contains the list of a particular delegator''s
          redelegating bonds

          from a particular source validator to a particular destination validator.'
        properties:
          delegator_address:
            description: delegator_address is the bech32-encoded address of the delegator.
            type: string
          entries:
            description: entries are the redelegation entries.
            items:
              description: RedelegationEntry defines a redelegation object with relevant
                metadata.
              properties:
                completion_time:
                  description: completion_time defines the unix time for redelegation
                    completion.
                  format: date-time
                  type: string
                creation_height:
                  description: creation_height  defines the height which the redelegation
                    took place.
                  format: int64
                  type: string
                initial_balance:
                  description: initial_balance defines the initial balance when redelegation
                    started.
                  type: string
                shares_dst:
                  description: 'shares_dst is the amount of destination-validator
                    shares created by

                    redelegation.'
                  type: string
                unbonding_id:
                  format: uint64
                  title: Incrementing id that uniquely identifies this entry
                  type: string
                unbonding_on_hold_ref_count:
                  format: int64
                  title: 'Strictly positive if this entry''s unbonding has been stopped
                    by external

                    modules'
                  type: string
              type: object
            type: array
          validator_dst_address:
            description: 'validator_dst_address is the validator redelegation destination
              operator

              address.'
            type: string
          validator_src_address:
            description: 'validator_src_address is the validator redelegation source
              operator

              address.'
            type: string
        type: object
    type: object
  cosmos.staking.v1beta1.UnbondingDelegation:
    description: 'UnbondingDelegation stores all of a single delegator''s unbonding
      bonds

      for a single validator in an time-ordered list.'
    properties:
      delegator_address:
        description: delegator_address is the encoded address of the delegator.
        type: string
      entries:
        description: entries are the unbonding delegation entries.
        items:
          description: UnbondingDelegationEntry defines an unbonding object with relevant
            metadata.
          properties:
            balance:
              description: balance defines the tokens to receive at completion.
              type: string
            completion_time:
              description: completion_time is the unix time for unbonding completion.
              format: date-time
              type: string
            creation_height:
              description: creation_height is the height which the unbonding took
                place.
              format: int64
              type: string
            initial_balance:
              description: 'initial_balance defines the tokens initially scheduled
                to receive at

                completion.'
              type: string
            unbonding_id:
              format: uint64
              title: Incrementing id that uniquely identifies this entry
              type: string
            unbonding_on_hold_ref_count:
              format: int64
              title: 'Strictly positive if this entry''s unbonding has been stopped
                by external

                modules'
              type: string
          type: object
        type: array
      validator_address:
        description: validator_address is the encoded address of the validator.
        type: string
    type: object
  cosmos.staking.v1beta1.UnbondingDelegationEntry:
    description: UnbondingDelegationEntry defines an unbonding object with relevant
      metadata.
    properties:
      balance:
        description: balance defines the tokens to receive at completion.
        type: string
      completion_time:
        description: completion_time is the unix time for unbonding completion.
        format: date-time
        type: string
      creation_height:
        description: creation_height is the height which the unbonding took place.
        format: int64
        type: string
      initial_balance:
        description: 'initial_balance defines the tokens initially scheduled to receive
          at

          completion.'
        type: string
      unbonding_id:
        format: uint64
        title: Incrementing id that uniquely identifies this entry
        type: string
      unbonding_on_hold_ref_count:
        format: int64
        title: 'Strictly positive if this entry''s unbonding has been stopped by external

          modules'
        type: string
    type: object
  cosmos.staking.v1beta1.Validator:
    description: 'Validator defines a validator, together with the total amount of
      the

      Validator''s bond shares and their exchange rate to coins. Slashing results
      in

      a decrease in the exchange rate, allowing correct calculation of future

      undelegations without iterating over delegators. When coins are delegated to

      this validator, the validator is credited with a delegation whose number of

      bond shares is based on the amount of coins delegated divided by the current

      exchange rate. Voting power can be calculated as total bonded shares

      multiplied by exchange rate.'
    properties:
      commission:
        description: commission defines the commission parameters.
        properties:
          commission_rates:
            description: 'commission_rates defines the initial commission rates to
              be used for

              creating a validator.'
            properties:
              max_change_rate:
                description: 'max_change_rate defines the maximum daily increase of
                  the validator

                  commission, as a fraction.'
                type: string
              max_rate:
                description: 'max_rate defines the maximum commission rate which validator
                  can ever

                  charge, as a fraction.'
                type: string
              rate:
                description: rate is the commission rate charged to delegators, as
                  a fraction.
                type: string
            type: object
          update_time:
            description: update_time is the last time the commission rate was changed.
            format: date-time
            type: string
        type: object
      consensus_pubkey:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      delegator_shares:
        description: delegator_shares defines total shares issued to a validator's
          delegators.
        type: string
      description:
        description: description defines the description terms for the validator.
        properties:
          details:
            description: details define other optional details.
            type: string
          identity:
            description: identity defines an optional identity signature (ex. UPort
              or Keybase).
            type: string
          moniker:
            description: moniker defines a human-readable name for the validator.
            type: string
          security_contact:
            description: security_contact defines an optional email for security contact.
            type: string
          website:
            description: website defines an optional website link.
            type: string
        type: object
      jailed:
        description: 'jailed defined whether the validator has been jailed from bonded
          status or

          not.'
        type: boolean
      min_self_delegation:
        description: 'min_self_delegation is the validator''s self declared minimum
          self

          delegation.'
        type: string
      operator_address:
        description: 'operator_address defines the address of the validator''s operator;
          bech

          encoded in JSON.'
        type: string
      status:
        default: BOND_STATUS_UNSPECIFIED
        description: status is the validator status (bonded/unbonding/unbonded).
        enum:
        - BOND_STATUS_UNSPECIFIED
        - BOND_STATUS_UNBONDED
        - BOND_STATUS_UNBONDING
        - BOND_STATUS_BONDED
        type: string
      tokens:
        description: tokens define the delegated tokens (incl. self-delegation).
        type: string
      unbonding_height:
        description: 'unbonding_height defines, if unbonding, the height at which
          this validator

          has begun unbonding.'
        format: int64
        type: string
      unbonding_ids:
        items:
          format: uint64
          type: string
        title: 'list of unbonding ids, each uniquely identifing an unbonding of this

          validator'
        type: array
      unbonding_on_hold_ref_count:
        format: int64
        title: 'strictly positive if this validator''s unbonding has been stopped
          by

          external modules'
        type: string
      unbonding_time:
        description: 'unbonding_time defines, if unbonding, the min time for the validator
          to

          complete unbonding.'
        format: date-time
        type: string
    type: object
  cosmos.tx.signing.v1beta1.SignMode:
    default: SIGN_MODE_UNSPECIFIED
    description: "SignMode represents a signing mode with its own security guarantees.\n\
      \nThis enum should be considered a registry of all known sign modes\nin the\
      \ Cosmos ecosystem. Apps are not expected to support all known\nsign modes.\
      \ Apps that would like to support custom  sign modes are\nencouraged to open\
      \ a small PR against this file to add a new case\nto this SignMode enum describing\
      \ their sign mode so that different\napps have a consistent version of this\
      \ enum.\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown\
      \ signing mode and will be\nrejected.\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT\
      \ specifies a signing mode which uses SignDoc and is\nverified with raw bytes\
      \ from Tx.\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode\
      \ that will verify some\nhuman-readable textual representation on top of the\
      \ binary representation\nfrom SIGN_MODE_DIRECT.\n\nSince: cosmos-sdk 0.50\n\
      \ - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which\
      \ uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does\
      \ not\nrequire signers signing over other signers' `signer_info`.\n\nSince:\
      \ cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON\
      \ is a backwards compatibility mode which uses\nAmino JSON and will be removed\
      \ in the future.\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign\
      \ mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\
      \nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut\
      \ is not implemented on the SDK by default. To enable EIP-191, you need\nto\
      \ pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
      \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
      \nSince: cosmos-sdk 0.45.2"
    enum:
    - SIGN_MODE_UNSPECIFIED
    - SIGN_MODE_DIRECT
    - SIGN_MODE_TEXTUAL
    - SIGN_MODE_DIRECT_AUX
    - SIGN_MODE_LEGACY_AMINO_JSON
    - SIGN_MODE_EIP_191
    type: string
  cosmos.tx.v1beta1.AuthInfo:
    description: 'AuthInfo describes the fee and signer modes that are used to sign
      a

      transaction.'
    properties:
      fee:
        description: 'Fee is the fee and gas limit for the transaction. The first
          signer is the

          primary signer and the one which pays the fee. The fee can be calculated

          based on the cost of evaluating the body and doing signature verification

          of the signers. This can be estimated via simulation.'
        properties:
          amount:
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: amount is the amount of coins to be paid as a fee
            type: array
          gas_limit:
            format: uint64
            title: 'gas_limit is the maximum gas that can be used in transaction processing

              before an out of gas error occurs'
            type: string
          granter:
            title: 'if set, the fee payer (either the first signer or the value of
              the payer

              field) requests that a fee grant be used to pay fees instead of the
              fee

              payer''s own balance. If an appropriate fee grant does not exist or
              the

              chain does not support fee grants, this will fail'
            type: string
          payer:
            description: 'if unset, the first signer is responsible for paying the
              fees. If set, the

              specified account must pay the fees. the payer must be a tx signer (and

              thus have signed this field in AuthInfo). setting this field does *not*

              change the ordering of required signers for the transaction.'
            type: string
        type: object
      signer_infos:
        description: 'signer_infos defines the signing modes for the required signers.
          The number

          and order of elements must match the required signers from TxBody''s

          messages. The first element is the primary signer and the one which pays

          the fee.'
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.SignerInfo'
        type: array
      tip:
        description: 'Tip is the optional tip used for transactions fees paid in another
          denom.


          This field is ignored if the chain didn''t enable tips, i.e. didn''t add
          the

          `TipDecorator` in its posthandler.'
        properties:
          amount:
            items:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: amount is the amount of the tip
            type: array
          tipper:
            title: tipper is the address of the account paying for the tip
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.BroadcastMode:
    default: BROADCAST_MODE_UNSPECIFIED
    description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
      \ RPC\nmethod.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n\
      \ - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,\nBROADCAST_MODE_BLOCK\
      \ is not supported by the SDK from v0.47.x onwards.\n - BROADCAST_MODE_SYNC:\
      \ BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits\n\
      for a CheckTx execution response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC\
      \ defines a tx broadcasting mode where the client\nreturns immediately."
    enum:
    - BROADCAST_MODE_UNSPECIFIED
    - BROADCAST_MODE_BLOCK
    - BROADCAST_MODE_SYNC
    - BROADCAST_MODE_ASYNC
    type: string
  cosmos.tx.v1beta1.BroadcastTxRequest:
    description: 'BroadcastTxRequest is the request type for the Service.BroadcastTxRequest

      RPC method.'
    properties:
      mode:
        default: BROADCAST_MODE_UNSPECIFIED
        description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
          \ RPC\nmethod.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n\
          \ - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,\n\
          BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.\n\
          \ - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode\
          \ where the client waits\nfor a CheckTx execution response only.\n - BROADCAST_MODE_ASYNC:\
          \ BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client\n\
          returns immediately."
        enum:
        - BROADCAST_MODE_UNSPECIFIED
        - BROADCAST_MODE_BLOCK
        - BROADCAST_MODE_SYNC
        - BROADCAST_MODE_ASYNC
        type: string
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.BroadcastTxResponse:
    description: 'BroadcastTxResponse is the response type for the

      Service.BroadcastTx method.'
    properties:
      tx_response:
        description: 'TxResponse defines a structure containing relevant tx data and
          metadata. The

          tags are stringified and the log is JSON decoded.'
        properties:
          code:
            description: Response code.
            format: int64
            type: integer
          codespace:
            title: Namespace for the Code
            type: string
          data:
            description: Result bytes, if any.
            type: string
          events:
            description: 'Events defines all the events emitted by processing a transaction.
              Note,

              these events include those emitted by processing all the messages and
              those

              emitted from the ante. Whereas Logs contains the events, with

              additional metadata, emitted only by processing the messages.'
            items:
              description: 'Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.'
              properties:
                attributes:
                  items:
                    description: EventAttribute is a single key-value pair, associated
                      with an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          gas_used:
            description: Amount of gas consumed by transaction.
            format: int64
            type: string
          gas_wanted:
            description: Amount of gas requested for transaction.
            format: int64
            type: string
          height:
            format: int64
            title: The block height
            type: string
          info:
            description: Additional information. May be non-deterministic.
            type: string
          logs:
            description: The output of the application's logger (typed). May be non-deterministic.
            items:
              description: ABCIMessageLog defines a structure containing an indexed
                tx ABCI message log.
              properties:
                events:
                  description: 'Events contains a slice of Event objects that were
                    emitted during some

                    execution.'
                  items:
                    description: 'StringEvent defines en Event object wrapper where
                      all the attributes

                      contain key/value pairs that are strings instead of raw bytes.'
                    properties:
                      attributes:
                        items:
                          description: 'Attribute defines an attribute wrapper where
                            the key and value are

                            strings instead of raw bytes.'
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      type:
                        type: string
                    type: object
                  type: array
                log:
                  type: string
                msg_index:
                  format: int64
                  type: integer
              type: object
            type: array
          raw_log:
            description: 'The output of the application''s logger (raw string). May
              be

              non-deterministic.'
            type: string
          timestamp:
            description: 'Time of the previous block. For heights > 1, it''s the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For height
              == 1,

              it''s genesis time.'
            type: string
          tx:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          txhash:
            description: The transaction hash.
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.Fee:
    description: 'Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective "gasprice",

      which must be above some miminum to be accepted into the mempool.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: amount is the amount of coins to be paid as a fee
        type: array
      gas_limit:
        format: uint64
        title: 'gas_limit is the maximum gas that can be used in transaction processing

          before an out of gas error occurs'
        type: string
      granter:
        title: 'if set, the fee payer (either the first signer or the value of the
          payer

          field) requests that a fee grant be used to pay fees instead of the fee

          payer''s own balance. If an appropriate fee grant does not exist or the

          chain does not support fee grants, this will fail'
        type: string
      payer:
        description: 'if unset, the first signer is responsible for paying the fees.
          If set, the

          specified account must pay the fees. the payer must be a tx signer (and

          thus have signed this field in AuthInfo). setting this field does *not*

          change the ordering of required signers for the transaction.'
        type: string
    type: object
  cosmos.tx.v1beta1.GetBlockWithTxsResponse:
    description: 'GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs

      method.'
    properties:
      block:
        properties:
          data:
            properties:
              txs:
                description: 'Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We''re just agreeing on the order
                  first.

                  This means that block.AppHash does not include these txs.'
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: 'DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting

                        votes.'
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: 'Vote represents a prevote or precommit vote
                            from validators for

                            consensus.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: 'Vote extension provided by the application.
                                Only valid for precommit

                                messages.'
                              format: byte
                              type: string
                            extension_signature:
                              description: 'Vote extension signature by the validator
                                if they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.'
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: 'Vote signature by the validator if they
                                participated in consensus for the

                                associated block.'
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: "SignedMsgType is a type of signed message\
                                \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                              enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: 'LightClientAttackEvidence contains evidence of
                        a set of validators attempting

                        to mislead a light client.'
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: 'Commit contains the evidence that
                                    a block was committed by a set of

                                    validators.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: CommitSig is a part of the Vote
                                          included in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                            title: BlockIdFlag indicates which BlockID
                                              the signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      description: 'Consensus captures the consensus
                                        rules for processing a block in the

                                        blockchain, including all blockchain data
                                        structures and the rules of the

                                        application''s state transition machine.'
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      title: basic block info
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
          last_commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      pagination:
        description: pagination defines a pagination for the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      txs:
        description: txs are the transactions in the block.
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        type: array
    type: object
  cosmos.tx.v1beta1.GetTxResponse:
    description: GetTxResponse is the response type for the Service.GetTx method.
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the queried transaction.
      tx_response:
        description: 'TxResponse defines a structure containing relevant tx data and
          metadata. The

          tags are stringified and the log is JSON decoded.'
        properties:
          code:
            description: Response code.
            format: int64
            type: integer
          codespace:
            title: Namespace for the Code
            type: string
          data:
            description: Result bytes, if any.
            type: string
          events:
            description: 'Events defines all the events emitted by processing a transaction.
              Note,

              these events include those emitted by processing all the messages and
              those

              emitted from the ante. Whereas Logs contains the events, with

              additional metadata, emitted only by processing the messages.'
            items:
              description: 'Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.'
              properties:
                attributes:
                  items:
                    description: EventAttribute is a single key-value pair, associated
                      with an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          gas_used:
            description: Amount of gas consumed by transaction.
            format: int64
            type: string
          gas_wanted:
            description: Amount of gas requested for transaction.
            format: int64
            type: string
          height:
            format: int64
            title: The block height
            type: string
          info:
            description: Additional information. May be non-deterministic.
            type: string
          logs:
            description: The output of the application's logger (typed). May be non-deterministic.
            items:
              description: ABCIMessageLog defines a structure containing an indexed
                tx ABCI message log.
              properties:
                events:
                  description: 'Events contains a slice of Event objects that were
                    emitted during some

                    execution.'
                  items:
                    description: 'StringEvent defines en Event object wrapper where
                      all the attributes

                      contain key/value pairs that are strings instead of raw bytes.'
                    properties:
                      attributes:
                        items:
                          description: 'Attribute defines an attribute wrapper where
                            the key and value are

                            strings instead of raw bytes.'
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      type:
                        type: string
                    type: object
                  type: array
                log:
                  type: string
                msg_index:
                  format: int64
                  type: integer
              type: object
            type: array
          raw_log:
            description: 'The output of the application''s logger (raw string). May
              be

              non-deterministic.'
            type: string
          timestamp:
            description: 'Time of the previous block. For heights > 1, it''s the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For height
              == 1,

              it''s genesis time.'
            type: string
          tx:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          txhash:
            description: The transaction hash.
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.GetTxsEventResponse:
    description: 'GetTxsEventResponse is the response type for the Service.TxsByEvents

      RPC method.'
    properties:
      pagination:
        description: 'pagination defines a pagination for the response.

          Deprecated post v0.46.x: use total instead.'
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      total:
        format: uint64
        title: total is total number of results available
        type: string
      tx_responses:
        description: tx_responses is the list of queried TxResponses.
        items:
          description: 'TxResponse defines a structure containing relevant tx data
            and metadata. The

            tags are stringified and the log is JSON decoded.'
          properties:
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: Result bytes, if any.
              type: string
            events:
              description: 'Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the messages
                and those

                emitted from the ante. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.'
              items:
                description: 'Event allows application developers to attach additional
                  information to

                  ResponseFinalizeBlock and ResponseCheckTx.

                  Later, transactions may be queried using these events.'
                properties:
                  attributes:
                    items:
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                      properties:
                        index:
                          type: boolean
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            info:
              description: Additional information. May be non-deterministic.
              type: string
            logs:
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
                properties:
                  events:
                    description: 'Events contains a slice of Event objects that were
                      emitted during some

                      execution.'
                    items:
                      description: 'StringEvent defines en Event object wrapper where
                        all the attributes

                        contain key/value pairs that are strings instead of raw bytes.'
                      properties:
                        attributes:
                          items:
                            description: 'Attribute defines an attribute wrapper where
                              the key and value are

                              strings instead of raw bytes.'
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: 'The output of the application''s logger (raw string).
                May be

                non-deterministic.'
              type: string
            timestamp:
              description: 'Time of the previous block. For heights > 1, it''s the
                weighted median of

                the timestamps of the valid votes in the block.LastCommit. For height
                == 1,

                it''s genesis time.'
              type: string
            tx:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            txhash:
              description: The transaction hash.
              type: string
          type: object
        type: array
      txs:
        description: txs is the list of queried transactions.
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        type: array
    type: object
  cosmos.tx.v1beta1.ModeInfo:
    description: ModeInfo describes the signing mode of a single or nested multisig
      signer.
    properties:
      multi:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi'
        title: multi represents a nested multisig signer
      single:
        properties:
          mode:
            default: SIGN_MODE_UNSPECIFIED
            description: "SignMode represents a signing mode with its own security\
              \ guarantees.\n\nThis enum should be considered a registry of all known\
              \ sign modes\nin the Cosmos ecosystem. Apps are not expected to support\
              \ all known\nsign modes. Apps that would like to support custom  sign\
              \ modes are\nencouraged to open a small PR against this file to add\
              \ a new case\nto this SignMode enum describing their sign mode so that\
              \ different\napps have a consistent version of this enum.\n\n - SIGN_MODE_UNSPECIFIED:\
              \ SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n\
              rejected.\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing\
              \ mode which uses SignDoc and is\nverified with raw bytes from Tx.\n\
              \ - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that\
              \ will verify some\nhuman-readable textual representation on top of\
              \ the binary representation\nfrom SIGN_MODE_DIRECT.\n\nSince: cosmos-sdk\
              \ 0.50\n - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing\
              \ mode which uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT,\
              \ this sign mode does not\nrequire signers signing over other signers'\
              \ `signer_info`.\n\nSince: cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON:\
              \ SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which\
              \ uses\nAmino JSON and will be removed in the future.\n - SIGN_MODE_EIP_191:\
              \ SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the\
              \ Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\nCurrently,\
              \ SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut is\
              \ not implemented on the SDK by default. To enable EIP-191, you need\n\
              to pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
              \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
              \nSince: cosmos-sdk 0.45.2"
            enum:
            - SIGN_MODE_UNSPECIFIED
            - SIGN_MODE_DIRECT
            - SIGN_MODE_TEXTUAL
            - SIGN_MODE_DIRECT_AUX
            - SIGN_MODE_LEGACY_AMINO_JSON
            - SIGN_MODE_EIP_191
            title: mode is the signing mode of the single signer
            type: string
        title: single represents a single signer
        type: object
    type: object
  cosmos.tx.v1beta1.ModeInfo.Multi:
    properties:
      bitarray:
        description: 'CompactBitArray is an implementation of a space efficient bit
          array.

          This is used to ensure that the encoded data takes up a minimal amount of

          space after proto encoding.

          This is not thread safe, and is not intended for concurrent usage.'
        properties:
          elems:
            format: byte
            type: string
          extra_bits_stored:
            format: int64
            type: integer
        title: bitarray specifies which keys within the multisig are signing
        type: object
      mode_infos:
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: 'mode_infos is the corresponding modes of the signers of the multisig

          which could include nested multisig public keys'
        type: array
    title: Multi is the mode info for a multisig public key
    type: object
  cosmos.tx.v1beta1.ModeInfo.Single:
    properties:
      mode:
        default: SIGN_MODE_UNSPECIFIED
        description: "SignMode represents a signing mode with its own security guarantees.\n\
          \nThis enum should be considered a registry of all known sign modes\nin\
          \ the Cosmos ecosystem. Apps are not expected to support all known\nsign\
          \ modes. Apps that would like to support custom  sign modes are\nencouraged\
          \ to open a small PR against this file to add a new case\nto this SignMode\
          \ enum describing their sign mode so that different\napps have a consistent\
          \ version of this enum.\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED\
          \ specifies an unknown signing mode and will be\nrejected.\n - SIGN_MODE_DIRECT:\
          \ SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n\
          verified with raw bytes from Tx.\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL\
          \ is a future signing mode that will verify some\nhuman-readable textual\
          \ representation on top of the binary representation\nfrom SIGN_MODE_DIRECT.\n\
          \nSince: cosmos-sdk 0.50\n - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX\
          \ specifies a signing mode which uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT,\
          \ this sign mode does not\nrequire signers signing over other signers' `signer_info`.\n\
          \nSince: cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON\
          \ is a backwards compatibility mode which uses\nAmino JSON and will be removed\
          \ in the future.\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the\
          \ sign mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\
          \nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n\
          but is not implemented on the SDK by default. To enable EIP-191, you need\n\
          to pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
          \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
          \nSince: cosmos-sdk 0.45.2"
        enum:
        - SIGN_MODE_UNSPECIFIED
        - SIGN_MODE_DIRECT
        - SIGN_MODE_TEXTUAL
        - SIGN_MODE_DIRECT_AUX
        - SIGN_MODE_LEGACY_AMINO_JSON
        - SIGN_MODE_EIP_191
        title: mode is the signing mode of the single signer
        type: string
    title: 'Single is the mode info for a single signer. It is structured as a message

      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the

      future'
    type: object
  cosmos.tx.v1beta1.OrderBy:
    default: ORDER_BY_UNSPECIFIED
    description: "- ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
      \ sorting order. OrderBy defaults\nto ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC\
      \ defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending\
      \ order"
    enum:
    - ORDER_BY_UNSPECIFIED
    - ORDER_BY_ASC
    - ORDER_BY_DESC
    title: OrderBy defines the sorting order
    type: string
  cosmos.tx.v1beta1.SignerInfo:
    description: 'SignerInfo describes the public key and signing mode of a single
      top-level

      signer.'
    properties:
      mode_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: 'mode_info describes the signing mode of the signer and is a nested

          structure to support nested multisig pubkey''s'
      public_key:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      sequence:
        description: 'sequence is the sequence of the account, which describes the

          number of committed transactions signed by a given address. It is used to

          prevent replay attacks.'
        format: uint64
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateRequest:
    description: 'SimulateRequest is the request type for the Service.Simulate

      RPC method.'
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: 'tx is the transaction to simulate.

          Deprecated. Send raw tx bytes instead.'
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateResponse:
    description: 'SimulateResponse is the response type for the

      Service.SimulateRPC method.'
    properties:
      gas_info:
        description: gas_info is the information about gas used in the simulation.
        properties:
          gas_used:
            description: GasUsed is the amount of gas actually consumed.
            format: uint64
            type: string
          gas_wanted:
            description: GasWanted is the maximum units of work we allow this tx to
              perform.
            format: uint64
            type: string
        type: object
      result:
        description: result is the result of the simulation.
        properties:
          data:
            description: 'Data is any data returned from message or handler execution.
              It MUST be

              length prefixed in order to separate data from multiple message executions.

              Deprecated. This field is still populated, but prefer msg_response instead

              because it also contains the Msg response typeURL.'
            format: byte
            type: string
          events:
            description: 'Events contains a slice of Event objects that were emitted
              during message

              or handler execution.'
            items:
              description: 'Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.'
              properties:
                attributes:
                  items:
                    description: EventAttribute is a single key-value pair, associated
                      with an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          log:
            description: Log contains the log information from message or handler
              execution.
            type: string
          msg_responses:
            description: msg_responses contains the Msg handler responses type packed
              in Anys.
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.tx.v1beta1.Tip:
    description: Tip is the tip used for meta-transactions.
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: amount is the amount of the tip
        type: array
      tipper:
        title: tipper is the address of the account paying for the tip
        type: string
    type: object
  cosmos.tx.v1beta1.Tx:
    description: Tx is the standard type used for broadcasting transactions.
    properties:
      auth_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.AuthInfo'
        title: 'auth_info is the authorization related content of the transaction,

          specifically signers, signer modes and fee'
      body:
        description: TxBody is the body of a transaction that all signers sign over.
        properties:
          extension_options:
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            title: 'extension_options are arbitrary options that can be added by chains

              when the default options are not sufficient. If any of these are present

              and can''t be handled, the transaction will be rejected'
            type: array
          memo:
            description: 'memo is any arbitrary note/comment to be added to the transaction.

              WARNING: in clients, any publicly exposed text should not be called
              memo,

              but should be called `note` instead (see

              https://github.com/cosmos/cosmos-sdk/issues/9122).'
            type: string
          messages:
            description: 'messages is a list of messages to be executed. The required
              signers of

              those messages define the number and order of elements in AuthInfo''s

              signer_infos and Tx''s signatures. Each required signer address is added
              to

              the list only the first time it occurs.

              By convention, the first required signer (usually from the first message)

              is referred to as the primary signer and pays the fee for the whole

              transaction.'
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            type: array
          non_critical_extension_options:
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            title: 'extension_options are arbitrary options that can be added by chains

              when the default options are not sufficient. If any of these are present

              and can''t be handled, they will be ignored'
            type: array
          timeout_height:
            description: 'timeout_height is the block height after which this transaction
              will not

              be processed by the chain.'
            format: uint64
            type: string
          timeout_timestamp:
            description: 'timeout_timestamp is the block time after which this transaction
              will not

              be processed by the chain.


              Note, if unordered=true this value MUST be set

              and will act as a short-lived TTL in which the transaction is deemed
              valid

              and kept in memory to prevent duplicates.'
            format: date-time
            type: string
          unordered:
            description: 'unordered, when set to true, indicates that the transaction
              signer(s)

              intend for the transaction to be evaluated and executed in an un-ordered

              fashion. Specifically, the account''s nonce will NOT be checked or

              incremented, which allows for fire-and-forget as well as concurrent

              transaction execution.


              Note, when set to true, the existing ''timeout_timestamp'' value must

              be set and will be used to correspond to a timestamp in which the

              transaction is deemed valid.'
            type: boolean
        title: body is the processable content of the transaction
        type: object
      signatures:
        description: 'signatures is a list of signatures that matches the length and
          order of

          AuthInfo''s signer_infos to allow connecting signature meta information
          like

          public key and signing mode by position.'
        items:
          format: byte
          type: string
        type: array
    type: object
  cosmos.tx.v1beta1.TxBody:
    description: TxBody is the body of a transaction that all signers sign over.
    properties:
      extension_options:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: 'extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are present

          and can''t be handled, the transaction will be rejected'
        type: array
      memo:
        description: 'memo is any arbitrary note/comment to be added to the transaction.

          WARNING: in clients, any publicly exposed text should not be called memo,

          but should be called `note` instead (see

          https://github.com/cosmos/cosmos-sdk/issues/9122).'
        type: string
      messages:
        description: 'messages is a list of messages to be executed. The required
          signers of

          those messages define the number and order of elements in AuthInfo''s

          signer_infos and Tx''s signatures. Each required signer address is added
          to

          the list only the first time it occurs.

          By convention, the first required signer (usually from the first message)

          is referred to as the primary signer and pays the fee for the whole

          transaction.'
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      non_critical_extension_options:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: 'extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are present

          and can''t be handled, they will be ignored'
        type: array
      timeout_height:
        description: 'timeout_height is the block height after which this transaction
          will not

          be processed by the chain.'
        format: uint64
        type: string
      timeout_timestamp:
        description: 'timeout_timestamp is the block time after which this transaction
          will not

          be processed by the chain.


          Note, if unordered=true this value MUST be set

          and will act as a short-lived TTL in which the transaction is deemed valid

          and kept in memory to prevent duplicates.'
        format: date-time
        type: string
      unordered:
        description: 'unordered, when set to true, indicates that the transaction
          signer(s)

          intend for the transaction to be evaluated and executed in an un-ordered

          fashion. Specifically, the account''s nonce will NOT be checked or

          incremented, which allows for fire-and-forget as well as concurrent

          transaction execution.


          Note, when set to true, the existing ''timeout_timestamp'' value must

          be set and will be used to correspond to a timestamp in which the

          transaction is deemed valid.'
        type: boolean
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoRequest:
    description: 'TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino

      RPC method.'
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoResponse:
    description: 'TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino

      RPC method.'
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeRequest:
    description: 'TxDecodeRequest is the request type for the Service.TxDecode

      RPC method.'
    properties:
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeResponse:
    description: 'TxDecodeResponse is the response type for the

      Service.TxDecode method.'
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the decoded transaction.
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoRequest:
    description: 'TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino

      RPC method.'
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoResponse:
    description: 'TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino

      RPC method.'
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeRequest:
    description: 'TxEncodeRequest is the request type for the Service.TxEncode

      RPC method.'
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the transaction to encode.
    type: object
  cosmos.tx.v1beta1.TxEncodeResponse:
    description: 'TxEncodeResponse is the response type for the

      Service.TxEncode method.'
    properties:
      tx_bytes:
        description: tx_bytes is the encoded transaction bytes.
        format: byte
        type: string
    type: object
  cosmos.upgrade.v1beta1.ModuleVersion:
    description: ModuleVersion specifies a module and its consensus version.
    properties:
      name:
        title: name of the app module
        type: string
      version:
        format: uint64
        title: consensus version of the app module
        type: string
    type: object
  cosmos.upgrade.v1beta1.MsgCancelUpgrade:
    description: MsgCancelUpgrade is the Msg/CancelUpgrade request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
    type: object
  cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse:
    description: MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type.
    type: object
  cosmos.upgrade.v1beta1.MsgSoftwareUpgrade:
    description: MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      plan:
        description: plan is the upgrade plan.
        properties:
          height:
            description: The height at which the upgrade must be performed.
            format: int64
            type: string
          info:
            title: 'Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade to'
            type: string
          name:
            description: 'Sets the name for the upgrade. This name will be used by
              the upgraded

              version of the software to apply any special "on-upgrade" commands during

              the first BeginBlock method after the upgrade is applied. It is also
              used

              to detect whether a software version can handle a given upgrade. If
              no

              upgrade handler with this name has been set in the software, it will
              be

              assumed that the software is out-of-date when the upgrade Time or Height
              is

              reached and the software will exit.'
            type: string
          time:
            description: 'Deprecated: Time based upgrades have been deprecated. Time
              based upgrade

              logic has been removed from the SDK. If this field is not empty, an
              error

              will be thrown.'
            format: date-time
            type: string
          upgraded_client_state:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
        type: object
    type: object
  cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse:
    description: MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type.
    type: object
  cosmos.upgrade.v1beta1.Plan:
    description: Plan specifies information about a planned upgrade and when it should
      occur.
    properties:
      height:
        description: The height at which the upgrade must be performed.
        format: int64
        type: string
      info:
        title: 'Any application specific upgrade info to be included on-chain

          such as a git commit that validators could automatically upgrade to'
        type: string
      name:
        description: 'Sets the name for the upgrade. This name will be used by the
          upgraded

          version of the software to apply any special "on-upgrade" commands during

          the first BeginBlock method after the upgrade is applied. It is also used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will be

          assumed that the software is out-of-date when the upgrade Time or Height
          is

          reached and the software will exit.'
        type: string
      time:
        description: 'Deprecated: Time based upgrades have been deprecated. Time based
          upgrade

          logic has been removed from the SDK. If this field is not empty, an error

          will be thrown.'
        format: date-time
        type: string
      upgraded_client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    type: object
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    description: 'QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.'
    properties:
      height:
        description: height is the block height at which the plan was applied.
        format: int64
        type: string
    type: object
  cosmos.upgrade.v1beta1.QueryAuthorityResponse:
    properties:
      address:
        type: string
    title: QueryAuthorityResponse is the response type for Query/Authority
    type: object
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    description: 'QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.'
    properties:
      plan:
        description: plan is the current upgrade plan.
        properties:
          height:
            description: The height at which the upgrade must be performed.
            format: int64
            type: string
          info:
            title: 'Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade to'
            type: string
          name:
            description: 'Sets the name for the upgrade. This name will be used by
              the upgraded

              version of the software to apply any special "on-upgrade" commands during

              the first BeginBlock method after the upgrade is applied. It is also
              used

              to detect whether a software version can handle a given upgrade. If
              no

              upgrade handler with this name has been set in the software, it will
              be

              assumed that the software is out-of-date when the upgrade Time or Height
              is

              reached and the software will exit.'
            type: string
          time:
            description: 'Deprecated: Time based upgrades have been deprecated. Time
              based upgrade

              logic has been removed from the SDK. If this field is not empty, an
              error

              will be thrown.'
            format: date-time
            type: string
          upgraded_client_state:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
        type: object
    type: object
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
    description: 'QueryModuleVersionsResponse is the response type for the Query/ModuleVersions

      RPC method.'
    properties:
      module_versions:
        description: module_versions is a list of module names with their consensus
          versions.
        items:
          description: ModuleVersion specifies a module and its consensus version.
          properties:
            name:
              title: name of the app module
              type: string
            version:
              format: uint64
              title: consensus version of the app module
              type: string
          type: object
        type: array
    type: object
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    description: 'QueryUpgradedConsensusStateResponse is the response type for the

      Query/UpgradedConsensusState RPC method.'
    properties:
      upgraded_consensus_state:
        format: byte
        type: string
    type: object
  dysonprotocol.crontask.v1.MsgCreateTask:
    properties:
      creator:
        title: Address of the creator of the task
        type: string
      expiry_timestamp:
        title: 'Unix timestamp after which the task will expire if not executed

          Can be either a Unix timestamp or a time offset prefixed with "+" (e.g.

          "+2h") When using an offset, it''s relative to the scheduled_timestamp'
        type: string
      msgs:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: Messages to execute as part of the task
        type: array
      scheduled_timestamp:
        title: 'Unix timestamp when the task is scheduled to execute

          Can be either a Unix timestamp or a time offset prefixed with "+" (e.g.

          "+1h30m") Offset is relative to the current block time'
        type: string
      task_gas_fee:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: Gas fee for the task execution
        type: object
      task_gas_limit:
        format: uint64
        title: Maximum gas limit for the task execution
        type: string
    title: MsgCreateTask defines the message for creating a new task
    type: object
  dysonprotocol.crontask.v1.MsgCreateTaskResponse:
    properties:
      task_id:
        format: uint64
        title: The ID of the created task
        type: string
    title: MsgCreateTaskResponse defines the response for creating a new task
    type: object
  dysonprotocol.crontask.v1.MsgDeleteTask:
    properties:
      creator:
        title: Address of the creator of the task
        type: string
      task_id:
        format: uint64
        title: ID of the task to delete
        type: string
    title: MsgDeleteTask defines the message for deleting a task
    type: object
  dysonprotocol.crontask.v1.MsgDeleteTaskResponse:
    title: MsgDeleteTaskResponse defines the response for deleting a task
    type: object
  dysonprotocol.crontask.v1.MsgUpdateParams:
    description: '---------------------------------------------------------------------------

      MsgUpdateParams

      ---------------------------------------------------------------------------

      UpdateParams defines a governance operation for updating the x/crontask

      module parameters. The authority defaults to the x/gov module account.'
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/crontask parameters to update.

          NOTE: All parameters must be supplied.'
        properties:
          block_gas_limit:
            format: uint64
            title: Maximum gas allowed for executing tasks per block
            type: string
          clean_up_time:
            format: int64
            title: Retention period for completed/failed/expired tasks (seconds)
            type: string
          expiry_limit:
            format: int64
            title: Default expiry limit in seconds (24 hours)
            type: string
          max_scheduled_time:
            format: int64
            title: Maximum allowed scheduled time in seconds from task creation (24
              hours)
            type: string
        title: Params defines the parameters for the crontask module
        type: object
    type: object
  dysonprotocol.crontask.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  dysonprotocol.crontask.v1.Params:
    properties:
      block_gas_limit:
        format: uint64
        title: Maximum gas allowed for executing tasks per block
        type: string
      clean_up_time:
        format: int64
        title: Retention period for completed/failed/expired tasks (seconds)
        type: string
      expiry_limit:
        format: int64
        title: Default expiry limit in seconds (24 hours)
        type: string
      max_scheduled_time:
        format: int64
        title: Maximum allowed scheduled time in seconds from task creation (24 hours)
        type: string
    title: Params defines the parameters for the crontask module
    type: object
  dysonprotocol.crontask.v1.QueryParamsResponse:
    properties:
      params:
        properties:
          block_gas_limit:
            format: uint64
            title: Maximum gas allowed for executing tasks per block
            type: string
          clean_up_time:
            format: int64
            title: Retention period for completed/failed/expired tasks (seconds)
            type: string
          expiry_limit:
            format: int64
            title: Default expiry limit in seconds (24 hours)
            type: string
          max_scheduled_time:
            format: int64
            title: Maximum allowed scheduled time in seconds from task creation (24
              hours)
            type: string
        title: Params defines the parameters for the crontask module
        type: object
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    type: object
  dysonprotocol.crontask.v1.QueryTaskByIDResponse:
    properties:
      task:
        properties:
          creation_time:
            format: int64
            title: Block timestamp when the task was created
            type: string
          creator:
            title: Address of the creator of the task
            type: string
          error_log:
            title: Error message if task execution failed
            type: string
          execution_timestamp:
            format: int64
            title: Block timestamp when the task was executed (only for DONE / FAILED)
            type: string
          expiry_timestamp:
            format: int64
            title: Unix timestamp after which the task will expire if not executed
            type: string
          msg_results:
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            title: Results of message execution
            type: array
          msgs:
            items:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            title: Messages to execute as part of the task
            type: array
          scheduled_timestamp:
            format: int64
            title: Unix timestamp when the task is scheduled to execute
            type: string
          status:
            title: 'Current status of the task: Scheduled, Pending, Done, Failed,
              Expired'
            type: string
          task_gas_consumed:
            format: uint64
            title: Actual gas consumed during task execution
            type: string
          task_gas_fee:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            title: Gas fee for the task execution
            type: object
          task_gas_limit:
            format: uint64
            title: Maximum gas limit for the task execution
            type: string
          task_gas_price:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            title: 'Gas price for the task execution which is calculated automatically

              from task_gas_fee / task_gas_limit'
            type: object
          task_id:
            format: uint64
            title: The unique identifier for the task
            type: string
        title: Task represents a scheduled task in the crontask system
        type: object
    title: QueryTaskByIDResponse is the response type for the Query/TaskByID RPC method
    type: object
  dysonprotocol.crontask.v1.QueryTasksResponse:
    properties:
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
      tasks:
        description: 'Explicit json tag without omitempty to ensure empty arrays are
          included in

          marshalled output so clients can reliably expect the "tasks" key.'
        items:
          properties:
            creation_time:
              format: int64
              title: Block timestamp when the task was created
              type: string
            creator:
              title: Address of the creator of the task
              type: string
            error_log:
              title: Error message if task execution failed
              type: string
            execution_timestamp:
              format: int64
              title: Block timestamp when the task was executed (only for DONE / FAILED)
              type: string
            expiry_timestamp:
              format: int64
              title: Unix timestamp after which the task will expire if not executed
              type: string
            msg_results:
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              title: Results of message execution
              type: array
            msgs:
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              title: Messages to execute as part of the task
              type: array
            scheduled_timestamp:
              format: int64
              title: Unix timestamp when the task is scheduled to execute
              type: string
            status:
              title: 'Current status of the task: Scheduled, Pending, Done, Failed,
                Expired'
              type: string
            task_gas_consumed:
              format: uint64
              title: Actual gas consumed during task execution
              type: string
            task_gas_fee:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              title: Gas fee for the task execution
              type: object
            task_gas_limit:
              format: uint64
              title: Maximum gas limit for the task execution
              type: string
            task_gas_price:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              title: 'Gas price for the task execution which is calculated automatically

                from task_gas_fee / task_gas_limit'
              type: object
            task_id:
              format: uint64
              title: The unique identifier for the task
              type: string
          title: Task represents a scheduled task in the crontask system
          type: object
        type: array
    title: 'QueryTasksResponse is the response type for task queries with multiple

      results'
    type: object
  dysonprotocol.crontask.v1.Task:
    properties:
      creation_time:
        format: int64
        title: Block timestamp when the task was created
        type: string
      creator:
        title: Address of the creator of the task
        type: string
      error_log:
        title: Error message if task execution failed
        type: string
      execution_timestamp:
        format: int64
        title: Block timestamp when the task was executed (only for DONE / FAILED)
        type: string
      expiry_timestamp:
        format: int64
        title: Unix timestamp after which the task will expire if not executed
        type: string
      msg_results:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: Results of message execution
        type: array
      msgs:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        title: Messages to execute as part of the task
        type: array
      scheduled_timestamp:
        format: int64
        title: Unix timestamp when the task is scheduled to execute
        type: string
      status:
        title: 'Current status of the task: Scheduled, Pending, Done, Failed, Expired'
        type: string
      task_gas_consumed:
        format: uint64
        title: Actual gas consumed during task execution
        type: string
      task_gas_fee:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: Gas fee for the task execution
        type: object
      task_gas_limit:
        format: uint64
        title: Maximum gas limit for the task execution
        type: string
      task_gas_price:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: 'Gas price for the task execution which is calculated automatically

          from task_gas_fee / task_gas_limit'
        type: object
      task_id:
        format: uint64
        title: The unique identifier for the task
        type: string
    title: Task represents a scheduled task in the crontask system
    type: object
  dysonprotocol.nameservice.v1.ComputeHashResponse:
    properties:
      hex_hash:
        title: hex_hash is the computed hash as a hex string
        type: string
    title: ComputeHashResponse contains the computed hash as a hex string
    type: object
  dysonprotocol.nameservice.v1.MsgAcceptBid:
    properties:
      nft_class_id:
        type: string
      nft_id:
        type: string
      owner:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgAcceptBidResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgBurnCoins:
    description: 'MsgBurnCoins burns coins from the owner''s balance, if each coin''s
      root name

      is owned by that owner.'
    properties:
      amount:
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: Using the same annotation as MintCoins for consistency
        type: array
      owner:
        title: Owner address
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgBurnCoinsResponse:
    title: Response for BurnCoins
    type: object
  dysonprotocol.nameservice.v1.MsgBurnNFT:
    properties:
      class_id:
        type: string
      nft_id:
        type: string
      owner:
        type: string
    title: BurnNFT
    type: object
  dysonprotocol.nameservice.v1.MsgBurnNFTResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgClaimBid:
    properties:
      bidder:
        type: string
      nft_class_id:
        type: string
      nft_id:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgClaimBidResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgCommit:
    properties:
      committer:
        type: string
      hexhash:
        type: string
      valuation:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  dysonprotocol.nameservice.v1.MsgCommitResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgMintCoins:
    description: 'MsgMintCoins mints coins into the owner''s balance, as long as each
      coin''s

      "root name" is owned by that owner.'
    properties:
      amount:
        description: 'Using repeated cosmos.base.v1beta1.Coin with the annotation

          (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"

          so that the generated Go code will have `Amount sdk.Coins` automatically.'
        items:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      owner:
        title: Owner must be a valid address
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgMintCoinsResponse:
    title: Response for MintCoins
    type: object
  dysonprotocol.nameservice.v1.MsgMintNFT:
    properties:
      class_id:
        type: string
      nft_id:
        type: string
      owner:
        type: string
      uri:
        type: string
      uri_hash:
        type: string
    title: MintNFT
    type: object
  dysonprotocol.nameservice.v1.MsgMintNFTResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgMoveCoins:
    description: 'MsgMoveCoins moves custom denom coins between two accounts if signer
      owns the

      root denom.'
    properties:
      inputs:
        description: 'Single input expected: the account holding the coins.'
        items:
          description: Input models transaction input.
          properties:
            address:
              type: string
            coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        type: array
      outputs:
        description: One or multiple outputs; each destination must be a non-module
          account.
        items:
          description: Output models transaction outputs.
          properties:
            address:
              type: string
            coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
        type: array
      owner:
        description: Signer must own the root name of each coin denoms in all inputs.
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgMoveCoinsResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgMoveNft:
    description: MsgMoveNft moves an NFT between accounts when signer owns the NFT
      class.
    properties:
      class_id:
        type: string
      from_address:
        title: Current holder (must match NFT owner, non-module)
        type: string
      nft_id:
        type: string
      owner:
        title: Signer owning class root name
        type: string
      to_address:
        title: Destination holder (non-module)
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgMoveNftResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgPlaceBid:
    properties:
      bid_amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      bidder:
        type: string
      nft_class_id:
        type: string
      nft_id:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgPlaceBidResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgRejectBid:
    properties:
      new_valuation:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      nft_class_id:
        type: string
      nft_id:
        type: string
      owner:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgRejectBidResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgRenew:
    properties:
      nft_class_id:
        type: string
      nft_id:
        type: string
      payer:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgRenewResponse:
    properties:
      expiry:
        format: date-time
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgReveal:
    properties:
      committer:
        type: string
      name:
        type: string
      salt:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgRevealResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgSaveClass:
    properties:
      class_id:
        type: string
      description:
        type: string
      name:
        type: string
      owner:
        type: string
      symbol:
        type: string
      uri:
        type: string
      uri_hash:
        type: string
    title: SaveClass
    type: object
  dysonprotocol.nameservice.v1.MsgSaveClassResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgSetDenomMetadata:
    description: 'MsgSetDenomMetadata allows a governance-authorized account to set
      denom

      metadata.'
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      metadata:
        description: The bank module metadata describing the denom, display, base,
          etc.
        properties:
          base:
            description: base represents the base denom (should be the DenomUnit with
              exponent = 0).
            type: string
          denom_units:
            items:
              description: 'DenomUnit represents a struct that describes a given

                denomination unit of the basic token.'
              properties:
                aliases:
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
                  type: array
                denom:
                  description: denom represents the string name of the given denom
                    unit (e.g uatom).
                  type: string
                exponent:
                  description: 'exponent represents power of 10 exponent that one
                    must

                    raise the base_denom to in order to equal the given DenomUnit''s
                    denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit of
                    ''atom'' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).'
                  format: int64
                  type: integer
              type: object
            title: denom_units represents the list of DenomUnit's for a given coin
            type: array
          description:
            type: string
          display:
            description: 'display indicates the suggested denom that should be

              displayed in clients.'
            type: string
          name:
            title: 'name defines the name of the token (eg: Cosmos Atom)'
            type: string
          symbol:
            description: 'symbol is the token symbol usually shown on exchanges (eg:
              ATOM). This can

              be the same as the display.'
            type: string
          uri:
            description: 'URI to a document (on or off-chain) that contains additional
              information.

              Optional.'
            type: string
          uri_hash:
            description: 'URIHash is a sha256 hash of a document pointed by URI. It''s
              used to verify

              that the document didn''t change. Optional.'
            type: string
        type: object
    type: object
  dysonprotocol.nameservice.v1.MsgSetDenomMetadataResponse:
    description: 'MsgSetDenomMetadataResponse defines the response structure for executing
      a

      MsgSetDenomMetadata message.'
    type: object
  dysonprotocol.nameservice.v1.MsgSetDestination:
    properties:
      destination:
        type: string
      name:
        type: string
      owner:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgSetDestinationResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgSetNFTClassExtraData:
    properties:
      class_id:
        type: string
      extra_data:
        type: string
      owner:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgSetNFTClassExtraDataResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgSetNFTMetadata:
    properties:
      class_id:
        type: string
      metadata:
        type: string
      nft_id:
        type: string
      owner:
        type: string
    type: object
  dysonprotocol.nameservice.v1.MsgSetNFTMetadataResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgSetValuation:
    properties:
      nft_class_id:
        type: string
      nft_id:
        type: string
      owner:
        type: string
      valuation:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  dysonprotocol.nameservice.v1.MsgSetValuationResponse:
    type: object
  dysonprotocol.nameservice.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/nameservice parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          allowed_denoms:
            items:
              type: string
            title: 'allowed_denoms defines the denominations that are allowed to be
              used for

              valuations and bids'
            type: array
          bid_timeout:
            title: 'bid_timeout defines the duration after which a bid can be claimed
              by the

              bidder'
            type: string
          minimum_bid_percent_increase:
            title: 'minimum_bid_percent_increase defines the minimum percentage increase

              required for a new bid compared to the previous bid'
            type: string
          reject_bid_valuation_fee_percent:
            title: 'reject_bid_valuation_fee_percent defines the percentage of the
              new

              valuation to charge as a fee when rejecting a bid'
            type: string
        type: object
    type: object
  dysonprotocol.nameservice.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  dysonprotocol.nameservice.v1.Params:
    description: Params defines the parameters for the nameservice module.
    properties:
      allowed_denoms:
        items:
          type: string
        title: 'allowed_denoms defines the denominations that are allowed to be used
          for

          valuations and bids'
        type: array
      bid_timeout:
        title: 'bid_timeout defines the duration after which a bid can be claimed
          by the

          bidder'
        type: string
      minimum_bid_percent_increase:
        title: 'minimum_bid_percent_increase defines the minimum percentage increase

          required for a new bid compared to the previous bid'
        type: string
      reject_bid_valuation_fee_percent:
        title: 'reject_bid_valuation_fee_percent defines the percentage of the new

          valuation to charge as a fee when rejecting a bid'
        type: string
    type: object
  dysonprotocol.nameservice.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          allowed_denoms:
            items:
              type: string
            title: 'allowed_denoms defines the denominations that are allowed to be
              used for

              valuations and bids'
            type: array
          bid_timeout:
            title: 'bid_timeout defines the duration after which a bid can be claimed
              by the

              bidder'
            type: string
          minimum_bid_percent_increase:
            title: 'minimum_bid_percent_increase defines the minimum percentage increase

              required for a new bid compared to the previous bid'
            type: string
          reject_bid_valuation_fee_percent:
            title: 'reject_bid_valuation_fee_percent defines the percentage of the
              new

              valuation to charge as a fee when rejecting a bid'
            type: string
        type: object
    type: object
  dysonprotocol.script.v1.MsgCreateNewScript:
    description: MsgCreateNewScript is the Msg/CreateNewScript request type.
    properties:
      code:
        description: code is the script content.
        type: string
      creator_address:
        description: creator is the account address creating the script.
        type: string
    type: object
  dysonprotocol.script.v1.MsgCreateNewScriptResponse:
    description: MsgCreateNewScriptResponse is the Msg/CreateNewScript response type.
    properties:
      script_address:
        description: script_address is the address of the newly created script.
        type: string
      version:
        description: version is the initial script version.
        format: uint64
        type: string
    type: object
  dysonprotocol.script.v1.MsgExec:
    description: MsgExec executes a script by calling a function with arguments.
    properties:
      args:
        title: 'The positional arguments to pass to the function (*args) encoded as
          a

          json list'
        type: string
      attached_messages:
        description: 'Any attached_messages is the list of attached messages

          to run before the script and the result will be passed

          to the script. If any of the attached messages fails,

          the script execution will be aborted.'
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      executor_address:
        description: executor is the account address used to execute the script.
        type: string
      extra_code:
        description: 'Only if the executor is the owner of the script  will the optional

          extra_code be temporary appended to the script for this message before

          calling the function.'
        type: string
      function_name:
        title: The function name to run
        type: string
      kwargs:
        title: 'The keyword argument to pass to the function (**kwargs) encoded as
          a

          json dict'
        type: string
      script_address:
        title: 'address is the script address to execute.

          This can be either a bech32 address or a nameservice name (e.g.,

          "example.dys")'
        type: string
    type: object
  dysonprotocol.script.v1.MsgExecResponse:
    description: MsgExecResponse is the Msg/Exec request type.
    properties:
      attached_message_results:
        description: Results of the attached messages.
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      result:
        description: result is the final result of the proposal execution.
        type: string
    type: object
  dysonprotocol.script.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      authority:
        description: 'authority is the address that controls the module (defaults
          to x/gov unless

          overwritten).'
        type: string
      params:
        description: 'params defines the x/script parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          absolute_historical_block_cutoff:
            description: 'absolute_historical_block_cutoff defines the lowest absolute
              block height

              that nodes are required to have when max_relative_historical_blocks
              is

              enforced. This parameter is used when params are updated so that if

              MaxRelativeHistoricalBlocks is increased, nodes are not suddenly required

              to retroactively have historical blocks that predate this cutoff. When

              MaxRelativeHistoricalBlocks validation occurs, the oldest required block

              height will be max(current_height - max_relative_historical_blocks,

              absolute_historical_block_cutoff).'
            format: int64
            type: string
          max_relative_historical_blocks:
            description: 'max_relative_historical_blocks defines the maximum number
              of historical

              blocks relative to the current block height that must be kept by nodes
              for

              script queries. For example, if this value is 1000 and the current height

              is 5000, nodes must be able to query blocks back to height 4000.'
            format: int64
            type: string
        type: object
    type: object
  dysonprotocol.script.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  dysonprotocol.script.v1.MsgUpdateScript:
    description: MsgUpdateScript is the Msg/UpdateScript request type.
    properties:
      address:
        description: address is the account address of the script.
        type: string
      code:
        description: script is the updated script.
        type: string
    type: object
  dysonprotocol.script.v1.MsgUpdateScriptResponse:
    description: MsgUpdateScriptResponse is the Msg/UpdateScript response type.
    properties:
      version:
        description: version is the updated script version.
        format: uint64
        type: string
    type: object
  dysonprotocol.script.v1.Params:
    description: Params defines the parameters for the script module.
    properties:
      absolute_historical_block_cutoff:
        description: 'absolute_historical_block_cutoff defines the lowest absolute
          block height

          that nodes are required to have when max_relative_historical_blocks is

          enforced. This parameter is used when params are updated so that if

          MaxRelativeHistoricalBlocks is increased, nodes are not suddenly required

          to retroactively have historical blocks that predate this cutoff. When

          MaxRelativeHistoricalBlocks validation occurs, the oldest required block

          height will be max(current_height - max_relative_historical_blocks,

          absolute_historical_block_cutoff).'
        format: int64
        type: string
      max_relative_historical_blocks:
        description: 'max_relative_historical_blocks defines the maximum number of
          historical

          blocks relative to the current block height that must be kept by nodes for

          script queries. For example, if this value is 1000 and the current height

          is 5000, nodes must be able to query blocks back to height 4000.'
        format: int64
        type: string
    type: object
  dysonprotocol.script.v1.QueryDecodeBytesResponse:
    description: QueryDecodeBytesResponse is the Query/DecodeBytes response type.
    properties:
      json:
        description: json is the decoded json string.
        type: string
    type: object
  dysonprotocol.script.v1.QueryEncodeJsonResponse:
    description: QueryEncodeJsonResponse is the Query/EncodeJson response type.
    properties:
      bytes:
        description: bytes is the encoded bytes.
        format: byte
        type: string
    type: object
  dysonprotocol.script.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          absolute_historical_block_cutoff:
            description: 'absolute_historical_block_cutoff defines the lowest absolute
              block height

              that nodes are required to have when max_relative_historical_blocks
              is

              enforced. This parameter is used when params are updated so that if

              MaxRelativeHistoricalBlocks is increased, nodes are not suddenly required

              to retroactively have historical blocks that predate this cutoff. When

              MaxRelativeHistoricalBlocks validation occurs, the oldest required block

              height will be max(current_height - max_relative_historical_blocks,

              absolute_historical_block_cutoff).'
            format: int64
            type: string
          max_relative_historical_blocks:
            description: 'max_relative_historical_blocks defines the maximum number
              of historical

              blocks relative to the current block height that must be kept by nodes
              for

              script queries. For example, if this value is 1000 and the current height

              is 5000, nodes must be able to query blocks back to height 4000.'
            format: int64
            type: string
        type: object
    type: object
  dysonprotocol.script.v1.QueryScriptInfoResponse:
    description: QueryScriptInfoResponse is the Query/ScriptInfo response type.
    properties:
      script:
        description: info is the ScriptInfo of the script.
        properties:
          address:
            type: string
          code:
            type: string
          version:
            format: uint64
            type: string
        type: object
    type: object
  dysonprotocol.script.v1.QueryVerifyTxResponse:
    title: 'QueryVerifyTxResponse will be empty response on success, error will be
      raised

      on failure'
    type: object
  dysonprotocol.script.v1.QueryWebRequest:
    description: QueryWebRequest is the Query/Web request type.
    properties:
      address_or_name:
        description: address is the account address of the script.
        type: string
      httprequest:
        description: httprequest is the http request.
        type: string
    type: object
  dysonprotocol.script.v1.QueryWebResponse:
    description: QueryWebResponse is the Query/Web response type.
    properties:
      httpresponse:
        description: httpresponse is the http response.
        type: string
    type: object
  dysonprotocol.script.v1.Script:
    properties:
      address:
        type: string
      code:
        type: string
      version:
        format: uint64
        type: string
    type: object
  dysonprotocol.storage.v1.MsgStorageDelete:
    description: MsgStorageDelete is the message for deleting storage entries.
    properties:
      indexes:
        items:
          type: string
        title: List of indexes to delete
        type: array
      owner:
        description: The owner of the storage entries to delete.
        type: string
    type: object
  dysonprotocol.storage.v1.MsgStorageDeleteResponse:
    description: MsgStorageDeleteResponse is the response for deleting storage entries.
    properties:
      deleted_indexes:
        items:
          type: string
        title: List of indexes that were successfully deleted
        type: array
    type: object
  dysonprotocol.storage.v1.MsgStorageSet:
    description: MsgStorageSet is the message for setting a storage entry.
    properties:
      data:
        description: The data to set for the storage entry.
        type: string
      index:
        description: The index of the storage entry to set.
        type: string
      owner:
        description: The owner of the storage entry to set.
        type: string
    type: object
  dysonprotocol.storage.v1.MsgStorageSetResponse:
    description: MsgStorageSetResponse is the response for setting a storage entry.
    type: object
  dysonprotocol.storage.v1.QueryStorageGetResponse:
    properties:
      entry:
        properties:
          data:
            description: data is the stored string value associated with the index.
            type: string
          hash:
            description: hash is SHA-256 hex of data field.
            type: string
          index:
            description: 'index is the key/index for the storage entry (within the
              owner''s

              namespace).'
            type: string
          owner:
            description: owner is the account address that owns this storage entry.
            type: string
          updated_height:
            description: updated_height is block height of last modification.
            format: uint64
            type: string
          updated_timestamp:
            description: 'updated_timestamp is the block time in UTC (RFC3339 e.g.

              "2025-06-11T15:23:00Z") when entry was modified.'
            type: string
        type: object
    type: object
  dysonprotocol.storage.v1.QueryStorageListResponse:
    properties:
      entries:
        items:
          properties:
            data:
              description: data is the stored string value associated with the index.
              type: string
            hash:
              description: hash is SHA-256 hex of data field.
              type: string
            index:
              description: 'index is the key/index for the storage entry (within the
                owner''s

                namespace).'
              type: string
            owner:
              description: owner is the account address that owns this storage entry.
              type: string
            updated_height:
              description: updated_height is block height of last modification.
              format: uint64
              type: string
            updated_timestamp:
              description: 'updated_timestamp is the block time in UTC (RFC3339 e.g.

                "2025-06-11T15:23:00Z") when entry was modified.'
              type: string
          type: object
        type: array
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  dysonprotocol.storage.v1.Storage:
    properties:
      data:
        description: data is the stored string value associated with the index.
        type: string
      hash:
        description: hash is SHA-256 hex of data field.
        type: string
      index:
        description: 'index is the key/index for the storage entry (within the owner''s

          namespace).'
        type: string
      owner:
        description: owner is the account address that owns this storage entry.
        type: string
      updated_height:
        description: updated_height is block height of last modification.
        format: uint64
        type: string
      updated_timestamp:
        description: 'updated_timestamp is the block time in UTC (RFC3339 e.g.

          "2025-06-11T15:23:00Z") when entry was modified.'
        type: string
    type: object
  google.protobuf.Any:
    properties:
      type_url:
        type: string
      value:
        description: Must be a valid serialized protocol buffer of the above specified
          type.
        format: byte
        type: string
    type: object
  grpc.gateway.runtime.Error:
    properties:
      code:
        format: int32
        type: integer
      details:
        items:
          properties:
            type_url:
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        type: array
      error:
        type: string
      message:
        type: string
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount:
    properties:
      connection_id:
        type: string
      ordering:
        default: ORDER_NONE_UNSPECIFIED
        description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
          \ - ORDER_UNORDERED: packets can be delivered in any order, which may differ\
          \ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are\
          \ delivered exactly in the order which they were sent"
        enum:
        - ORDER_NONE_UNSPECIFIED
        - ORDER_UNORDERED
        - ORDER_ORDERED
        title: Order defines if a channel is ORDERED or UNORDERED
        type: string
      owner:
        type: string
      version:
        type: string
    title: MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse:
    properties:
      channel_id:
        type: string
      port_id:
        type: string
    title: 'MsgRegisterInterchainAccountResponse defines the response for

      Msg/RegisterAccount'
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgSendTx:
    properties:
      connection_id:
        type: string
      owner:
        type: string
      packet_data:
        description: 'InterchainAccountPacketData is comprised of a raw transaction,
          type of

          transaction and optional memo field.'
        properties:
          data:
            format: byte
            type: string
          memo:
            type: string
          type:
            default: TYPE_UNSPECIFIED
            description: "- TYPE_UNSPECIFIED: Default zero value enumeration\n - TYPE_EXECUTE_TX:\
              \ Execute a transaction on an interchain accounts host chain"
            enum:
            - TYPE_UNSPECIFIED
            - TYPE_EXECUTE_TX
            title: 'Type defines a classification of message issued from a controller
              chain to

              its associated interchain accounts host'
            type: string
        type: object
      relative_timeout:
        description: 'Relative timeout timestamp provided will be added to the current
          block time

          during transaction execution. The timeout timestamp must be non-zero.'
        format: uint64
        type: string
    title: MsgSendTx defines the payload for Msg/SendTx
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse:
    properties:
      sequence:
        format: uint64
        type: string
    title: MsgSendTxResponse defines the response for MsgSendTx
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams:
    properties:
      params:
        description: 'params defines the 27-interchain-accounts/controller parameters
          to update.


          NOTE: All parameters must be supplied.'
        properties:
          controller_enabled:
            description: controller_enabled enables or disables the controller submodule.
            type: boolean
        type: object
      signer:
        title: signer address
        type: string
    title: MsgUpdateParams defines the payload for Msg/UpdateParams
    type: object
  ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse:
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
    type: object
  ibc.applications.interchain_accounts.controller.v1.Params:
    description: 'Params defines the set of on-chain interchain accounts parameters.

      The following parameters may be used to disable the controller submodule.'
    properties:
      controller_enabled:
        description: controller_enabled enables or disables the controller submodule.
        type: boolean
    type: object
  ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
    description: 'QueryInterchainAccountResponse the response type for the

      Query/InterchainAccount RPC method.'
    properties:
      address:
        type: string
    type: object
  ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          controller_enabled:
            description: controller_enabled enables or disables the controller submodule.
            type: boolean
        type: object
    type: object
  ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe:
    properties:
      requests:
        description: requests defines the module safe queries to execute.
        items:
          description: 'QueryRequest defines the parameters for a particular query
            request

            by an interchain account.'
          properties:
            data:
              format: byte
              title: 'data defines the payload of the query request as defined by
                ADR-021.

                https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
              type: string
            path:
              title: 'path defines the path of the query request as defined by ADR-021.

                https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
              type: string
          type: object
        type: array
      signer:
        title: signer address
        type: string
    title: MsgModuleQuerySafe defines the payload for Msg/ModuleQuerySafe
    type: object
  ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafeResponse:
    properties:
      height:
        format: uint64
        title: height at which the responses were queried
        type: string
      responses:
        items:
          format: byte
          type: string
        title: protobuf encoded responses for each query
        type: array
    title: MsgModuleQuerySafeResponse defines the response for Msg/ModuleQuerySafe
    type: object
  ibc.applications.interchain_accounts.host.v1.MsgUpdateParams:
    properties:
      params:
        description: 'params defines the 27-interchain-accounts/host parameters to
          update.


          NOTE: All parameters must be supplied.'
        properties:
          allow_messages:
            description: 'allow_messages defines a list of sdk message typeURLs allowed
              to be

              executed on a host chain.'
            items:
              type: string
            type: array
          host_enabled:
            description: host_enabled enables or disables the host submodule.
            type: boolean
        type: object
      signer:
        title: signer address
        type: string
    title: MsgUpdateParams defines the payload for Msg/UpdateParams
    type: object
  ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse:
    title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
    type: object
  ibc.applications.interchain_accounts.host.v1.Params:
    description: 'Params defines the set of on-chain interchain accounts parameters.

      The following parameters may be used to disable the host submodule.'
    properties:
      allow_messages:
        description: 'allow_messages defines a list of sdk message typeURLs allowed
          to be

          executed on a host chain.'
        items:
          type: string
        type: array
      host_enabled:
        description: host_enabled enables or disables the host submodule.
        type: boolean
    type: object
  ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          allow_messages:
            description: 'allow_messages defines a list of sdk message typeURLs allowed
              to be

              executed on a host chain.'
            items:
              type: string
            type: array
          host_enabled:
            description: host_enabled enables or disables the host submodule.
            type: boolean
        type: object
    type: object
  ibc.applications.interchain_accounts.host.v1.QueryRequest:
    description: 'QueryRequest defines the parameters for a particular query request

      by an interchain account.'
    properties:
      data:
        format: byte
        title: 'data defines the payload of the query request as defined by ADR-021.

          https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
        type: string
      path:
        title: 'path defines the path of the query request as defined by ADR-021.

          https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
        type: string
    type: object
  ibc.applications.interchain_accounts.v1.InterchainAccountPacketData:
    description: 'InterchainAccountPacketData is comprised of a raw transaction, type
      of

      transaction and optional memo field.'
    properties:
      data:
        format: byte
        type: string
      memo:
        type: string
      type:
        default: TYPE_UNSPECIFIED
        description: "- TYPE_UNSPECIFIED: Default zero value enumeration\n - TYPE_EXECUTE_TX:\
          \ Execute a transaction on an interchain accounts host chain"
        enum:
        - TYPE_UNSPECIFIED
        - TYPE_EXECUTE_TX
        title: 'Type defines a classification of message issued from a controller
          chain to

          its associated interchain accounts host'
        type: string
    type: object
  ibc.applications.interchain_accounts.v1.Type:
    default: TYPE_UNSPECIFIED
    description: "- TYPE_UNSPECIFIED: Default zero value enumeration\n - TYPE_EXECUTE_TX:\
      \ Execute a transaction on an interchain accounts host chain"
    enum:
    - TYPE_UNSPECIFIED
    - TYPE_EXECUTE_TX
    title: 'Type defines a classification of message issued from a controller chain
      to

      its associated interchain accounts host'
    type: string
  ibc.applications.transfer.v1.Denom:
    description: 'Denom holds the base denom of a Token and a trace of the chains
      it was sent

      through.'
    properties:
      base:
        title: the base token denomination
        type: string
      trace:
        items:
          properties:
            channel_id:
              type: string
            port_id:
              type: string
          title: Hop defines a port ID, channel ID pair specifying a unique "hop"
            in a trace
          type: object
        title: the trace of the token
        type: array
    type: object
  ibc.applications.transfer.v1.Hop:
    properties:
      channel_id:
        type: string
      port_id:
        type: string
    title: Hop defines a port ID, channel ID pair specifying a unique "hop" in a trace
    type: object
  ibc.applications.transfer.v1.MsgTransfer:
    properties:
      encoding:
        title: optional encoding
        type: string
      memo:
        title: optional memo
        type: string
      receiver:
        title: the recipient address on the destination chain
        type: string
      sender:
        title: the sender address
        type: string
      source_channel:
        title: the channel by which the packet will be sent
        type: string
      source_port:
        title: the port on which the packet will be sent
        type: string
      timeout_height:
        description: 'Timeout height relative to the current block height.

          If you are sending with IBC v1 protocol, either timeout_height or

          timeout_timestamp must be set. If you are sending with IBC v2 protocol,

          timeout_timestamp must be set, and timeout_height must be omitted.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      timeout_timestamp:
        description: 'Timeout timestamp in absolute nanoseconds since unix epoch.

          If you are sending with IBC v1 protocol, either timeout_height or

          timeout_timestamp must be set. If you are sending with IBC v2 protocol,

          timeout_timestamp must be set.'
        format: uint64
        type: string
      token:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        title: token to be transferred
        type: object
    title: 'MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between

      ICS20 enabled chains. See ICS Spec here:

      https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures'
    type: object
  ibc.applications.transfer.v1.MsgTransferResponse:
    description: MsgTransferResponse defines the Msg/Transfer response type.
    properties:
      sequence:
        format: uint64
        title: sequence number of the transfer packet sent
        type: string
    type: object
  ibc.applications.transfer.v1.MsgUpdateParams:
    description: MsgUpdateParams is the Msg/UpdateParams request type.
    properties:
      params:
        description: 'params defines the transfer parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          receive_enabled:
            description: 'receive_enabled enables or disables all cross-chain token
              transfers to this

              chain.'
            type: boolean
          send_enabled:
            description: 'send_enabled enables or disables all cross-chain token transfers
              from this

              chain.'
            type: boolean
        type: object
      signer:
        title: signer address
        type: string
    type: object
  ibc.applications.transfer.v1.MsgUpdateParamsResponse:
    description: 'MsgUpdateParamsResponse defines the response structure for executing
      a

      MsgUpdateParams message.'
    type: object
  ibc.applications.transfer.v1.Params:
    description: 'Params defines the set of IBC transfer parameters.

      NOTE: To prevent a single token from being transferred, set the

      TransfersEnabled parameter to true and then set the bank module''s SendEnabled

      parameter for the denomination to false.'
    properties:
      receive_enabled:
        description: 'receive_enabled enables or disables all cross-chain token transfers
          to this

          chain.'
        type: boolean
      send_enabled:
        description: 'send_enabled enables or disables all cross-chain token transfers
          from this

          chain.'
        type: boolean
    type: object
  ibc.applications.transfer.v1.QueryDenomHashResponse:
    description: 'QueryDenomHashResponse is the response type for the Query/DenomHash
      RPC

      method.'
    properties:
      hash:
        description: hash (in hex format) of the denomination trace information.
        type: string
    type: object
  ibc.applications.transfer.v1.QueryDenomResponse:
    description: 'QueryDenomResponse is the response type for the Query/Denom RPC

      method.'
    properties:
      denom:
        description: 'Denom holds the base denom of a Token and a trace of the chains
          it was sent

          through.'
        properties:
          base:
            title: the base token denomination
            type: string
          trace:
            items:
              properties:
                channel_id:
                  type: string
                port_id:
                  type: string
              title: Hop defines a port ID, channel ID pair specifying a unique "hop"
                in a trace
              type: object
            title: the trace of the token
            type: array
        type: object
    type: object
  ibc.applications.transfer.v1.QueryDenomsResponse:
    description: 'QueryDenomsResponse is the response type for the Query/Denoms RPC

      method.'
    properties:
      denoms:
        description: denoms returns all denominations.
        items:
          description: 'Denom holds the base denom of a Token and a trace of the chains
            it was sent

            through.'
          properties:
            base:
              title: the base token denomination
              type: string
            trace:
              items:
                properties:
                  channel_id:
                    type: string
                  port_id:
                    type: string
                title: Hop defines a port ID, channel ID pair specifying a unique
                  "hop" in a trace
                type: object
              title: the trace of the token
              type: array
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  ibc.applications.transfer.v1.QueryEscrowAddressResponse:
    description: 'QueryEscrowAddressResponse is the response type of the EscrowAddress
      RPC

      method.'
    properties:
      escrow_address:
        title: the escrow account address
        type: string
    type: object
  ibc.applications.transfer.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          receive_enabled:
            description: 'receive_enabled enables or disables all cross-chain token
              transfers to this

              chain.'
            type: boolean
          send_enabled:
            description: 'send_enabled enables or disables all cross-chain token transfers
              from this

              chain.'
            type: boolean
        type: object
    type: object
  ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
    description: 'QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom

      RPC method.'
    properties:
      amount:
        description: 'Coin defines a token with a denomination and an amount.


          NOTE: The amount field is an Int which implements the custom method

          signatures required by gogoproto.'
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  ibc.core.channel.v1.Channel:
    description: 'Channel defines pipeline for exactly-once packet delivery between
      specific

      modules on separate blockchains, which has at least one end capable of

      sending packets and one end capable of receiving packets.'
    properties:
      connection_hops:
        items:
          type: string
        title: 'list of connection identifiers, in order, along which packets sent
          on

          this channel will travel'
        type: array
      counterparty:
        properties:
          channel_id:
            title: channel end on the counterparty chain
            type: string
          port_id:
            description: port on the counterparty chain which owns the other end of
              the channel.
            type: string
        title: counterparty channel end
        type: object
      ordering:
        default: ORDER_NONE_UNSPECIFIED
        description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
          \ - ORDER_UNORDERED: packets can be delivered in any order, which may differ\
          \ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are\
          \ delivered exactly in the order which they were sent"
        enum:
        - ORDER_NONE_UNSPECIFIED
        - ORDER_UNORDERED
        - ORDER_ORDERED
        title: whether the channel is ordered or unordered
        type: string
      state:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: "State defines if a channel is in one of the following states:\n\
          CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
          \ Default State\n - STATE_INIT: A channel has just started the opening handshake.\n\
          \ - STATE_TRYOPEN: A channel has acknowledged the handshake step on the\
          \ counterparty chain.\n - STATE_OPEN: A channel has completed the handshake.\
          \ Open channels are\nready to send and receive packets.\n - STATE_CLOSED:\
          \ A channel has been closed and can no longer be used to send or receive\n\
          packets."
        enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        - STATE_CLOSED
        title: current state of the channel end
        type: string
      version:
        title: opaque channel version, which is agreed upon during the handshake
        type: string
    type: object
  ibc.core.channel.v1.Counterparty:
    properties:
      channel_id:
        title: channel end on the counterparty chain
        type: string
      port_id:
        description: port on the counterparty chain which owns the other end of the
          channel.
        type: string
    title: Counterparty defines a channel end counterparty
    type: object
  ibc.core.channel.v1.IdentifiedChannel:
    description: 'IdentifiedChannel defines a channel with additional port and channel

      identifier fields.'
    properties:
      channel_id:
        title: channel identifier
        type: string
      connection_hops:
        items:
          type: string
        title: 'list of connection identifiers, in order, along which packets sent
          on

          this channel will travel'
        type: array
      counterparty:
        properties:
          channel_id:
            title: channel end on the counterparty chain
            type: string
          port_id:
            description: port on the counterparty chain which owns the other end of
              the channel.
            type: string
        title: counterparty channel end
        type: object
      ordering:
        default: ORDER_NONE_UNSPECIFIED
        description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
          \ - ORDER_UNORDERED: packets can be delivered in any order, which may differ\
          \ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are\
          \ delivered exactly in the order which they were sent"
        enum:
        - ORDER_NONE_UNSPECIFIED
        - ORDER_UNORDERED
        - ORDER_ORDERED
        title: whether the channel is ordered or unordered
        type: string
      port_id:
        title: port identifier
        type: string
      state:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: "State defines if a channel is in one of the following states:\n\
          CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
          \ Default State\n - STATE_INIT: A channel has just started the opening handshake.\n\
          \ - STATE_TRYOPEN: A channel has acknowledged the handshake step on the\
          \ counterparty chain.\n - STATE_OPEN: A channel has completed the handshake.\
          \ Open channels are\nready to send and receive packets.\n - STATE_CLOSED:\
          \ A channel has been closed and can no longer be used to send or receive\n\
          packets."
        enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        - STATE_CLOSED
        title: current state of the channel end
        type: string
      version:
        title: opaque channel version, which is agreed upon during the handshake
        type: string
    type: object
  ibc.core.channel.v1.MsgAcknowledgement:
    properties:
      acknowledgement:
        format: byte
        type: string
      packet:
        properties:
          data:
            format: byte
            title: actual opaque bytes transferred directly to the application module
            type: string
          destination_channel:
            description: identifies the channel end on the receiving chain.
            type: string
          destination_port:
            description: identifies the port on the receiving chain.
            type: string
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_channel:
            description: identifies the channel end on the sending chain.
            type: string
          source_port:
            description: identifies the port on the sending chain.
            type: string
          timeout_height:
            description: 'Normally the RevisionHeight is incremented at each height
              while keeping

              RevisionNumber the same. However some consensus algorithms may choose
              to

              reset the height in certain conditions e.g. hard forks, state-machine

              breaking changes In these cases, the RevisionNumber is incremented so
              that

              height continues to be monitonically increasing even as the RevisionHeight

              gets reset


              Please note that json tags for generated Go code are overridden to explicitly

              exclude the omitempty jsontag. This enforces the Go json marshaller
              to always

              emit zero values for both revision_number and revision_height.'
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: block height after which the packet times out
            type: object
          timeout_timestamp:
            format: uint64
            title: block timestamp (in nanoseconds) after which the packet times out
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_acked:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    title: MsgAcknowledgement receives incoming IBC acknowledgement
    type: object
  ibc.core.channel.v1.MsgAcknowledgementResponse:
    description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response
      type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelCloseConfirm:
    description: 'MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain
      B

      to acknowledge the change of channel state to CLOSED on Chain A.'
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_init:
        format: byte
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelCloseConfirmResponse:
    description: 'MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm
      response

      type.'
    type: object
  ibc.core.channel.v1.MsgChannelCloseInit:
    description: 'MsgChannelCloseInit defines a msg sent by a Relayer to Chain A

      to close a channel with Chain B.'
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelCloseInitResponse:
    description: MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response
      type.
    type: object
  ibc.core.channel.v1.MsgChannelOpenAck:
    description: 'MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to
      acknowledge

      the change of channel state to TRYOPEN on Chain B.'
    properties:
      channel_id:
        type: string
      counterparty_channel_id:
        type: string
      counterparty_version:
        type: string
      port_id:
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_try:
        format: byte
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelOpenAckResponse:
    description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response
      type.
    type: object
  ibc.core.channel.v1.MsgChannelOpenConfirm:
    description: 'MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B
      to

      acknowledge the change of channel state to OPEN on Chain A.'
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      proof_ack:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelOpenConfirmResponse:
    description: 'MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm
      response

      type.'
    type: object
  ibc.core.channel.v1.MsgChannelOpenInit:
    description: 'MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake.
      It

      is called by a relayer on Chain A.'
    properties:
      channel:
        description: 'Channel defines pipeline for exactly-once packet delivery between
          specific

          modules on separate blockchains, which has at least one end capable of

          sending packets and one end capable of receiving packets.'
        properties:
          connection_hops:
            items:
              type: string
            title: 'list of connection identifiers, in order, along which packets
              sent on

              this channel will travel'
            type: array
          counterparty:
            properties:
              channel_id:
                title: channel end on the counterparty chain
                type: string
              port_id:
                description: port on the counterparty chain which owns the other end
                  of the channel.
                type: string
            title: counterparty channel end
            type: object
          ordering:
            default: ORDER_NONE_UNSPECIFIED
            description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
              \ - ORDER_UNORDERED: packets can be delivered in any order, which may\
              \ differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
              \ packets are delivered exactly in the order which they were sent"
            enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
            title: whether the channel is ordered or unordered
            type: string
          state:
            default: STATE_UNINITIALIZED_UNSPECIFIED
            description: "State defines if a channel is in one of the following states:\n\
              CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
              \ Default State\n - STATE_INIT: A channel has just started the opening\
              \ handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake\
              \ step on the counterparty chain.\n - STATE_OPEN: A channel has completed\
              \ the handshake. Open channels are\nready to send and receive packets.\n\
              \ - STATE_CLOSED: A channel has been closed and can no longer be used\
              \ to send or receive\npackets."
            enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            title: current state of the channel end
            type: string
          version:
            title: opaque channel version, which is agreed upon during the handshake
            type: string
        type: object
      port_id:
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelOpenInitResponse:
    description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response
      type.
    properties:
      channel_id:
        type: string
      version:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelOpenTry:
    description: 'MsgChannelOpenInit defines a msg sent by a Relayer to try to open
      a channel

      on Chain B. The version field within the Channel field has been deprecated.

      Its value will be ignored by core IBC.'
    properties:
      channel:
        description: 'Channel defines pipeline for exactly-once packet delivery between
          specific

          modules on separate blockchains, which has at least one end capable of

          sending packets and one end capable of receiving packets.'
        properties:
          connection_hops:
            items:
              type: string
            title: 'list of connection identifiers, in order, along which packets
              sent on

              this channel will travel'
            type: array
          counterparty:
            properties:
              channel_id:
                title: channel end on the counterparty chain
                type: string
              port_id:
                description: port on the counterparty chain which owns the other end
                  of the channel.
                type: string
            title: counterparty channel end
            type: object
          ordering:
            default: ORDER_NONE_UNSPECIFIED
            description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
              \ - ORDER_UNORDERED: packets can be delivered in any order, which may\
              \ differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
              \ packets are delivered exactly in the order which they were sent"
            enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
            title: whether the channel is ordered or unordered
            type: string
          state:
            default: STATE_UNINITIALIZED_UNSPECIFIED
            description: "State defines if a channel is in one of the following states:\n\
              CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
              \ Default State\n - STATE_INIT: A channel has just started the opening\
              \ handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake\
              \ step on the counterparty chain.\n - STATE_OPEN: A channel has completed\
              \ the handshake. Open channels are\nready to send and receive packets.\n\
              \ - STATE_CLOSED: A channel has been closed and can no longer be used\
              \ to send or receive\npackets."
            enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            title: current state of the channel end
            type: string
          version:
            title: opaque channel version, which is agreed upon during the handshake
            type: string
        type: object
      counterparty_version:
        type: string
      port_id:
        type: string
      previous_channel_id:
        description: 'Deprecated: this field is unused. Crossing hello''s are no longer
          supported

          in core IBC.'
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_init:
        format: byte
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgChannelOpenTryResponse:
    description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response
      type.
    properties:
      channel_id:
        type: string
      version:
        type: string
    type: object
  ibc.core.channel.v1.MsgRecvPacket:
    properties:
      packet:
        properties:
          data:
            format: byte
            title: actual opaque bytes transferred directly to the application module
            type: string
          destination_channel:
            description: identifies the channel end on the receiving chain.
            type: string
          destination_port:
            description: identifies the port on the receiving chain.
            type: string
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_channel:
            description: identifies the channel end on the sending chain.
            type: string
          source_port:
            description: identifies the port on the sending chain.
            type: string
          timeout_height:
            description: 'Normally the RevisionHeight is incremented at each height
              while keeping

              RevisionNumber the same. However some consensus algorithms may choose
              to

              reset the height in certain conditions e.g. hard forks, state-machine

              breaking changes In these cases, the RevisionNumber is incremented so
              that

              height continues to be monitonically increasing even as the RevisionHeight

              gets reset


              Please note that json tags for generated Go code are overridden to explicitly

              exclude the omitempty jsontag. This enforces the Go json marshaller
              to always

              emit zero values for both revision_number and revision_height.'
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: block height after which the packet times out
            type: object
          timeout_timestamp:
            format: uint64
            title: block timestamp (in nanoseconds) after which the packet times out
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_commitment:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    title: MsgRecvPacket receives incoming IBC packet
    type: object
  ibc.core.channel.v1.MsgRecvPacketResponse:
    description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v1.MsgTimeout:
    properties:
      next_sequence_recv:
        format: uint64
        type: string
      packet:
        properties:
          data:
            format: byte
            title: actual opaque bytes transferred directly to the application module
            type: string
          destination_channel:
            description: identifies the channel end on the receiving chain.
            type: string
          destination_port:
            description: identifies the port on the receiving chain.
            type: string
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_channel:
            description: identifies the channel end on the sending chain.
            type: string
          source_port:
            description: identifies the port on the sending chain.
            type: string
          timeout_height:
            description: 'Normally the RevisionHeight is incremented at each height
              while keeping

              RevisionNumber the same. However some consensus algorithms may choose
              to

              reset the height in certain conditions e.g. hard forks, state-machine

              breaking changes In these cases, the RevisionNumber is incremented so
              that

              height continues to be monitonically increasing even as the RevisionHeight

              gets reset


              Please note that json tags for generated Go code are overridden to explicitly

              exclude the omitempty jsontag. This enforces the Go json marshaller
              to always

              emit zero values for both revision_number and revision_height.'
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: block height after which the packet times out
            type: object
          timeout_timestamp:
            format: uint64
            title: block timestamp (in nanoseconds) after which the packet times out
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_unreceived:
        format: byte
        type: string
      signer:
        type: string
    title: MsgTimeout receives timed-out packet
    type: object
  ibc.core.channel.v1.MsgTimeoutOnClose:
    description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
    properties:
      next_sequence_recv:
        format: uint64
        type: string
      packet:
        properties:
          data:
            format: byte
            title: actual opaque bytes transferred directly to the application module
            type: string
          destination_channel:
            description: identifies the channel end on the receiving chain.
            type: string
          destination_port:
            description: identifies the port on the receiving chain.
            type: string
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_channel:
            description: identifies the channel end on the sending chain.
            type: string
          source_port:
            description: identifies the port on the sending chain.
            type: string
          timeout_height:
            description: 'Normally the RevisionHeight is incremented at each height
              while keeping

              RevisionNumber the same. However some consensus algorithms may choose
              to

              reset the height in certain conditions e.g. hard forks, state-machine

              breaking changes In these cases, the RevisionNumber is incremented so
              that

              height continues to be monitonically increasing even as the RevisionHeight

              gets reset


              Please note that json tags for generated Go code are overridden to explicitly

              exclude the omitempty jsontag. This enforces the Go json marshaller
              to always

              emit zero values for both revision_number and revision_height.'
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: block height after which the packet times out
            type: object
          timeout_timestamp:
            format: uint64
            title: block timestamp (in nanoseconds) after which the packet times out
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_close:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_unreceived:
        format: byte
        type: string
      signer:
        type: string
    type: object
  ibc.core.channel.v1.MsgTimeoutOnCloseResponse:
    description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response
      type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v1.MsgTimeoutResponse:
    description: MsgTimeoutResponse defines the Msg/Timeout response type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v1.Order:
    default: ORDER_NONE_UNSPECIFIED
    description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED:\
      \ packets can be delivered in any order, which may differ from the order in\n\
      which they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the\
      \ order which they were sent"
    enum:
    - ORDER_NONE_UNSPECIFIED
    - ORDER_UNORDERED
    - ORDER_ORDERED
    title: Order defines if a channel is ORDERED or UNORDERED
    type: string
  ibc.core.channel.v1.Packet:
    properties:
      data:
        format: byte
        title: actual opaque bytes transferred directly to the application module
        type: string
      destination_channel:
        description: identifies the channel end on the receiving chain.
        type: string
      destination_port:
        description: identifies the port on the receiving chain.
        type: string
      sequence:
        description: 'number corresponds to the order of sends and receives, where
          a Packet

          with an earlier sequence number must be sent and received before a Packet

          with a later sequence number.'
        format: uint64
        type: string
      source_channel:
        description: identifies the channel end on the sending chain.
        type: string
      source_port:
        description: identifies the port on the sending chain.
        type: string
      timeout_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: block height after which the packet times out
        type: object
      timeout_timestamp:
        format: uint64
        title: block timestamp (in nanoseconds) after which the packet times out
        type: string
    title: Packet defines a type that carries data across different chains through
      IBC
    type: object
  ibc.core.channel.v1.PacketState:
    description: 'PacketState defines the generic type necessary to retrieve and store

      packet commitments, acknowledgements, and receipts.

      Caller is responsible for knowing the context necessary to interpret this

      state as a commitment, acknowledgement, or a receipt.'
    properties:
      channel_id:
        description: channel unique identifier.
        type: string
      data:
        description: embedded data that represents packet state.
        format: byte
        type: string
      port_id:
        description: channel port identifier.
        type: string
      sequence:
        description: packet sequence.
        format: uint64
        type: string
    type: object
  ibc.core.channel.v1.QueryChannelClientStateResponse:
    properties:
      identified_client_state:
        description: 'IdentifiedClientState defines a client state with an additional
          client

          identifier field.'
        properties:
          client_id:
            title: client identifier
            type: string
          client_state:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            title: client state
            type: object
        title: client state associated with the channel
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryChannelClientStateResponse is the Response type for the

      Query/QueryChannelClientState RPC method'
    type: object
  ibc.core.channel.v1.QueryChannelConsensusStateResponse:
    properties:
      client_id:
        title: client ID associated with the consensus state
        type: string
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: consensus state associated with the channel
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryChannelClientStateResponse is the Response type for the

      Query/QueryChannelClientState RPC method'
    type: object
  ibc.core.channel.v1.QueryChannelResponse:
    description: 'QueryChannelResponse is the response type for the Query/Channel
      RPC method.

      Besides the Channel end, it includes a proof and the height from which the

      proof was retrieved.'
    properties:
      channel:
        description: 'Channel defines pipeline for exactly-once packet delivery between
          specific

          modules on separate blockchains, which has at least one end capable of

          sending packets and one end capable of receiving packets.'
        properties:
          connection_hops:
            items:
              type: string
            title: 'list of connection identifiers, in order, along which packets
              sent on

              this channel will travel'
            type: array
          counterparty:
            properties:
              channel_id:
                title: channel end on the counterparty chain
                type: string
              port_id:
                description: port on the counterparty chain which owns the other end
                  of the channel.
                type: string
            title: counterparty channel end
            type: object
          ordering:
            default: ORDER_NONE_UNSPECIFIED
            description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
              \ - ORDER_UNORDERED: packets can be delivered in any order, which may\
              \ differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
              \ packets are delivered exactly in the order which they were sent"
            enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
            title: whether the channel is ordered or unordered
            type: string
          state:
            default: STATE_UNINITIALIZED_UNSPECIFIED
            description: "State defines if a channel is in one of the following states:\n\
              CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
              \ Default State\n - STATE_INIT: A channel has just started the opening\
              \ handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake\
              \ step on the counterparty chain.\n - STATE_OPEN: A channel has completed\
              \ the handshake. Open channels are\nready to send and receive packets.\n\
              \ - STATE_CLOSED: A channel has been closed and can no longer be used\
              \ to send or receive\npackets."
            enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
            title: current state of the channel end
            type: string
          version:
            title: opaque channel version, which is agreed upon during the handshake
            type: string
        title: channel associated with the request identifiers
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    type: object
  ibc.core.channel.v1.QueryChannelsResponse:
    description: QueryChannelsResponse is the response type for the Query/Channels
      RPC method.
    properties:
      channels:
        description: list of stored channels of the chain.
        items:
          description: 'IdentifiedChannel defines a channel with additional port and
            channel

            identifier fields.'
          properties:
            channel_id:
              title: channel identifier
              type: string
            connection_hops:
              items:
                type: string
              title: 'list of connection identifiers, in order, along which packets
                sent on

                this channel will travel'
              type: array
            counterparty:
              properties:
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
                port_id:
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                  type: string
              title: counterparty channel end
              type: object
            ordering:
              default: ORDER_NONE_UNSPECIFIED
              description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
                \ - ORDER_UNORDERED: packets can be delivered in any order, which\
                \ may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
                \ packets are delivered exactly in the order which they were sent"
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
              title: whether the channel is ordered or unordered
              type: string
            port_id:
              title: port identifier
              type: string
            state:
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: "State defines if a channel is in one of the following\
                \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
                \ Default State\n - STATE_INIT: A channel has just started the opening\
                \ handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake\
                \ step on the counterparty chain.\n - STATE_OPEN: A channel has completed\
                \ the handshake. Open channels are\nready to send and receive packets.\n\
                \ - STATE_CLOSED: A channel has been closed and can no longer be used\
                \ to send or receive\npackets."
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
              title: current state of the channel end
              type: string
            version:
              title: opaque channel version, which is agreed upon during the handshake
              type: string
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    type: object
  ibc.core.channel.v1.QueryConnectionChannelsResponse:
    properties:
      channels:
        description: list of channels associated with a connection.
        items:
          description: 'IdentifiedChannel defines a channel with additional port and
            channel

            identifier fields.'
          properties:
            channel_id:
              title: channel identifier
              type: string
            connection_hops:
              items:
                type: string
              title: 'list of connection identifiers, in order, along which packets
                sent on

                this channel will travel'
              type: array
            counterparty:
              properties:
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
                port_id:
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                  type: string
              title: counterparty channel end
              type: object
            ordering:
              default: ORDER_NONE_UNSPECIFIED
              description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
                \ - ORDER_UNORDERED: packets can be delivered in any order, which\
                \ may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
                \ packets are delivered exactly in the order which they were sent"
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
              title: whether the channel is ordered or unordered
              type: string
            port_id:
              title: port identifier
              type: string
            state:
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: "State defines if a channel is in one of the following\
                \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
                \ Default State\n - STATE_INIT: A channel has just started the opening\
                \ handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake\
                \ step on the counterparty chain.\n - STATE_OPEN: A channel has completed\
                \ the handshake. Open channels are\nready to send and receive packets.\n\
                \ - STATE_CLOSED: A channel has been closed and can no longer be used\
                \ to send or receive\npackets."
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
              title: current state of the channel end
              type: string
            version:
              title: opaque channel version, which is agreed upon during the handshake
              type: string
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryConnectionChannelsResponse is the Response type for the

      Query/QueryConnectionChannels RPC method'
    type: object
  ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
    properties:
      next_sequence_receive:
        format: uint64
        title: next sequence receive number
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QuerySequenceResponse is the response type for the

      Query/QueryNextSequenceReceiveResponse RPC method'
    type: object
  ibc.core.channel.v1.QueryNextSequenceSendResponse:
    properties:
      next_sequence_send:
        format: uint64
        title: next sequence send number
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryNextSequenceSendResponse is the request type for the

      Query/QueryNextSequenceSend RPC method'
    type: object
  ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
    properties:
      acknowledgement:
        format: byte
        title: packet associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryPacketAcknowledgementResponse defines the client query response for
      a

      packet which also includes a proof and the height from which the

      proof was retrieved'
    type: object
  ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
    properties:
      acknowledgements:
        items:
          description: 'PacketState defines the generic type necessary to retrieve
            and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret this

            state as a commitment, acknowledgement, or a receipt.'
          properties:
            channel_id:
              description: channel unique identifier.
              type: string
            data:
              description: embedded data that represents packet state.
              format: byte
              type: string
            port_id:
              description: channel port identifier.
              type: string
            sequence:
              description: packet sequence.
              format: uint64
              type: string
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryPacketAcknowledgemetsResponse is the request type for the

      Query/QueryPacketAcknowledgements RPC method'
    type: object
  ibc.core.channel.v1.QueryPacketCommitmentResponse:
    properties:
      commitment:
        format: byte
        title: packet associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryPacketCommitmentResponse defines the client query response for a
      packet

      which also includes a proof and the height from which the proof was

      retrieved'
    type: object
  ibc.core.channel.v1.QueryPacketCommitmentsResponse:
    properties:
      commitments:
        items:
          description: 'PacketState defines the generic type necessary to retrieve
            and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret this

            state as a commitment, acknowledgement, or a receipt.'
          properties:
            channel_id:
              description: channel unique identifier.
              type: string
            data:
              description: embedded data that represents packet state.
              format: byte
              type: string
            port_id:
              description: channel port identifier.
              type: string
            sequence:
              description: packet sequence.
              format: uint64
              type: string
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryPacketCommitmentsResponse is the request type for the

      Query/QueryPacketCommitments RPC method'
    type: object
  ibc.core.channel.v1.QueryPacketReceiptResponse:
    properties:
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
      received:
        title: success flag for if receipt exists
        type: boolean
    title: 'QueryPacketReceiptResponse defines the client query response for a packet

      receipt which also includes a proof, and the height from which the proof was

      retrieved'
    type: object
  ibc.core.channel.v1.QueryUnreceivedAcksResponse:
    properties:
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived acknowledgement sequences
        type: array
    title: 'QueryUnreceivedAcksResponse is the response type for the

      Query/UnreceivedAcks RPC method'
    type: object
  ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
    properties:
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived packet sequences
        type: array
    title: 'QueryUnreceivedPacketsResponse is the response type for the

      Query/UnreceivedPacketCommitments RPC method'
    type: object
  ibc.core.channel.v1.ResponseResultType:
    default: RESPONSE_RESULT_TYPE_UNSPECIFIED
    description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
      \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
      \ callbacks (because, for\nexample, the packet had already been relayed)\n -\
      \ RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
      \ The message was executed unsuccessfully"
    enum:
    - RESPONSE_RESULT_TYPE_UNSPECIFIED
    - RESPONSE_RESULT_TYPE_NOOP
    - RESPONSE_RESULT_TYPE_SUCCESS
    - RESPONSE_RESULT_TYPE_FAILURE
    title: 'ResponseResultType defines the possible outcomes of the execution of a

      message'
    type: string
  ibc.core.channel.v1.State:
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: "State defines if a channel is in one of the following states:\n\
      CLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
      \ Default State\n - STATE_INIT: A channel has just started the opening handshake.\n\
      \ - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty\
      \ chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels\
      \ are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been\
      \ closed and can no longer be used to send or receive\npackets."
    enum:
    - STATE_UNINITIALIZED_UNSPECIFIED
    - STATE_INIT
    - STATE_TRYOPEN
    - STATE_OPEN
    - STATE_CLOSED
    type: string
  ibc.core.channel.v2.Acknowledgement:
    description: 'Acknowledgement contains a list of all ack results associated with
      a single

      packet. In the case of a successful receive, the acknowledgement will contain

      an app acknowledgement for each application that received a payload in the

      same order that the payloads were sent in the packet. If the receive is not

      successful, the acknowledgement will contain a single app acknowledgment

      which will be a constant error acknowledgment as defined by the IBC v2

      protocol.'
    properties:
      app_acknowledgements:
        items:
          format: byte
          type: string
        type: array
    type: object
  ibc.core.channel.v2.MsgAcknowledgement:
    description: MsgAcknowledgement receives incoming IBC acknowledgement.
    properties:
      acknowledgement:
        description: 'Acknowledgement contains a list of all ack results associated
          with a single

          packet. In the case of a successful receive, the acknowledgement will contain

          an app acknowledgement for each application that received a payload in the

          same order that the payloads were sent in the packet. If the receive is
          not

          successful, the acknowledgement will contain a single app acknowledgment

          which will be a constant error acknowledgment as defined by the IBC v2

          protocol.'
        properties:
          app_acknowledgements:
            items:
              format: byte
              type: string
            type: array
        type: object
      packet:
        properties:
          destination_client:
            description: identifies the receiving client on the receiving chain.
            type: string
          payloads:
            description: a list of payloads, each one for a specific application.
            items:
              properties:
                destination_port:
                  description: specifies the destination port of the packet.
                  type: string
                encoding:
                  description: the encoding used for the provided value.
                  type: string
                source_port:
                  description: specifies the source port of the packet.
                  type: string
                value:
                  description: the raw bytes for the payload.
                  format: byte
                  type: string
                version:
                  description: version of the specified application.
                  type: string
              title: 'Payload contains the source and destination ports and payload
                for the

                application (version, encoding, raw bytes)'
              type: object
            type: array
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_client:
            description: identifies the sending client on the sending chain.
            type: string
          timeout_timestamp:
            description: timeout timestamp in seconds after which the packet times
              out.
            format: uint64
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_acked:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    type: object
  ibc.core.channel.v2.MsgAcknowledgementResponse:
    description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response
      type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v2.MsgRecvPacket:
    description: MsgRecvPacket receives an incoming IBC packet.
    properties:
      packet:
        properties:
          destination_client:
            description: identifies the receiving client on the receiving chain.
            type: string
          payloads:
            description: a list of payloads, each one for a specific application.
            items:
              properties:
                destination_port:
                  description: specifies the destination port of the packet.
                  type: string
                encoding:
                  description: the encoding used for the provided value.
                  type: string
                source_port:
                  description: specifies the source port of the packet.
                  type: string
                value:
                  description: the raw bytes for the payload.
                  format: byte
                  type: string
                version:
                  description: version of the specified application.
                  type: string
              title: 'Payload contains the source and destination ports and payload
                for the

                application (version, encoding, raw bytes)'
              type: object
            type: array
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_client:
            description: identifies the sending client on the sending chain.
            type: string
          timeout_timestamp:
            description: timeout timestamp in seconds after which the packet times
              out.
            format: uint64
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_commitment:
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    type: object
  ibc.core.channel.v2.MsgRecvPacketResponse:
    description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v2.MsgSendPacket:
    description: MsgSendPacket sends an outgoing IBC packet.
    properties:
      payloads:
        items:
          properties:
            destination_port:
              description: specifies the destination port of the packet.
              type: string
            encoding:
              description: the encoding used for the provided value.
              type: string
            source_port:
              description: specifies the source port of the packet.
              type: string
            value:
              description: the raw bytes for the payload.
              format: byte
              type: string
            version:
              description: version of the specified application.
              type: string
          title: 'Payload contains the source and destination ports and payload for
            the

            application (version, encoding, raw bytes)'
          type: object
        type: array
      signer:
        type: string
      source_client:
        type: string
      timeout_timestamp:
        format: uint64
        type: string
    type: object
  ibc.core.channel.v2.MsgSendPacketResponse:
    description: MsgSendPacketResponse defines the Msg/SendPacket response type.
    properties:
      sequence:
        format: uint64
        type: string
    type: object
  ibc.core.channel.v2.MsgTimeout:
    properties:
      packet:
        properties:
          destination_client:
            description: identifies the receiving client on the receiving chain.
            type: string
          payloads:
            description: a list of payloads, each one for a specific application.
            items:
              properties:
                destination_port:
                  description: specifies the destination port of the packet.
                  type: string
                encoding:
                  description: the encoding used for the provided value.
                  type: string
                source_port:
                  description: specifies the source port of the packet.
                  type: string
                value:
                  description: the raw bytes for the payload.
                  format: byte
                  type: string
                version:
                  description: version of the specified application.
                  type: string
              title: 'Payload contains the source and destination ports and payload
                for the

                application (version, encoding, raw bytes)'
              type: object
            type: array
          sequence:
            description: 'number corresponds to the order of sends and receives, where
              a Packet

              with an earlier sequence number must be sent and received before a Packet

              with a later sequence number.'
            format: uint64
            type: string
          source_client:
            description: identifies the sending client on the sending chain.
            type: string
          timeout_timestamp:
            description: timeout timestamp in seconds after which the packet times
              out.
            format: uint64
            type: string
        title: Packet defines a type that carries data across different chains through
          IBC
        type: object
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_unreceived:
        format: byte
        type: string
      signer:
        type: string
    title: MsgTimeout receives timed-out packet
    type: object
  ibc.core.channel.v2.MsgTimeoutResponse:
    description: MsgTimeoutResponse defines the Msg/Timeout response type.
    properties:
      result:
        default: RESPONSE_RESULT_TYPE_UNSPECIFIED
        description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
          \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
          \ callbacks (because, for\nexample, the packet had already been relayed)\n\
          \ - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n\
          \ - RESPONSE_RESULT_TYPE_FAILURE: The message was executed unsuccessfully"
        enum:
        - RESPONSE_RESULT_TYPE_UNSPECIFIED
        - RESPONSE_RESULT_TYPE_NOOP
        - RESPONSE_RESULT_TYPE_SUCCESS
        - RESPONSE_RESULT_TYPE_FAILURE
        title: 'ResponseResultType defines the possible outcomes of the execution
          of a

          message'
        type: string
    type: object
  ibc.core.channel.v2.Packet:
    properties:
      destination_client:
        description: identifies the receiving client on the receiving chain.
        type: string
      payloads:
        description: a list of payloads, each one for a specific application.
        items:
          properties:
            destination_port:
              description: specifies the destination port of the packet.
              type: string
            encoding:
              description: the encoding used for the provided value.
              type: string
            source_port:
              description: specifies the source port of the packet.
              type: string
            value:
              description: the raw bytes for the payload.
              format: byte
              type: string
            version:
              description: version of the specified application.
              type: string
          title: 'Payload contains the source and destination ports and payload for
            the

            application (version, encoding, raw bytes)'
          type: object
        type: array
      sequence:
        description: 'number corresponds to the order of sends and receives, where
          a Packet

          with an earlier sequence number must be sent and received before a Packet

          with a later sequence number.'
        format: uint64
        type: string
      source_client:
        description: identifies the sending client on the sending chain.
        type: string
      timeout_timestamp:
        description: timeout timestamp in seconds after which the packet times out.
        format: uint64
        type: string
    title: Packet defines a type that carries data across different chains through
      IBC
    type: object
  ibc.core.channel.v2.PacketState:
    description: 'PacketState defines the generic type necessary to retrieve and store

      packet commitments, acknowledgements, and receipts.

      Caller is responsible for knowing the context necessary to interpret this

      state as a commitment, acknowledgement, or a receipt.'
    properties:
      client_id:
        description: client unique identifier.
        type: string
      data:
        description: embedded data that represents packet state.
        format: byte
        type: string
      sequence:
        description: packet sequence.
        format: uint64
        type: string
    type: object
  ibc.core.channel.v2.Payload:
    properties:
      destination_port:
        description: specifies the destination port of the packet.
        type: string
      encoding:
        description: the encoding used for the provided value.
        type: string
      source_port:
        description: specifies the source port of the packet.
        type: string
      value:
        description: the raw bytes for the payload.
        format: byte
        type: string
      version:
        description: version of the specified application.
        type: string
    title: 'Payload contains the source and destination ports and payload for the

      application (version, encoding, raw bytes)'
    type: object
  ibc.core.channel.v2.QueryNextSequenceSendResponse:
    properties:
      next_sequence_send:
        format: uint64
        title: next sequence send number
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryNextSequenceSendResponse is the response type for the

      Query/QueryNextSequenceSend RPC method'
    type: object
  ibc.core.channel.v2.QueryPacketAcknowledgementResponse:
    description: 'QueryPacketAcknowledgementResponse is the response type for the

      Query/PacketAcknowledgement RPC method.'
    properties:
      acknowledgement:
        format: byte
        title: acknowledgement associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    type: object
  ibc.core.channel.v2.QueryPacketAcknowledgementsResponse:
    properties:
      acknowledgements:
        items:
          description: 'PacketState defines the generic type necessary to retrieve
            and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret this

            state as a commitment, acknowledgement, or a receipt.'
          properties:
            client_id:
              description: client unique identifier.
              type: string
            data:
              description: embedded data that represents packet state.
              format: byte
              type: string
            sequence:
              description: packet sequence.
              format: uint64
              type: string
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryPacketAcknowledgemetsResponse is the request type for the

      Query/QueryPacketAcknowledgements RPC method'
    type: object
  ibc.core.channel.v2.QueryPacketCommitmentResponse:
    description: 'QueryPacketCommitmentResponse is the response type for the

      Query/PacketCommitment RPC method.'
    properties:
      commitment:
        format: byte
        title: packet associated with the request fields
        type: string
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    type: object
  ibc.core.channel.v2.QueryPacketCommitmentsResponse:
    description: 'QueryPacketCommitmentResponse is the response type for the

      Query/PacketCommitment RPC method.'
    properties:
      commitments:
        description: collection of packet commitments for the requested channel identifier.
        items:
          description: 'PacketState defines the generic type necessary to retrieve
            and store

            packet commitments, acknowledgements, and receipts.

            Caller is responsible for knowing the context necessary to interpret this

            state as a commitment, acknowledgement, or a receipt.'
          properties:
            client_id:
              description: client unique identifier.
              type: string
            data:
              description: embedded data that represents packet state.
              format: byte
              type: string
            sequence:
              description: packet sequence.
              format: uint64
              type: string
          type: object
        type: array
      height:
        description: query block height.
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      pagination:
        description: pagination response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  ibc.core.channel.v2.QueryPacketReceiptResponse:
    description: 'QueryPacketReceiptResponse is the response type for the Query/PacketReceipt

      RPC method.'
    properties:
      proof:
        format: byte
        title: merkle proof of existence or absence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
      received:
        title: success flag for if receipt exists
        type: boolean
    type: object
  ibc.core.channel.v2.QueryUnreceivedAcksResponse:
    properties:
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived acknowledgement sequences
        type: array
    title: 'QueryUnreceivedAcksResponse is the response type for the

      Query/UnreceivedAcks RPC method'
    type: object
  ibc.core.channel.v2.QueryUnreceivedPacketsResponse:
    properties:
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      sequences:
        items:
          format: uint64
          type: string
        title: list of unreceived packet sequences
        type: array
    title: 'QueryUnreceivedPacketsResponse is the response type for the

      Query/UnreceivedPacketCommitments RPC method'
    type: object
  ibc.core.channel.v2.ResponseResultType:
    default: RESPONSE_RESULT_TYPE_UNSPECIFIED
    description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration\n\
      \ - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application\
      \ callbacks (because, for\nexample, the packet had already been relayed)\n -\
      \ RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
      \ The message was executed unsuccessfully"
    enum:
    - RESPONSE_RESULT_TYPE_UNSPECIFIED
    - RESPONSE_RESULT_TYPE_NOOP
    - RESPONSE_RESULT_TYPE_SUCCESS
    - RESPONSE_RESULT_TYPE_FAILURE
    title: 'ResponseResultType defines the possible outcomes of the execution of a

      message'
    type: string
  ibc.core.client.v1.ConsensusStateWithHeight:
    description: 'ConsensusStateWithHeight defines a consensus state with an additional
      height

      field.'
    properties:
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: consensus state
        type: object
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: consensus state height
        type: object
    type: object
  ibc.core.client.v1.Height:
    description: 'Normally the RevisionHeight is incremented at each height while
      keeping

      RevisionNumber the same. However some consensus algorithms may choose to

      reset the height in certain conditions e.g. hard forks, state-machine

      breaking changes In these cases, the RevisionNumber is incremented so that

      height continues to be monitonically increasing even as the RevisionHeight

      gets reset


      Please note that json tags for generated Go code are overridden to explicitly

      exclude the omitempty jsontag. This enforces the Go json marshaller to always

      emit zero values for both revision_number and revision_height.'
    properties:
      revision_height:
        format: uint64
        title: the height within the given revision
        type: string
      revision_number:
        format: uint64
        title: the revision that the client is currently on
        type: string
    title: 'Height is a monotonically increasing data type

      that can be compared against another Height for the purposes of updating and

      freezing clients'
    type: object
  ibc.core.client.v1.IdentifiedClientState:
    description: 'IdentifiedClientState defines a client state with an additional
      client

      identifier field.'
    properties:
      client_id:
        title: client identifier
        type: string
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: client state
        type: object
    type: object
  ibc.core.client.v1.MsgCreateClient:
    properties:
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: light client state
        type: object
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      signer:
        title: signer address
        type: string
    title: MsgCreateClient defines a message to create an IBC client
    type: object
  ibc.core.client.v1.MsgCreateClientResponse:
    description: MsgCreateClientResponse defines the Msg/CreateClient response type.
    properties:
      client_id:
        type: string
    type: object
  ibc.core.client.v1.MsgDeleteClientCreator:
    properties:
      client_id:
        title: client identifier
        type: string
      signer:
        title: signer address
        type: string
    title: 'MsgDeleteClientCreator defines a message to delete the client creator
      of a

      client'
    type: object
  ibc.core.client.v1.MsgDeleteClientCreatorResponse:
    description: 'MsgDeleteClientCreatorResponse defines the Msg/DeleteClientCreator
      response

      type.'
    type: object
  ibc.core.client.v1.MsgIBCSoftwareUpgrade:
    properties:
      plan:
        description: Plan specifies information about a planned upgrade and when it
          should occur.
        properties:
          height:
            description: The height at which the upgrade must be performed.
            format: int64
            type: string
          info:
            title: 'Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade to'
            type: string
          name:
            description: 'Sets the name for the upgrade. This name will be used by
              the upgraded

              version of the software to apply any special "on-upgrade" commands during

              the first BeginBlock method after the upgrade is applied. It is also
              used

              to detect whether a software version can handle a given upgrade. If
              no

              upgrade handler with this name has been set in the software, it will
              be

              assumed that the software is out-of-date when the upgrade Time or Height
              is

              reached and the software will exit.'
            type: string
          time:
            description: 'Deprecated: Time based upgrades have been deprecated. Time
              based upgrade

              logic has been removed from the SDK. If this field is not empty, an
              error

              will be thrown.'
            format: date-time
            type: string
          upgraded_client_state:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
        type: object
      signer:
        title: signer address
        type: string
      upgraded_client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
    title: 'MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade
      of an

      IBC client using a v1 governance proposal'
    type: object
  ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse:
    description: 'MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade
      response

      type.'
    type: object
  ibc.core.client.v1.MsgRecoverClient:
    description: 'MsgRecoverClient defines the message used to recover a frozen or
      expired

      client.'
    properties:
      signer:
        title: signer address
        type: string
      subject_client_id:
        title: the client identifier for the client to be updated if the proposal
          passes
        type: string
      substitute_client_id:
        title: 'the substitute client identifier for the client which will replace
          the

          subject client'
        type: string
    type: object
  ibc.core.client.v1.MsgRecoverClientResponse:
    description: MsgRecoverClientResponse defines the Msg/RecoverClient response type.
    type: object
  ibc.core.client.v1.MsgSubmitMisbehaviour:
    description: 'MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence
      for

      light client misbehaviour.

      This message has been deprecated. Use MsgUpdateClient instead.'
    properties:
      client_id:
        title: client unique identifier
        type: string
      misbehaviour:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: misbehaviour used for freezing the light client
        type: object
      signer:
        title: signer address
        type: string
    type: object
  ibc.core.client.v1.MsgSubmitMisbehaviourResponse:
    description: 'MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour
      response

      type.'
    type: object
  ibc.core.client.v1.MsgUpdateClient:
    description: 'MsgUpdateClient defines an sdk.Msg to update a IBC client state
      using

      the given client message.'
    properties:
      client_id:
        title: client unique identifier
        type: string
      client_message:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: client message to update the light client
        type: object
      signer:
        title: signer address
        type: string
    type: object
  ibc.core.client.v1.MsgUpdateClientResponse:
    description: MsgUpdateClientResponse defines the Msg/UpdateClient response type.
    type: object
  ibc.core.client.v1.MsgUpdateParams:
    description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
    properties:
      params:
        description: 'params defines the client parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          allowed_clients:
            description: 'allowed_clients defines the list of allowed client state
              types which can be

              created and interacted with. If a client type is removed from the allowed

              clients list, usage of this client will be disabled until it is added
              again

              to the list.'
            items:
              type: string
            type: array
        type: object
      signer:
        title: signer address
        type: string
    type: object
  ibc.core.client.v1.MsgUpdateParamsResponse:
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    type: object
  ibc.core.client.v1.MsgUpgradeClient:
    properties:
      client_id:
        title: client unique identifier
        type: string
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: upgraded client state
        type: object
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: 'upgraded consensus state, only contains enough information to serve
          as a

          basis of trust in update logic'
        type: object
      proof_upgrade_client:
        format: byte
        title: proof that old chain committed to new client
        type: string
      proof_upgrade_consensus_state:
        format: byte
        title: proof that old chain committed to new consensus state
        type: string
      signer:
        title: signer address
        type: string
    title: 'MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new
      client

      state'
    type: object
  ibc.core.client.v1.MsgUpgradeClientResponse:
    description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
    type: object
  ibc.core.client.v1.Params:
    description: Params defines the set of IBC light client parameters.
    properties:
      allowed_clients:
        description: 'allowed_clients defines the list of allowed client state types
          which can be

          created and interacted with. If a client type is removed from the allowed

          clients list, usage of this client will be disabled until it is added again

          to the list.'
        items:
          type: string
        type: array
    type: object
  ibc.core.client.v1.QueryClientCreatorResponse:
    description: 'QueryClientCreatorResponse is the response type for the Query/ClientCreator

      RPC method.'
    properties:
      creator:
        title: creator of the client
        type: string
    type: object
  ibc.core.client.v1.QueryClientParamsResponse:
    description: 'QueryClientParamsResponse is the response type for the Query/ClientParams
      RPC

      method.'
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          allowed_clients:
            description: 'allowed_clients defines the list of allowed client state
              types which can be

              created and interacted with. If a client type is removed from the allowed

              clients list, usage of this client will be disabled until it is added
              again

              to the list.'
            items:
              type: string
            type: array
        type: object
    type: object
  ibc.core.client.v1.QueryClientStateResponse:
    description: 'QueryClientStateResponse is the response type for the Query/ClientState
      RPC

      method. Besides the client state, it includes a proof and the height from

      which the proof was retrieved.'
    properties:
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: client state associated with the request identifier
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    type: object
  ibc.core.client.v1.QueryClientStatesResponse:
    description: 'QueryClientStatesResponse is the response type for the Query/ClientStates
      RPC

      method.'
    properties:
      client_states:
        description: list of stored ClientStates of the chain.
        items:
          description: 'IdentifiedClientState defines a client state with an additional
            client

            identifier field.'
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: client state
              type: object
          type: object
        type: array
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    type: object
  ibc.core.client.v1.QueryClientStatusResponse:
    description: 'QueryClientStatusResponse is the response type for the Query/ClientStatus
      RPC

      method. It returns the current status of the IBC client.'
    properties:
      status:
        type: string
    type: object
  ibc.core.client.v1.QueryConsensusStateHeightsResponse:
    properties:
      consensus_state_heights:
        items:
          description: 'Normally the RevisionHeight is incremented at each height
            while keeping

            RevisionNumber the same. However some consensus algorithms may choose
            to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so
            that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset


            Please note that json tags for generated Go code are overridden to explicitly

            exclude the omitempty jsontag. This enforces the Go json marshaller to
            always

            emit zero values for both revision_number and revision_height.'
          properties:
            revision_height:
              format: uint64
              title: the height within the given revision
              type: string
            revision_number:
              format: uint64
              title: the revision that the client is currently on
              type: string
          title: 'Height is a monotonically increasing data type

            that can be compared against another Height for the purposes of updating
            and

            freezing clients'
          type: object
        title: consensus state heights
        type: array
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryConsensusStateHeightsResponse is the response type for the

      Query/ConsensusStateHeights RPC method'
    type: object
  ibc.core.client.v1.QueryConsensusStateResponse:
    properties:
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: consensus state associated with the client identifier at the given
          height
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
    title: 'QueryConsensusStateResponse is the response type for the Query/ConsensusState

      RPC method'
    type: object
  ibc.core.client.v1.QueryConsensusStatesResponse:
    properties:
      consensus_states:
        items:
          description: 'ConsensusStateWithHeight defines a consensus state with an
            additional height

            field.'
          properties:
            consensus_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: consensus state
              type: object
            height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: consensus state height
              type: object
          type: object
        title: consensus states associated with the identifier
        type: array
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    title: 'QueryConsensusStatesResponse is the response type for the

      Query/ConsensusStates RPC method'
    type: object
  ibc.core.client.v1.QueryUpgradedClientStateResponse:
    description: 'QueryUpgradedClientStateResponse is the response type for the

      Query/UpgradedClientState RPC method.'
    properties:
      upgraded_client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: client state associated with the request identifier
        type: object
    type: object
  ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
    description: 'QueryUpgradedConsensusStateResponse is the response type for the

      Query/UpgradedConsensusState RPC method.'
    properties:
      upgraded_consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: Consensus state associated with the request identifier
        type: object
    type: object
  ibc.core.client.v1.QueryVerifyMembershipRequest:
    properties:
      block_delay:
        format: uint64
        title: optional block delay
        type: string
      client_id:
        description: client unique identifier.
        type: string
      merkle_path:
        description: the commitment key path.
        properties:
          key_path:
            items:
              format: byte
              type: string
            type: array
        type: object
      proof:
        description: the proof to be verified by the client.
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      time_delay:
        format: uint64
        title: optional time delay
        type: string
      value:
        description: the value which is proven.
        format: byte
        type: string
    title: 'QueryVerifyMembershipRequest is the request type for the

      Query/VerifyMembership RPC method'
    type: object
  ibc.core.client.v1.QueryVerifyMembershipResponse:
    properties:
      success:
        description: boolean indicating success or failure of proof verification.
        type: boolean
    title: 'QueryVerifyMembershipResponse is the response type for the

      Query/VerifyMembership RPC method'
    type: object
  ibc.core.client.v2.Config:
    properties:
      allowed_relayers:
        items:
          type: string
        title: 'allowed_relayers defines the set of allowed relayers for IBC V2 protocol

          for the given client'
        type: array
    title: 'Config is a **per-client** configuration struct that sets which relayers
      are

      allowed to relay v2 IBC messages for a given client. If it is set, then only

      relayers in the allow list can send v2 messages If it is not set, then the

      client allows permissionless relaying of v2 messages'
    type: object
  ibc.core.client.v2.CounterpartyInfo:
    properties:
      client_id:
        title: 'client identifier is the identifier used to send packet messages to
          our

          client'
        type: string
      merkle_prefix:
        items:
          format: byte
          type: string
        title: merkle prefix key is the prefix that ics provable keys are stored under
        type: array
    title: 'CounterpartyInfo defines the key that the counterparty will use to message

      our client'
    type: object
  ibc.core.client.v2.MsgRegisterCounterparty:
    properties:
      client_id:
        title: client identifier
        type: string
      counterparty_client_id:
        title: counterparty client identifier
        type: string
      counterparty_merkle_prefix:
        items:
          format: byte
          type: string
        title: counterparty merkle prefix
        type: array
      signer:
        title: signer address
        type: string
    title: 'MsgRegisterCounterparty defines a message to register a counterparty on
      a

      client'
    type: object
  ibc.core.client.v2.MsgRegisterCounterpartyResponse:
    description: 'MsgRegisterCounterpartyResponse defines the Msg/RegisterCounterparty
      response

      type.'
    type: object
  ibc.core.client.v2.MsgUpdateClientConfig:
    properties:
      client_id:
        title: client identifier
        type: string
      config:
        description: 'NOTE: All fields in the config must be supplied.'
        properties:
          allowed_relayers:
            items:
              type: string
            title: 'allowed_relayers defines the set of allowed relayers for IBC V2
              protocol

              for the given client'
            type: array
        title: allowed relayers
        type: object
      signer:
        title: signer address
        type: string
    title: 'MsgUpdateClientConfig defines the sdk.Msg type to update the configuration

      for a given client'
    type: object
  ibc.core.client.v2.MsgUpdateClientConfigResponse:
    description: 'MsgUpdateClientConfigResponse defines the MsgUpdateClientConfig
      response

      type.'
    type: object
  ibc.core.client.v2.QueryConfigResponse:
    properties:
      config:
        properties:
          allowed_relayers:
            items:
              type: string
            title: 'allowed_relayers defines the set of allowed relayers for IBC V2
              protocol

              for the given client'
            type: array
        title: 'Config is a **per-client** configuration struct that sets which relayers
          are

          allowed to relay v2 IBC messages for a given client. If it is set, then
          only

          relayers in the allow list can send v2 messages If it is not set, then the

          client allows permissionless relaying of v2 messages'
        type: object
    title: QueryConfigResponse is the response type for the Query/Config RPC method
    type: object
  ibc.core.client.v2.QueryCounterpartyInfoResponse:
    description: 'QueryCounterpartyInfoResponse is the response type for the

      Query/CounterpartyInfo RPC method.'
    properties:
      counterparty_info:
        properties:
          client_id:
            title: 'client identifier is the identifier used to send packet messages
              to our

              client'
            type: string
          merkle_prefix:
            items:
              format: byte
              type: string
            title: merkle prefix key is the prefix that ics provable keys are stored
              under
            type: array
        title: 'CounterpartyInfo defines the key that the counterparty will use to
          message

          our client'
        type: object
    type: object
  ibc.core.commitment.v1.MerklePrefix:
    properties:
      key_prefix:
        format: byte
        type: string
    title: 'MerklePrefix is merkle path prefixed to the key.

      The constructed key from the Path and the key will be append(Path.KeyPath,

      append(Path.KeyPrefix, key...))'
    type: object
  ibc.core.commitment.v2.MerklePath:
    description: 'MerklePath is the path used to verify commitment proofs, which can
      be an

      arbitrary structured object (defined by a commitment type).

      ICS-23 verification supports membership proofs for nested merkle trees.

      The ICS-24 standard provable keys MUST be stored in the lowest level tree

      with an optional prefix. The IC24 provable tree may then be stored in a

      higher level tree(s) that hash up to the root hash stored in the consensus

      state of the client. Each element of the path represents the key of a merkle

      tree from the root to the leaf. The elements of the path before the final

      element must be the path to the tree that contains the ICS24 provable store.

      Thus, it should remain constant for all ICS24 proofs. The final element of

      the path is the key of the leaf in the ICS24 provable store, Thus IBC core

      will append the ICS24 path to the final element of the MerklePath stored in

      the counterparty to create the full path to the leaf for proof verification.

      Examples:

      Cosmos SDK:

      The Cosmos SDK commits to a multi-tree where each store is an IAVL tree and

      all store hashes are hashed in a simple merkle tree to get the final root

      hash. Thus, the MerklePath in the counterparty MerklePrefix has the following

      structure: ["ibc", ""] The core IBC handler will append the ICS24 path to the

      final element of the MerklePath like so: ["ibc", "{packetCommitmentPath}"]

      which will then be used for final verification. Ethereum: The Ethereum client

      commits to a single Patricia merkle trie. The ICS24 provable store is managed

      by the smart contract state. Each smart contract has a specific prefix

      reserved within the global trie. Thus the MerklePath in the counterparty is

      the prefix to the smart contract state in the global trie. Since there is

      only one tree in the commitment structure of ethereum the MerklePath in the

      counterparty MerklePrefix has the following structure:

      ["IBCCoreContractAddressStoragePrefix"] The core IBC handler will append the

      ICS24 path to the final element of the MerklePath like so:

      ["IBCCoreContractAddressStoragePrefix{packetCommitmentPath}"] which will then

      be used for final verification. Thus the MerklePath in the counterparty

      MerklePrefix is the nested key path from the root hash of the consensus state

      down to the ICS24 provable store. The IBC handler retrieves the counterparty

      key path to the ICS24 provable store from the MerklePath and appends the

      ICS24 path to get the final key path to the value being verified by the

      client against the root hash in the client''s consensus state.'
    properties:
      key_path:
        items:
          format: byte
          type: string
        type: array
    type: object
  ibc.core.connection.v1.ConnectionEnd:
    description: 'ConnectionEnd defines a stateful object on a chain connected to
      another

      separate one.

      NOTE: there must only be 2 defined ConnectionEnds to establish

      a connection between two chains.'
    properties:
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        properties:
          client_id:
            description: 'identifies the client on the counterparty chain associated
              with a given

              connection.'
            type: string
          connection_id:
            description: 'identifies the connection end on the counterparty chain
              associated with a

              given connection.'
            type: string
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            properties:
              key_prefix:
                format: byte
                type: string
            title: 'MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be append(Path.KeyPath,

              append(Path.KeyPrefix, key...))'
            type: object
        type: object
      delay_period:
        description: 'delay period that must pass before a consensus state can be
          used for

          packet-verification NOTE: delay period logic is only implemented by some

          clients.'
        format: uint64
        type: string
      state:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: current state of the connection end.
        enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        type: string
      versions:
        description: 'IBC version which can be utilised to determine encodings or
          protocols for

          channels or packets utilising this connection.'
        items:
          description: 'Version defines the versioning scheme used to negotiate the
            IBC version in

            the connection handshake.'
          properties:
            features:
              items:
                type: string
              title: list of features compatible with the specified identifier
              type: array
            identifier:
              title: unique version identifier
              type: string
          type: object
        type: array
    type: object
  ibc.core.connection.v1.Counterparty:
    description: Counterparty defines the counterparty chain associated with a connection
      end.
    properties:
      client_id:
        description: 'identifies the client on the counterparty chain associated with
          a given

          connection.'
        type: string
      connection_id:
        description: 'identifies the connection end on the counterparty chain associated
          with a

          given connection.'
        type: string
      prefix:
        description: commitment merkle prefix of the counterparty chain.
        properties:
          key_prefix:
            format: byte
            type: string
        title: 'MerklePrefix is merkle path prefixed to the key.

          The constructed key from the Path and the key will be append(Path.KeyPath,

          append(Path.KeyPrefix, key...))'
        type: object
    type: object
  ibc.core.connection.v1.IdentifiedConnection:
    description: 'IdentifiedConnection defines a connection with additional connection

      identifier field.'
    properties:
      client_id:
        description: client associated with this connection.
        type: string
      counterparty:
        description: counterparty chain associated with this connection.
        properties:
          client_id:
            description: 'identifies the client on the counterparty chain associated
              with a given

              connection.'
            type: string
          connection_id:
            description: 'identifies the connection end on the counterparty chain
              associated with a

              given connection.'
            type: string
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            properties:
              key_prefix:
                format: byte
                type: string
            title: 'MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be append(Path.KeyPath,

              append(Path.KeyPrefix, key...))'
            type: object
        type: object
      delay_period:
        description: delay period associated with this connection.
        format: uint64
        type: string
      id:
        description: connection identifier.
        type: string
      state:
        default: STATE_UNINITIALIZED_UNSPECIFIED
        description: current state of the connection end.
        enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        type: string
      versions:
        items:
          description: 'Version defines the versioning scheme used to negotiate the
            IBC version in

            the connection handshake.'
          properties:
            features:
              items:
                type: string
              title: list of features compatible with the specified identifier
              type: array
            identifier:
              title: unique version identifier
              type: string
          type: object
        title: 'IBC version which can be utilised to determine encodings or protocols
          for

          channels or packets utilising this connection'
        type: array
    type: object
  ibc.core.connection.v1.MsgConnectionOpenAck:
    description: 'MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A
      to

      acknowledge the change of connection state to TRYOPEN on Chain B.'
    properties:
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      connection_id:
        type: string
      consensus_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      counterparty_connection_id:
        type: string
      host_consensus_state_proof:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      proof_client:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      proof_consensus:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_try:
        format: byte
        title: 'proof of the initialization the connection on Chain B: `UNINITIALIZED
          ->

          TRYOPEN`'
        type: string
      signer:
        type: string
      version:
        description: 'Version defines the versioning scheme used to negotiate the
          IBC version in

          the connection handshake.'
        properties:
          features:
            items:
              type: string
            title: list of features compatible with the specified identifier
            type: array
          identifier:
            title: unique version identifier
            type: string
        type: object
    type: object
  ibc.core.connection.v1.MsgConnectionOpenAckResponse:
    description: MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response
      type.
    type: object
  ibc.core.connection.v1.MsgConnectionOpenConfirm:
    description: 'MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain
      B to

      acknowledge the change of connection state to OPEN on Chain A.'
    properties:
      connection_id:
        type: string
      proof_ack:
        format: byte
        title: 'proof for the change of the connection state on Chain A: `INIT ->
          OPEN`'
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      signer:
        type: string
    type: object
  ibc.core.connection.v1.MsgConnectionOpenConfirmResponse:
    description: 'MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm

      response type.'
    type: object
  ibc.core.connection.v1.MsgConnectionOpenInit:
    description: 'MsgConnectionOpenInit defines the msg sent by an account on Chain
      A to

      initialize a connection with Chain B.'
    properties:
      client_id:
        type: string
      counterparty:
        description: Counterparty defines the counterparty chain associated with a
          connection end.
        properties:
          client_id:
            description: 'identifies the client on the counterparty chain associated
              with a given

              connection.'
            type: string
          connection_id:
            description: 'identifies the connection end on the counterparty chain
              associated with a

              given connection.'
            type: string
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            properties:
              key_prefix:
                format: byte
                type: string
            title: 'MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be append(Path.KeyPath,

              append(Path.KeyPrefix, key...))'
            type: object
        type: object
      delay_period:
        format: uint64
        type: string
      signer:
        type: string
      version:
        description: 'Version defines the versioning scheme used to negotiate the
          IBC version in

          the connection handshake.'
        properties:
          features:
            items:
              type: string
            title: list of features compatible with the specified identifier
            type: array
          identifier:
            title: unique version identifier
            type: string
        type: object
    type: object
  ibc.core.connection.v1.MsgConnectionOpenInitResponse:
    description: 'MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit
      response

      type.'
    type: object
  ibc.core.connection.v1.MsgConnectionOpenTry:
    description: 'MsgConnectionOpenTry defines a msg sent by a Relayer to try to open
      a

      connection on Chain B.'
    properties:
      client_id:
        type: string
      client_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        type: object
      consensus_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      counterparty:
        description: Counterparty defines the counterparty chain associated with a
          connection end.
        properties:
          client_id:
            description: 'identifies the client on the counterparty chain associated
              with a given

              connection.'
            type: string
          connection_id:
            description: 'identifies the connection end on the counterparty chain
              associated with a

              given connection.'
            type: string
          prefix:
            description: commitment merkle prefix of the counterparty chain.
            properties:
              key_prefix:
                format: byte
                type: string
            title: 'MerklePrefix is merkle path prefixed to the key.

              The constructed key from the Path and the key will be append(Path.KeyPath,

              append(Path.KeyPrefix, key...))'
            type: object
        type: object
      counterparty_versions:
        items:
          description: 'Version defines the versioning scheme used to negotiate the
            IBC version in

            the connection handshake.'
          properties:
            features:
              items:
                type: string
              title: list of features compatible with the specified identifier
              type: array
            identifier:
              title: unique version identifier
              type: string
          type: object
        type: array
      delay_period:
        format: uint64
        type: string
      host_consensus_state_proof:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      previous_connection_id:
        description: 'Deprecated: this field is unused. Crossing hellos are no longer
          supported

          in core IBC.'
        type: string
      proof_client:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      proof_consensus:
        description: 'Deprecated: this field is unused.'
        format: byte
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: 'Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of updating
          and

          freezing clients'
        type: object
      proof_init:
        format: byte
        title: 'proof of the initialization the connection on Chain A: `UNINITIALIZED
          ->

          INIT`'
        type: string
      signer:
        type: string
    type: object
  ibc.core.connection.v1.MsgConnectionOpenTryResponse:
    description: MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response
      type.
    type: object
  ibc.core.connection.v1.MsgUpdateParams:
    description: MsgUpdateParams defines the sdk.Msg type to update the connection
      parameters.
    properties:
      params:
        description: 'params defines the connection parameters to update.


          NOTE: All parameters must be supplied.'
        properties:
          max_expected_time_per_block:
            description: 'maximum expected time per block (in nanoseconds), used to
              enforce block

              delay. This parameter should reflect the largest amount of time that
              the

              chain might reasonably take to produce the next block under normal

              operating conditions. A safe choice is 3-5x the expected time per block.'
            format: uint64
            type: string
        type: object
      signer:
        title: signer address
        type: string
    type: object
  ibc.core.connection.v1.MsgUpdateParamsResponse:
    description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    type: object
  ibc.core.connection.v1.Params:
    description: Params defines the set of Connection parameters.
    properties:
      max_expected_time_per_block:
        description: 'maximum expected time per block (in nanoseconds), used to enforce
          block

          delay. This parameter should reflect the largest amount of time that the

          chain might reasonably take to produce the next block under normal

          operating conditions. A safe choice is 3-5x the expected time per block.'
        format: uint64
        type: string
    type: object
  ibc.core.connection.v1.QueryClientConnectionsResponse:
    properties:
      connection_paths:
        description: slice of all the connection paths associated with a client.
        items:
          type: string
        type: array
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was generated
        type: object
    title: 'QueryClientConnectionsResponse is the response type for the

      Query/ClientConnections RPC method'
    type: object
  ibc.core.connection.v1.QueryConnectionClientStateResponse:
    properties:
      identified_client_state:
        description: 'IdentifiedClientState defines a client state with an additional
          client

          identifier field.'
        properties:
          client_id:
            title: client identifier
            type: string
          client_state:
            properties:
              type_url:
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            title: client state
            type: object
        title: client state associated with the channel
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryConnectionClientStateResponse is the response type for the

      Query/ConnectionClientState RPC method'
    type: object
  ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
    properties:
      client_id:
        title: client ID associated with the consensus state
        type: string
      consensus_state:
        properties:
          type_url:
            type: string
          value:
            description: Must be a valid serialized protocol buffer of the above specified
              type.
            format: byte
            type: string
        title: consensus state associated with the channel
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    title: 'QueryConnectionConsensusStateResponse is the response type for the

      Query/ConnectionConsensusState RPC method'
    type: object
  ibc.core.connection.v1.QueryConnectionParamsResponse:
    description: 'QueryConnectionParamsResponse is the response type for the

      Query/ConnectionParams RPC method.'
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          max_expected_time_per_block:
            description: 'maximum expected time per block (in nanoseconds), used to
              enforce block

              delay. This parameter should reflect the largest amount of time that
              the

              chain might reasonably take to produce the next block under normal

              operating conditions. A safe choice is 3-5x the expected time per block.'
            format: uint64
            type: string
        type: object
    type: object
  ibc.core.connection.v1.QueryConnectionResponse:
    description: 'QueryConnectionResponse is the response type for the Query/Connection
      RPC

      method. Besides the connection end, it includes a proof and the height from

      which the proof was retrieved.'
    properties:
      connection:
        description: 'ConnectionEnd defines a stateful object on a chain connected
          to another

          separate one.

          NOTE: there must only be 2 defined ConnectionEnds to establish

          a connection between two chains.'
        properties:
          client_id:
            description: client associated with this connection.
            type: string
          counterparty:
            description: counterparty chain associated with this connection.
            properties:
              client_id:
                description: 'identifies the client on the counterparty chain associated
                  with a given

                  connection.'
                type: string
              connection_id:
                description: 'identifies the connection end on the counterparty chain
                  associated with a

                  given connection.'
                type: string
              prefix:
                description: commitment merkle prefix of the counterparty chain.
                properties:
                  key_prefix:
                    format: byte
                    type: string
                title: 'MerklePrefix is merkle path prefixed to the key.

                  The constructed key from the Path and the key will be append(Path.KeyPath,

                  append(Path.KeyPrefix, key...))'
                type: object
            type: object
          delay_period:
            description: 'delay period that must pass before a consensus state can
              be used for

              packet-verification NOTE: delay period logic is only implemented by
              some

              clients.'
            format: uint64
            type: string
          state:
            default: STATE_UNINITIALIZED_UNSPECIFIED
            description: current state of the connection end.
            enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            type: string
          versions:
            description: 'IBC version which can be utilised to determine encodings
              or protocols for

              channels or packets utilising this connection.'
            items:
              description: 'Version defines the versioning scheme used to negotiate
                the IBC version in

                the connection handshake.'
              properties:
                features:
                  items:
                    type: string
                  title: list of features compatible with the specified identifier
                  type: array
                identifier:
                  title: unique version identifier
                  type: string
              type: object
            type: array
        title: connection associated with the request identifier
        type: object
      proof:
        format: byte
        title: merkle proof of existence
        type: string
      proof_height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: height at which the proof was retrieved
        type: object
    type: object
  ibc.core.connection.v1.QueryConnectionsResponse:
    description: 'QueryConnectionsResponse is the response type for the Query/Connections
      RPC

      method.'
    properties:
      connections:
        description: list of stored connections of the chain.
        items:
          description: 'IdentifiedConnection defines a connection with additional
            connection

            identifier field.'
          properties:
            client_id:
              description: client associated with this connection.
              type: string
            counterparty:
              description: counterparty chain associated with this connection.
              properties:
                client_id:
                  description: 'identifies the client on the counterparty chain associated
                    with a given

                    connection.'
                  type: string
                connection_id:
                  description: 'identifies the connection end on the counterparty
                    chain associated with a

                    given connection.'
                  type: string
                prefix:
                  description: commitment merkle prefix of the counterparty chain.
                  properties:
                    key_prefix:
                      format: byte
                      type: string
                  title: 'MerklePrefix is merkle path prefixed to the key.

                    The constructed key from the Path and the key will be append(Path.KeyPath,

                    append(Path.KeyPrefix, key...))'
                  type: object
              type: object
            delay_period:
              description: delay period associated with this connection.
              format: uint64
              type: string
            id:
              description: connection identifier.
              type: string
            state:
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: current state of the connection end.
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              type: string
            versions:
              items:
                description: 'Version defines the versioning scheme used to negotiate
                  the IBC version in

                  the connection handshake.'
                properties:
                  features:
                    items:
                      type: string
                    title: list of features compatible with the specified identifier
                    type: array
                  identifier:
                    title: unique version identifier
                    type: string
                type: object
              title: 'IBC version which can be utilised to determine encodings or
                protocols for

                channels or packets utilising this connection'
              type: array
          type: object
        type: array
      height:
        description: 'Normally the RevisionHeight is incremented at each height while
          keeping

          RevisionNumber the same. However some consensus algorithms may choose to

          reset the height in certain conditions e.g. hard forks, state-machine

          breaking changes In these cases, the RevisionNumber is incremented so that

          height continues to be monitonically increasing even as the RevisionHeight

          gets reset


          Please note that json tags for generated Go code are overridden to explicitly

          exclude the omitempty jsontag. This enforces the Go json marshaller to always

          emit zero values for both revision_number and revision_height.'
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: query block height
        type: object
      pagination:
        description: "PageResponse is to be embedded in gRPC response messages where\
          \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
          \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
          \ }"
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        title: pagination response
        type: object
    type: object
  ibc.core.connection.v1.State:
    default: STATE_UNINITIALIZED_UNSPECIFIED
    description: "State defines if a connection is in one of the following states:\n\
      INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED:\
      \ Default State\n - STATE_INIT: A connection end has just started the opening\
      \ handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake\
      \ step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed\
      \ the handshake."
    enum:
    - STATE_UNINITIALIZED_UNSPECIFIED
    - STATE_INIT
    - STATE_TRYOPEN
    - STATE_OPEN
    type: string
  ibc.core.connection.v1.Version:
    description: 'Version defines the versioning scheme used to negotiate the IBC
      version in

      the connection handshake.'
    properties:
      features:
        items:
          type: string
        title: list of features compatible with the specified identifier
        type: array
      identifier:
        title: unique version identifier
        type: string
    type: object
  ibc.lightclients.wasm.v1.MsgMigrateContract:
    description: MsgMigrateContract defines the request type for the MigrateContract
      rpc.
    properties:
      checksum:
        format: byte
        title: checksum is the sha256 hash of the new wasm byte code for the contract
        type: string
      client_id:
        title: the client id of the contract
        type: string
      msg:
        format: byte
        title: the json encoded message to be passed to the contract on migration
        type: string
      signer:
        title: signer address
        type: string
    type: object
  ibc.lightclients.wasm.v1.MsgMigrateContractResponse:
    title: 'MsgMigrateContractResponse defines the response type for the MigrateContract

      rpc'
    type: object
  ibc.lightclients.wasm.v1.MsgRemoveChecksum:
    description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum
      rpc.
    properties:
      checksum:
        format: byte
        title: checksum is the sha256 hash to be removed from the store
        type: string
      signer:
        title: signer address
        type: string
    type: object
  ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse:
    title: MsgStoreChecksumResponse defines the response type for the StoreCode rpc
    type: object
  ibc.lightclients.wasm.v1.MsgStoreCode:
    description: MsgStoreCode defines the request type for the StoreCode rpc.
    properties:
      signer:
        title: signer address
        type: string
      wasm_byte_code:
        format: byte
        title: wasm byte code of light client contract. It can be raw or gzip compressed
        type: string
    type: object
  ibc.lightclients.wasm.v1.MsgStoreCodeResponse:
    properties:
      checksum:
        format: byte
        title: checksum is the sha256 hash of the stored code
        type: string
    title: MsgStoreCodeResponse defines the response type for the StoreCode rpc
    type: object
  ibc.lightclients.wasm.v1.QueryChecksumsResponse:
    description: 'QueryChecksumsResponse is the response type for the Query/Checksums
      RPC

      method.'
    properties:
      checksums:
        description: checksums is a list of the hex encoded checksums of all wasm
          codes stored.
        items:
          type: string
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: 'next_key is the key to be passed to PageRequest.key to

              query the next page most efficiently. It will be empty if

              there are no more results.'
            format: byte
            type: string
          total:
            format: uint64
            title: 'total is total number of results available if PageRequest.count_total

              was set, its value is undefined otherwise'
            type: string
        type: object
    type: object
  ibc.lightclients.wasm.v1.QueryCodeResponse:
    description: QueryCodeResponse is the response type for the Query/Code RPC method.
    properties:
      data:
        format: byte
        type: string
    type: object
  tendermint.abci.Event:
    description: 'Event allows application developers to attach additional information
      to

      ResponseFinalizeBlock and ResponseCheckTx.

      Later, transactions may be queried using these events.'
    properties:
      attributes:
        items:
          description: EventAttribute is a single key-value pair, associated with
            an event.
          properties:
            index:
              type: boolean
            key:
              type: string
            value:
              type: string
          type: object
        type: array
      type:
        type: string
    type: object
  tendermint.abci.EventAttribute:
    description: EventAttribute is a single key-value pair, associated with an event.
    properties:
      index:
        type: boolean
      key:
        type: string
      value:
        type: string
    type: object
  tendermint.crypto.PublicKey:
    properties:
      ed25519:
        format: byte
        type: string
      secp256k1:
        format: byte
        type: string
    title: PublicKey defines the keys available for use with Validators
    type: object
  tendermint.p2p.DefaultNodeInfo:
    properties:
      channels:
        format: byte
        type: string
      default_node_id:
        type: string
      listen_addr:
        type: string
      moniker:
        type: string
      network:
        type: string
      other:
        properties:
          rpc_address:
            type: string
          tx_index:
            type: string
        type: object
      protocol_version:
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
          p2p:
            format: uint64
            type: string
        type: object
      version:
        type: string
    type: object
  tendermint.p2p.DefaultNodeInfoOther:
    properties:
      rpc_address:
        type: string
      tx_index:
        type: string
    type: object
  tendermint.p2p.ProtocolVersion:
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
      p2p:
        format: uint64
        type: string
    type: object
  tendermint.types.ABCIParams:
    description: 'ABCIParams configure functionality specific to the Application Blockchain

      Interface.'
    properties:
      vote_extensions_enable_height:
        description: 'vote_extensions_enable_height configures the first height during
          which

          vote extensions will be enabled. During this specified height, and for all

          subsequent heights, precommit messages that do not contain valid extension

          data will be considered invalid. Prior to this height, vote extensions will

          not be used or accepted by validators on the network.


          Once enabled, vote extensions will be created by the application in

          ExtendVote, passed to the application for validation in VerifyVoteExtension

          and given to the application to use when proposing a block during

          PrepareProposal.'
        format: int64
        type: string
    type: object
  tendermint.types.Block:
    properties:
      data:
        properties:
          txs:
            description: 'Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We''re just agreeing on the order
              first.

              This means that block.AppHash does not include these txs.'
            items:
              format: byte
              type: string
            type: array
        title: Data contains the set of transactions included in the block
        type: object
      evidence:
        properties:
          evidence:
            items:
              properties:
                duplicate_vote_evidence:
                  description: 'DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting

                    votes.'
                  properties:
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                    validator_power:
                      format: int64
                      type: string
                    vote_a:
                      description: 'Vote represents a prevote or precommit vote from
                        validators for

                        consensus.'
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: 'Vote extension provided by the application.
                            Only valid for precommit

                            messages.'
                          format: byte
                          type: string
                        extension_signature:
                          description: 'Vote extension signature by the validator
                            if they participated in

                            consensus for the associated block.

                            Only valid for precommit messages.'
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: 'Vote signature by the validator if they participated
                            in consensus for the

                            associated block.'
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: "SignedMsgType is a type of signed message\
                            \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                          enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                    vote_b:
                      description: 'Vote represents a prevote or precommit vote from
                        validators for

                        consensus.'
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: 'Vote extension provided by the application.
                            Only valid for precommit

                            messages.'
                          format: byte
                          type: string
                        extension_signature:
                          description: 'Vote extension signature by the validator
                            if they participated in

                            consensus for the associated block.

                            Only valid for precommit messages.'
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: 'Vote signature by the validator if they participated
                            in consensus for the

                            associated block.'
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: "SignedMsgType is a type of signed message\
                            \ in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                          enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                  type: object
                light_client_attack_evidence:
                  description: 'LightClientAttackEvidence contains evidence of a set
                    of validators attempting

                    to mislead a light client.'
                  properties:
                    byzantine_validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: PublicKey defines the keys available for use with
                              Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                    common_height:
                      format: int64
                      type: string
                    conflicting_block:
                      properties:
                        signed_header:
                          properties:
                            commit:
                              description: 'Commit contains the evidence that a block
                                was committed by a set of

                                validators.'
                              properties:
                                block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                height:
                                  format: int64
                                  type: string
                                round:
                                  format: int32
                                  type: integer
                                signatures:
                                  items:
                                    description: CommitSig is a part of the Vote included
                                      in a Commit.
                                    properties:
                                      block_id_flag:
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        enum:
                                        - BLOCK_ID_FLAG_UNKNOWN
                                        - BLOCK_ID_FLAG_ABSENT
                                        - BLOCK_ID_FLAG_COMMIT
                                        - BLOCK_ID_FLAG_NIL
                                        title: BlockIdFlag indicates which BlockID
                                          the signature is for
                                        type: string
                                      signature:
                                        format: byte
                                        type: string
                                      timestamp:
                                        format: date-time
                                        type: string
                                      validator_address:
                                        format: byte
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            header:
                              description: Header defines the structure of a block
                                header.
                              properties:
                                app_hash:
                                  format: byte
                                  type: string
                                chain_id:
                                  type: string
                                consensus_hash:
                                  format: byte
                                  type: string
                                data_hash:
                                  format: byte
                                  type: string
                                evidence_hash:
                                  format: byte
                                  title: consensus info
                                  type: string
                                height:
                                  format: int64
                                  type: string
                                last_block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                last_commit_hash:
                                  format: byte
                                  title: hashes of block data
                                  type: string
                                last_results_hash:
                                  format: byte
                                  type: string
                                next_validators_hash:
                                  format: byte
                                  type: string
                                proposer_address:
                                  format: byte
                                  type: string
                                time:
                                  format: date-time
                                  type: string
                                validators_hash:
                                  format: byte
                                  title: hashes from the app output from the prev
                                    block
                                  type: string
                                version:
                                  description: 'Consensus captures the consensus rules
                                    for processing a block in the

                                    blockchain, including all blockchain data structures
                                    and the rules of the

                                    application''s state transition machine.'
                                  properties:
                                    app:
                                      format: uint64
                                      type: string
                                    block:
                                      format: uint64
                                      type: string
                                  title: basic block info
                                  type: object
                              type: object
                          type: object
                        validator_set:
                          properties:
                            proposer:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            total_voting_power:
                              format: int64
                              type: string
                            validators:
                              items:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                  type: object
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            format: byte
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            description: 'Consensus captures the consensus rules for processing a
              block in the

              blockchain, including all blockchain data structures and the rules of
              the

              application''s state transition machine.'
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            title: basic block info
            type: object
        type: object
      last_commit:
        description: 'Commit contains the evidence that a block was committed by a
          set of

          validators.'
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                  - BLOCK_ID_FLAG_UNKNOWN
                  - BLOCK_ID_FLAG_ABSENT
                  - BLOCK_ID_FLAG_COMMIT
                  - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  tendermint.types.BlockID:
    properties:
      hash:
        format: byte
        type: string
      part_set_header:
        properties:
          hash:
            format: byte
            type: string
          total:
            format: int64
            type: integer
        title: PartsetHeader
        type: object
    title: BlockID
    type: object
  tendermint.types.BlockIDFlag:
    default: BLOCK_ID_FLAG_UNKNOWN
    enum:
    - BLOCK_ID_FLAG_UNKNOWN
    - BLOCK_ID_FLAG_ABSENT
    - BLOCK_ID_FLAG_COMMIT
    - BLOCK_ID_FLAG_NIL
    title: BlockIdFlag indicates which BlockID the signature is for
    type: string
  tendermint.types.BlockParams:
    description: BlockParams contains limits on the block size.
    properties:
      max_bytes:
        format: int64
        title: 'Max block size, in bytes.

          Note: must be greater than 0'
        type: string
      max_gas:
        format: int64
        title: 'Max gas per block.

          Note: must be greater or equal to -1'
        type: string
    type: object
  tendermint.types.Commit:
    description: 'Commit contains the evidence that a block was committed by a set
      of

      validators.'
    properties:
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signatures:
        items:
          description: CommitSig is a part of the Vote included in a Commit.
          properties:
            block_id_flag:
              default: BLOCK_ID_FLAG_UNKNOWN
              enum:
              - BLOCK_ID_FLAG_UNKNOWN
              - BLOCK_ID_FLAG_ABSENT
              - BLOCK_ID_FLAG_COMMIT
              - BLOCK_ID_FLAG_NIL
              title: BlockIdFlag indicates which BlockID the signature is for
              type: string
            signature:
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            validator_address:
              format: byte
              type: string
          type: object
        type: array
    type: object
  tendermint.types.CommitSig:
    description: CommitSig is a part of the Vote included in a Commit.
    properties:
      block_id_flag:
        default: BLOCK_ID_FLAG_UNKNOWN
        enum:
        - BLOCK_ID_FLAG_UNKNOWN
        - BLOCK_ID_FLAG_ABSENT
        - BLOCK_ID_FLAG_COMMIT
        - BLOCK_ID_FLAG_NIL
        title: BlockIdFlag indicates which BlockID the signature is for
        type: string
      signature:
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      validator_address:
        format: byte
        type: string
    type: object
  tendermint.types.ConsensusParams:
    description: 'ConsensusParams contains consensus critical parameters that determine
      the

      validity of blocks.'
    properties:
      abci:
        description: 'ABCIParams configure functionality specific to the Application
          Blockchain

          Interface.'
        properties:
          vote_extensions_enable_height:
            description: 'vote_extensions_enable_height configures the first height
              during which

              vote extensions will be enabled. During this specified height, and for
              all

              subsequent heights, precommit messages that do not contain valid extension

              data will be considered invalid. Prior to this height, vote extensions
              will

              not be used or accepted by validators on the network.


              Once enabled, vote extensions will be created by the application in

              ExtendVote, passed to the application for validation in VerifyVoteExtension

              and given to the application to use when proposing a block during

              PrepareProposal.'
            format: int64
            type: string
        type: object
      block:
        description: BlockParams contains limits on the block size.
        properties:
          max_bytes:
            format: int64
            title: 'Max block size, in bytes.

              Note: must be greater than 0'
            type: string
          max_gas:
            format: int64
            title: 'Max gas per block.

              Note: must be greater or equal to -1'
            type: string
        type: object
      evidence:
        description: EvidenceParams determine how we handle evidence of malfeasance.
        properties:
          max_age_duration:
            description: 'Max age of evidence, in time.


              It should correspond with an app''s "unbonding period" or other similar

              mechanism for handling [Nothing-At-Stake

              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
            type: string
          max_age_num_blocks:
            description: 'Max age of evidence, in blocks.


              The basic formula for calculating this is: MaxAgeDuration / {average
              block

              time}.'
            format: int64
            type: string
          max_bytes:
            format: int64
            title: 'This sets the maximum size of total evidence in bytes that can
              be committed

              in a single block. and should fall comfortably under the max block bytes.

              Default is 1048576 or 1MB'
            type: string
        type: object
      validator:
        description: 'ValidatorParams restrict the public key types validators can
          use.

          NOTE: uses ABCI pubkey naming, not Amino names.'
        properties:
          pub_key_types:
            items:
              type: string
            type: array
        type: object
      version:
        description: VersionParams contains the ABCI application version.
        properties:
          app:
            format: uint64
            type: string
        type: object
    type: object
  tendermint.types.Data:
    properties:
      txs:
        description: 'Txs that will be applied by state @ block.Height+1.

          NOTE: not all txs here are valid.  We''re just agreeing on the order first.

          This means that block.AppHash does not include these txs.'
        items:
          format: byte
          type: string
        type: array
    title: Data contains the set of transactions included in the block
    type: object
  tendermint.types.DuplicateVoteEvidence:
    description: 'DuplicateVoteEvidence contains evidence of a validator signed two
      conflicting

      votes.'
    properties:
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
      validator_power:
        format: int64
        type: string
      vote_a:
        description: 'Vote represents a prevote or precommit vote from validators
          for

          consensus.'
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          extension:
            description: 'Vote extension provided by the application. Only valid for
              precommit

              messages.'
            format: byte
            type: string
          extension_signature:
            description: 'Vote extension signature by the validator if they participated
              in

              consensus for the associated block.

              Only valid for precommit messages.'
            format: byte
            type: string
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signature:
            description: 'Vote signature by the validator if they participated in
              consensus for the

              associated block.'
            format: byte
            type: string
          timestamp:
            format: date-time
            type: string
          type:
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: "SignedMsgType is a type of signed message in the consensus.\n\
              \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
            enum:
            - SIGNED_MSG_TYPE_UNKNOWN
            - SIGNED_MSG_TYPE_PREVOTE
            - SIGNED_MSG_TYPE_PRECOMMIT
            - SIGNED_MSG_TYPE_PROPOSAL
            type: string
          validator_address:
            format: byte
            type: string
          validator_index:
            format: int32
            type: integer
        type: object
      vote_b:
        description: 'Vote represents a prevote or precommit vote from validators
          for

          consensus.'
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          extension:
            description: 'Vote extension provided by the application. Only valid for
              precommit

              messages.'
            format: byte
            type: string
          extension_signature:
            description: 'Vote extension signature by the validator if they participated
              in

              consensus for the associated block.

              Only valid for precommit messages.'
            format: byte
            type: string
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signature:
            description: 'Vote signature by the validator if they participated in
              consensus for the

              associated block.'
            format: byte
            type: string
          timestamp:
            format: date-time
            type: string
          type:
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: "SignedMsgType is a type of signed message in the consensus.\n\
              \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
            enum:
            - SIGNED_MSG_TYPE_UNKNOWN
            - SIGNED_MSG_TYPE_PREVOTE
            - SIGNED_MSG_TYPE_PRECOMMIT
            - SIGNED_MSG_TYPE_PROPOSAL
            type: string
          validator_address:
            format: byte
            type: string
          validator_index:
            format: int32
            type: integer
        type: object
    type: object
  tendermint.types.Evidence:
    properties:
      duplicate_vote_evidence:
        description: 'DuplicateVoteEvidence contains evidence of a validator signed
          two conflicting

          votes.'
        properties:
          timestamp:
            format: date-time
            type: string
          total_voting_power:
            format: int64
            type: string
          validator_power:
            format: int64
            type: string
          vote_a:
            description: 'Vote represents a prevote or precommit vote from validators
              for

              consensus.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              extension:
                description: 'Vote extension provided by the application. Only valid
                  for precommit

                  messages.'
                format: byte
                type: string
              extension_signature:
                description: 'Vote extension signature by the validator if they participated
                  in

                  consensus for the associated block.

                  Only valid for precommit messages.'
                format: byte
                type: string
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signature:
                description: 'Vote signature by the validator if they participated
                  in consensus for the

                  associated block.'
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              type:
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: "SignedMsgType is a type of signed message in the consensus.\n\
                  \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                  \ Proposals"
                enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
                type: string
              validator_address:
                format: byte
                type: string
              validator_index:
                format: int32
                type: integer
            type: object
          vote_b:
            description: 'Vote represents a prevote or precommit vote from validators
              for

              consensus.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              extension:
                description: 'Vote extension provided by the application. Only valid
                  for precommit

                  messages.'
                format: byte
                type: string
              extension_signature:
                description: 'Vote extension signature by the validator if they participated
                  in

                  consensus for the associated block.

                  Only valid for precommit messages.'
                format: byte
                type: string
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signature:
                description: 'Vote signature by the validator if they participated
                  in consensus for the

                  associated block.'
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              type:
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: "SignedMsgType is a type of signed message in the consensus.\n\
                  \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                  \ Proposals"
                enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
                type: string
              validator_address:
                format: byte
                type: string
              validator_index:
                format: int32
                type: integer
            type: object
        type: object
      light_client_attack_evidence:
        description: 'LightClientAttackEvidence contains evidence of a set of validators
          attempting

          to mislead a light client.'
        properties:
          byzantine_validators:
            items:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            type: array
          common_height:
            format: int64
            type: string
          conflicting_block:
            properties:
              signed_header:
                properties:
                  commit:
                    description: 'Commit contains the evidence that a block was committed
                      by a set of

                      validators.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: CommitSig is a part of the Vote included in
                            a Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                              title: BlockIdFlag indicates which BlockID the signature
                                is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                type: object
              validator_set:
                properties:
                  proposer:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: PublicKey defines the keys available for use with Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  total_voting_power:
                    format: int64
                    type: string
                  validators:
                    items:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: PublicKey defines the keys available for use with
                            Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          timestamp:
            format: date-time
            type: string
          total_voting_power:
            format: int64
            type: string
        type: object
    type: object
  tendermint.types.EvidenceList:
    properties:
      evidence:
        items:
          properties:
            duplicate_vote_evidence:
              description: 'DuplicateVoteEvidence contains evidence of a validator
                signed two conflicting

                votes.'
              properties:
                timestamp:
                  format: date-time
                  type: string
                total_voting_power:
                  format: int64
                  type: string
                validator_power:
                  format: int64
                  type: string
                vote_a:
                  description: 'Vote represents a prevote or precommit vote from validators
                    for

                    consensus.'
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    extension:
                      description: 'Vote extension provided by the application. Only
                        valid for precommit

                        messages.'
                      format: byte
                      type: string
                    extension_signature:
                      description: 'Vote extension signature by the validator if they
                        participated in

                        consensus for the associated block.

                        Only valid for precommit messages.'
                      format: byte
                      type: string
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signature:
                      description: 'Vote signature by the validator if they participated
                        in consensus for the

                        associated block.'
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    type:
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: "SignedMsgType is a type of signed message in the\
                        \ consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                        \ Proposals"
                      enum:
                      - SIGNED_MSG_TYPE_UNKNOWN
                      - SIGNED_MSG_TYPE_PREVOTE
                      - SIGNED_MSG_TYPE_PRECOMMIT
                      - SIGNED_MSG_TYPE_PROPOSAL
                      type: string
                    validator_address:
                      format: byte
                      type: string
                    validator_index:
                      format: int32
                      type: integer
                  type: object
                vote_b:
                  description: 'Vote represents a prevote or precommit vote from validators
                    for

                    consensus.'
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    extension:
                      description: 'Vote extension provided by the application. Only
                        valid for precommit

                        messages.'
                      format: byte
                      type: string
                    extension_signature:
                      description: 'Vote extension signature by the validator if they
                        participated in

                        consensus for the associated block.

                        Only valid for precommit messages.'
                      format: byte
                      type: string
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signature:
                      description: 'Vote signature by the validator if they participated
                        in consensus for the

                        associated block.'
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    type:
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: "SignedMsgType is a type of signed message in the\
                        \ consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                        \ Proposals"
                      enum:
                      - SIGNED_MSG_TYPE_UNKNOWN
                      - SIGNED_MSG_TYPE_PREVOTE
                      - SIGNED_MSG_TYPE_PRECOMMIT
                      - SIGNED_MSG_TYPE_PROPOSAL
                      type: string
                    validator_address:
                      format: byte
                      type: string
                    validator_index:
                      format: int32
                      type: integer
                  type: object
              type: object
            light_client_attack_evidence:
              description: 'LightClientAttackEvidence contains evidence of a set of
                validators attempting

                to mislead a light client.'
              properties:
                byzantine_validators:
                  items:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: PublicKey defines the keys available for use with Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  type: array
                common_height:
                  format: int64
                  type: string
                conflicting_block:
                  properties:
                    signed_header:
                      properties:
                        commit:
                          description: 'Commit contains the evidence that a block
                            was committed by a set of

                            validators.'
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signatures:
                              items:
                                description: CommitSig is a part of the Vote included
                                  in a Commit.
                                properties:
                                  block_id_flag:
                                    default: BLOCK_ID_FLAG_UNKNOWN
                                    enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                    title: BlockIdFlag indicates which BlockID the
                                      signature is for
                                    type: string
                                  signature:
                                    format: byte
                                    type: string
                                  timestamp:
                                    format: date-time
                                    type: string
                                  validator_address:
                                    format: byte
                                    type: string
                                type: object
                              type: array
                          type: object
                        header:
                          description: Header defines the structure of a block header.
                          properties:
                            app_hash:
                              format: byte
                              type: string
                            chain_id:
                              type: string
                            consensus_hash:
                              format: byte
                              type: string
                            data_hash:
                              format: byte
                              type: string
                            evidence_hash:
                              format: byte
                              title: consensus info
                              type: string
                            height:
                              format: int64
                              type: string
                            last_block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            last_commit_hash:
                              format: byte
                              title: hashes of block data
                              type: string
                            last_results_hash:
                              format: byte
                              type: string
                            next_validators_hash:
                              format: byte
                              type: string
                            proposer_address:
                              format: byte
                              type: string
                            time:
                              format: date-time
                              type: string
                            validators_hash:
                              format: byte
                              title: hashes from the app output from the prev block
                              type: string
                            version:
                              description: 'Consensus captures the consensus rules
                                for processing a block in the

                                blockchain, including all blockchain data structures
                                and the rules of the

                                application''s state transition machine.'
                              properties:
                                app:
                                  format: uint64
                                  type: string
                                block:
                                  format: uint64
                                  type: string
                              title: basic block info
                              type: object
                          type: object
                      type: object
                    validator_set:
                      properties:
                        proposer:
                          properties:
                            address:
                              format: byte
                              type: string
                            proposer_priority:
                              format: int64
                              type: string
                            pub_key:
                              properties:
                                ed25519:
                                  format: byte
                                  type: string
                                secp256k1:
                                  format: byte
                                  type: string
                              title: PublicKey defines the keys available for use
                                with Validators
                              type: object
                            voting_power:
                              format: int64
                              type: string
                          type: object
                        total_voting_power:
                          format: int64
                          type: string
                        validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                timestamp:
                  format: date-time
                  type: string
                total_voting_power:
                  format: int64
                  type: string
              type: object
          type: object
        type: array
    type: object
  tendermint.types.EvidenceParams:
    description: EvidenceParams determine how we handle evidence of malfeasance.
    properties:
      max_age_duration:
        description: 'Max age of evidence, in time.


          It should correspond with an app''s "unbonding period" or other similar

          mechanism for handling [Nothing-At-Stake

          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
        type: string
      max_age_num_blocks:
        description: 'Max age of evidence, in blocks.


          The basic formula for calculating this is: MaxAgeDuration / {average block

          time}.'
        format: int64
        type: string
      max_bytes:
        format: int64
        title: 'This sets the maximum size of total evidence in bytes that can be
          committed

          in a single block. and should fall comfortably under the max block bytes.

          Default is 1048576 or 1MB'
        type: string
    type: object
  tendermint.types.Header:
    description: Header defines the structure of a block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        format: byte
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        description: 'Consensus captures the consensus rules for processing a block
          in the

          blockchain, including all blockchain data structures and the rules of the

          application''s state transition machine.'
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
        title: basic block info
        type: object
    type: object
  tendermint.types.LightBlock:
    properties:
      signed_header:
        properties:
          commit:
            description: 'Commit contains the evidence that a block was committed
              by a set of

              validators.'
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is
                        for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                description: 'Consensus captures the consensus rules for processing
                  a block in the

                  blockchain, including all blockchain data structures and the rules
                  of the

                  application''s state transition machine.'
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                title: basic block info
                type: object
            type: object
        type: object
      validator_set:
        properties:
          proposer:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          total_voting_power:
            format: int64
            type: string
          validators:
            items:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            type: array
        type: object
    type: object
  tendermint.types.LightClientAttackEvidence:
    description: 'LightClientAttackEvidence contains evidence of a set of validators
      attempting

      to mislead a light client.'
    properties:
      byzantine_validators:
        items:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
      common_height:
        format: int64
        type: string
      conflicting_block:
        properties:
          signed_header:
            properties:
              commit:
                description: 'Commit contains the evidence that a block was committed
                  by a set of

                  validators.'
                properties:
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  height:
                    format: int64
                    type: string
                  round:
                    format: int32
                    type: integer
                  signatures:
                    items:
                      description: CommitSig is a part of the Vote included in a Commit.
                      properties:
                        block_id_flag:
                          default: BLOCK_ID_FLAG_UNKNOWN
                          enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                          title: BlockIdFlag indicates which BlockID the signature
                            is for
                          type: string
                        signature:
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        validator_address:
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
              header:
                description: Header defines the structure of a block header.
                properties:
                  app_hash:
                    format: byte
                    type: string
                  chain_id:
                    type: string
                  consensus_hash:
                    format: byte
                    type: string
                  data_hash:
                    format: byte
                    type: string
                  evidence_hash:
                    format: byte
                    title: consensus info
                    type: string
                  height:
                    format: int64
                    type: string
                  last_block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  last_commit_hash:
                    format: byte
                    title: hashes of block data
                    type: string
                  last_results_hash:
                    format: byte
                    type: string
                  next_validators_hash:
                    format: byte
                    type: string
                  proposer_address:
                    format: byte
                    type: string
                  time:
                    format: date-time
                    type: string
                  validators_hash:
                    format: byte
                    title: hashes from the app output from the prev block
                    type: string
                  version:
                    description: 'Consensus captures the consensus rules for processing
                      a block in the

                      blockchain, including all blockchain data structures and the
                      rules of the

                      application''s state transition machine.'
                    properties:
                      app:
                        format: uint64
                        type: string
                      block:
                        format: uint64
                        type: string
                    title: basic block info
                    type: object
                type: object
            type: object
          validator_set:
            properties:
              proposer:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              total_voting_power:
                format: int64
                type: string
              validators:
                items:
                  properties:
                    address:
                      format: byte
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        ed25519:
                          format: byte
                          type: string
                        secp256k1:
                          format: byte
                          type: string
                      title: PublicKey defines the keys available for use with Validators
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        type: object
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.PartSetHeader:
    properties:
      hash:
        format: byte
        type: string
      total:
        format: int64
        type: integer
    title: PartsetHeader
    type: object
  tendermint.types.SignedHeader:
    properties:
      commit:
        description: 'Commit contains the evidence that a block was committed by a
          set of

          validators.'
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                  - BLOCK_ID_FLAG_UNKNOWN
                  - BLOCK_ID_FLAG_ABSENT
                  - BLOCK_ID_FLAG_COMMIT
                  - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            format: byte
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            description: 'Consensus captures the consensus rules for processing a
              block in the

              blockchain, including all blockchain data structures and the rules of
              the

              application''s state transition machine.'
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            title: basic block info
            type: object
        type: object
    type: object
  tendermint.types.SignedMsgType:
    default: SIGNED_MSG_TYPE_UNKNOWN
    description: "SignedMsgType is a type of signed message in the consensus.\n\n\
      \ - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
    enum:
    - SIGNED_MSG_TYPE_UNKNOWN
    - SIGNED_MSG_TYPE_PREVOTE
    - SIGNED_MSG_TYPE_PRECOMMIT
    - SIGNED_MSG_TYPE_PROPOSAL
    type: string
  tendermint.types.Validator:
    properties:
      address:
        format: byte
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        properties:
          ed25519:
            format: byte
            type: string
          secp256k1:
            format: byte
            type: string
        title: PublicKey defines the keys available for use with Validators
        type: object
      voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.ValidatorParams:
    description: 'ValidatorParams restrict the public key types validators can use.

      NOTE: uses ABCI pubkey naming, not Amino names.'
    properties:
      pub_key_types:
        items:
          type: string
        type: array
    type: object
  tendermint.types.ValidatorSet:
    properties:
      proposer:
        properties:
          address:
            format: byte
            type: string
          proposer_priority:
            format: int64
            type: string
          pub_key:
            properties:
              ed25519:
                format: byte
                type: string
              secp256k1:
                format: byte
                type: string
            title: PublicKey defines the keys available for use with Validators
            type: object
          voting_power:
            format: int64
            type: string
        type: object
      total_voting_power:
        format: int64
        type: string
      validators:
        items:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  tendermint.types.VersionParams:
    description: VersionParams contains the ABCI application version.
    properties:
      app:
        format: uint64
        type: string
    type: object
  tendermint.types.Vote:
    description: 'Vote represents a prevote or precommit vote from validators for

      consensus.'
    properties:
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      extension:
        description: 'Vote extension provided by the application. Only valid for precommit

          messages.'
        format: byte
        type: string
      extension_signature:
        description: 'Vote extension signature by the validator if they participated
          in

          consensus for the associated block.

          Only valid for precommit messages.'
        format: byte
        type: string
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signature:
        description: 'Vote signature by the validator if they participated in consensus
          for the

          associated block.'
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      type:
        default: SIGNED_MSG_TYPE_UNKNOWN
        description: "SignedMsgType is a type of signed message in the consensus.\n\
          \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
        enum:
        - SIGNED_MSG_TYPE_UNKNOWN
        - SIGNED_MSG_TYPE_PREVOTE
        - SIGNED_MSG_TYPE_PRECOMMIT
        - SIGNED_MSG_TYPE_PROPOSAL
        type: string
      validator_address:
        format: byte
        type: string
      validator_index:
        format: int32
        type: integer
    type: object
  tendermint.version.Consensus:
    description: 'Consensus captures the consensus rules for processing a block in
      the

      blockchain, including all blockchain data structures and the rules of the

      application''s state transition machine.'
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
    type: object
info:
  description: A REST interface for state queries.
  title: Dyson Protocol - gRPC Gateway docs
  version: 1.0.0
paths:
  /cosmos.auth.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateAuthParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/auth parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                max_memo_characters:
                  format: uint64
                  type: string
                sig_verify_cost_ed25519:
                  format: uint64
                  type: string
                sig_verify_cost_secp256k1:
                  format: uint64
                  type: string
                tx_sig_limit:
                  format: uint64
                  type: string
                tx_size_cost_per_byte:
                  format: uint64
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a (governance) operation for updating the x/auth

        module parameters. The authority defaults to the x/gov module account.'
      tags:
      - Msg
  /cosmos.bank.v1beta1.Msg/MultiSend:
    post:
      operationId: Msg_MultiSend
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgMultiSend represents an arbitrary multi-in, multi-out send
            message.
          properties:
            inputs:
              description: 'Inputs, despite being `repeated`, only allows one sender
                input. This is

                checked in MsgMultiSend''s ValidateBasic.'
              items:
                description: Input models transaction input.
                properties:
                  address:
                    type: string
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            outputs:
              items:
                description: Output models transaction outputs.
                properties:
                  address:
                    type: string
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgMultiSendResponse defines the Msg/MultiSend response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'MultiSend defines a method for sending coins from some accounts to
        other

        accounts.'
      tags:
      - Msg
  /cosmos.bank.v1beta1.Msg/Send:
    post:
      operationId: Msg_BankSend
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgSend represents a message to send coins from one account
            to another.
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            from_address:
              type: string
            to_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSendResponse defines the Msg/Send response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Send defines a method for sending coins from one account to another

        account.'
      tags:
      - Msg
  /cosmos.bank.v1beta1.Msg/SetSendEnabled:
    post:
      operationId: Msg_SetSendEnabled
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSetSendEnabled is the Msg/SetSendEnabled request type.


            Only entries to add/update/delete need to be included.

            Existing SendEnabled entries that are not included in this

            message are left unchanged.'
          properties:
            authority:
              description: authority is the address that controls the module.
              type: string
            send_enabled:
              description: send_enabled is the list of entries to add or update.
              items:
                description: 'SendEnabled maps coin denom to a send_enabled status
                  (whether a denom is

                  sendable).'
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                type: object
              type: array
            use_default_for:
              description: 'use_default_for is a list of denoms that should use the

                params.default_send_enabled value. Denoms listed here will have their

                SendEnabled entries deleted. If a denom is included that doesn''t
                have a

                SendEnabled entry, it will be ignored.'
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSetSendEnabledResponse defines the Msg/SetSendEnabled
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SetSendEnabled is a governance operation for setting the SendEnabled
        flag

        on any number of Denoms. Only the entries to add or update should be

        included. Entries that already exist in the store, but that aren''t

        included in this message, will be left unchanged.'
      tags:
      - Msg
  /cosmos.bank.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateBankParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/bank parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                default_send_enabled:
                  type: boolean
                send_enabled:
                  description: 'Deprecated: Use of SendEnabled in params is deprecated.

                    For genesis, use the newly added send_enabled field in the genesis
                    object.

                    Storage, lookup, and manipulation of this information is now in
                    the keeper.


                    As of cosmos-sdk 0.47, this only exists for backwards compatibility
                    of

                    genesis files.'
                  items:
                    description: 'SendEnabled maps coin denom to a send_enabled status
                      (whether a denom is

                      sendable).'
                    properties:
                      denom:
                        type: string
                      enabled:
                        type: boolean
                    type: object
                  type: array
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/bank
        module

        parameters. The authority is defined in the keeper.'
      tags:
      - Msg
  /cosmos.circuit.v1.Msg/AuthorizeCircuitBreaker:
    post:
      operationId: Msg_AuthorizeCircuitBreaker
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker
            request

            type.'
          properties:
            grantee:
              description: grantee is the account authorized with the provided permissions.
              type: string
            granter:
              description: 'granter is the granter of the circuit breaker permissions
                and must have

                LEVEL_SUPER_ADMIN.'
              type: string
            permissions:
              description: 'permissions are the circuit breaker permissions that the
                grantee receives.

                These will overwrite any existing permissions. LEVEL_NONE_UNSPECIFIED
                can

                be specified to revoke all permissions.'
              properties:
                level:
                  default: LEVEL_NONE_UNSPECIFIED
                  description: level is the level of permissions granted to this account.
                  enum:
                  - LEVEL_NONE_UNSPECIFIED
                  - LEVEL_SOME_MSGS
                  - LEVEL_ALL_MSGS
                  - LEVEL_SUPER_ADMIN
                  type: string
                limit_type_urls:
                  description: 'limit_type_urls is used with LEVEL_SOME_MSGS to limit
                    the lists of Msg type

                    URLs that the account can trip. It is an error to use limit_type_urls
                    with

                    a level other than LEVEL_SOME_MSGS.'
                  items:
                    type: string
                  type: array
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgAuthorizeCircuitBreakerResponse defines the Msg/AuthorizeCircuitBreaker

              response type.'
            properties:
              success:
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'AuthorizeCircuitBreaker allows a super-admin to grant (or revoke)
        another

        account''s circuit breaker permissions.'
      tags:
      - Msg
  /cosmos.circuit.v1.Msg/ResetCircuitBreaker:
    post:
      operationId: Msg_ResetCircuitBreaker
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker
            request type.
          properties:
            authority:
              description: authority is the account authorized to trip or reset the
                circuit breaker.
              type: string
            msg_type_urls:
              description: 'msg_type_urls specifies a list of Msg type URLs to resume
                processing. If

                it is left empty all Msg processing for type URLs that the account
                is

                authorized to trip will resume.'
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgResetCircuitBreakerResponse defines the Msg/ResetCircuitBreaker
              response

              type.'
            properties:
              success:
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ResetCircuitBreaker resumes processing of Msg''s in the state machine
        that

        have been been paused using TripCircuitBreaker.'
      tags:
      - Msg
  /cosmos.circuit.v1.Msg/TripCircuitBreaker:
    post:
      operationId: Msg_TripCircuitBreaker
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request
            type.
          properties:
            authority:
              description: authority is the account authorized to trip the circuit
                breaker.
              type: string
            msg_type_urls:
              description: 'msg_type_urls specifies a list of type URLs to immediately
                stop processing.

                IF IT IS LEFT EMPTY, ALL MSG PROCESSING WILL STOP IMMEDIATELY.

                This value is validated against the authority''s permissions and if
                the

                authority does not have permissions to trip the specified msg type
                URLs

                (or all URLs), the operation will fail.'
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgTripCircuitBreakerResponse defines the Msg/TripCircuitBreaker
              response

              type.'
            properties:
              success:
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TripCircuitBreaker pauses processing of Msg's in the state machine.
      tags:
      - Msg
  /cosmos.consensus.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateConsensusParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            abci:
              description: 'ABCIParams configure functionality specific to the Application
                Blockchain

                Interface.'
              properties:
                vote_extensions_enable_height:
                  description: 'vote_extensions_enable_height configures the first
                    height during which

                    vote extensions will be enabled. During this specified height,
                    and for all

                    subsequent heights, precommit messages that do not contain valid
                    extension

                    data will be considered invalid. Prior to this height, vote extensions
                    will

                    not be used or accepted by validators on the network.


                    Once enabled, vote extensions will be created by the application
                    in

                    ExtendVote, passed to the application for validation in VerifyVoteExtension

                    and given to the application to use when proposing a block during

                    PrepareProposal.'
                  format: int64
                  type: string
              type: object
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            block:
              description: 'params defines the x/consensus parameters to update.

                VersionsParams is not included in this Msg because it is tracked

                separarately in x/upgrade.


                NOTE: All parameters must be supplied.'
              properties:
                max_bytes:
                  format: int64
                  title: 'Max block size, in bytes.

                    Note: must be greater than 0'
                  type: string
                max_gas:
                  format: int64
                  title: 'Max gas per block.

                    Note: must be greater or equal to -1'
                  type: string
              type: object
            evidence:
              description: EvidenceParams determine how we handle evidence of malfeasance.
              properties:
                max_age_duration:
                  description: 'Max age of evidence, in time.


                    It should correspond with an app''s "unbonding period" or other
                    similar

                    mechanism for handling [Nothing-At-Stake

                    attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
                  type: string
                max_age_num_blocks:
                  description: 'Max age of evidence, in blocks.


                    The basic formula for calculating this is: MaxAgeDuration / {average
                    block

                    time}.'
                  format: int64
                  type: string
                max_bytes:
                  format: int64
                  title: 'This sets the maximum size of total evidence in bytes that
                    can be committed

                    in a single block. and should fall comfortably under the max block
                    bytes.

                    Default is 1048576 or 1MB'
                  type: string
              type: object
            validator:
              description: 'ValidatorParams restrict the public key types validators
                can use.

                NOTE: uses ABCI pubkey naming, not Amino names.'
              properties:
                pub_key_types:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/consensus

        module parameters. The authority is defined in the keeper.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/CommunityPoolSpend:
    post:
      description: 'WARNING: This method will fail if an external community pool is
        used.'
      operationId: Msg_CommunityPoolSpend
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgCommunityPoolSpend defines a message for sending tokens
            from the community

            pool to another account. This message is typically executed via a governance

            proposal with the governance module being the executing authority.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            recipient:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgCommunityPoolSpendResponse defines the response to executing
              a

              MsgCommunityPoolSpend message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'CommunityPoolSpend defines a governance operation for sending tokens
        from

        the community pool in the x/distribution module to another account, which

        could be the governance module itself. The authority is defined in the

        keeper.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/DepositValidatorRewardsPool:
    post:
      operationId: Msg_DepositValidatorRewardsPool
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'DepositValidatorRewardsPool defines the request structure
            to provide

            additional rewards to delegators from a specific validator.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              type: string
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgDepositValidatorRewardsPoolResponse defines the response
              to executing a

              MsgDepositValidatorRewardsPool message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DepositValidatorRewardsPool defines a method to provide additional
        rewards

        to delegators to a specific validator.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/FundCommunityPool:
    post:
      description: 'WARNING: This method will fail if an external community pool is
        used.'
      operationId: Msg_FundCommunityPool
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgFundCommunityPool allows an account to directly

            fund the community pool.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'FundCommunityPool defines a method to allow an account to directly

        fund the community pool.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/SetWithdrawAddress:
    post:
      operationId: Msg_SetWithdrawAddress
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSetWithdrawAddress sets the withdraw address for

            a delegator (or validator self-delegation).'
          properties:
            delegator_address:
              type: string
            withdraw_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SetWithdrawAddress defines a method to change the withdraw address

        for a delegator (or validator self-delegation).'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateDistributionParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/distribution parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                base_proposer_reward:
                  description: 'Deprecated: The base_proposer_reward field is deprecated
                    and is no longer

                    used in the x/distribution module''s reward mechanism.'
                  type: string
                bonus_proposer_reward:
                  description: 'Deprecated: The bonus_proposer_reward field is deprecated
                    and is no longer

                    used in the x/distribution module''s reward mechanism.'
                  type: string
                community_tax:
                  type: string
                withdraw_addr_enabled:
                  type: boolean
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/distribution

        module parameters. The authority is defined in the keeper.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/WithdrawDelegatorReward:
    post:
      operationId: Msg_WithdrawDelegatorReward
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgWithdrawDelegatorReward represents delegation withdrawal
            to a delegator

            from a single validator.'
          properties:
            delegator_address:
              type: string
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward

              response type.'
            properties:
              amount:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'WithdrawDelegatorReward defines a method to withdraw rewards of delegator

        from a single validator.'
      tags:
      - Msg
  /cosmos.distribution.v1beta1.Msg/WithdrawValidatorCommission:
    post:
      operationId: Msg_WithdrawValidatorCommission
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgWithdrawValidatorCommission withdraws the full commission
            to the validator

            address.'
          properties:
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgWithdrawValidatorCommissionResponse defines the

              Msg/WithdrawValidatorCommission response type.'
            properties:
              amount:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'WithdrawValidatorCommission defines a method to withdraw the

        full commission to the validator address.'
      tags:
      - Msg
  /cosmos.evidence.v1beta1.Msg/SubmitEvidence:
    post:
      operationId: Msg_SubmitEvidence
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSubmitEvidence represents a message that supports submitting
            arbitrary

            Evidence of misbehavior such as equivocation or counterfactual signing.'
          properties:
            evidence:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            submitter:
              description: submitter is the signer account address of evidence.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence
              response type.
            properties:
              hash:
                description: hash defines the hash of the evidence.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SubmitEvidence submits an arbitrary Evidence of misbehavior such as

        equivocation or counterfactual signing.'
      tags:
      - Msg
  /cosmos.feegrant.v1beta1.Msg/GrantAllowance:
    post:
      operationId: Msg_GrantAllowance
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgGrantAllowance adds permission for Grantee to spend up
            to Allowance

            of fees from the account of Granter.'
          properties:
            allowance:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            grantee:
              description: 'grantee is the address of the user being granted an allowance
                of another

                user''s funds.'
              type: string
            granter:
              description: granter is the address of the user granting an allowance
                of their funds.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'GrantAllowance grants fee allowance to the grantee on the granter''s

        account with the provided expiration time.'
      tags:
      - Msg
  /cosmos.feegrant.v1beta1.Msg/PruneAllowances:
    post:
      operationId: Msg_PruneAllowances
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgPruneAllowances prunes expired fee allowances.
          properties:
            pruner:
              description: pruner is the address of the user pruning expired allowances.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'PruneAllowances prunes expired fee allowances, currently up to 75
        at a

        time.'
      tags:
      - Msg
  /cosmos.feegrant.v1beta1.Msg/RevokeAllowance:
    post:
      operationId: Msg_RevokeAllowance
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgRevokeAllowance removes any existing Allowance from Granter
            to Grantee.
          properties:
            grantee:
              description: 'grantee is the address of the user being granted an allowance
                of another

                user''s funds.'
              type: string
            granter:
              description: granter is the address of the user granting an allowance
                of their funds.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'RevokeAllowance revokes any fee allowance of granter''s account that

        has been granted to the grantee.'
      tags:
      - Msg
  /cosmos.gov.v1.Msg/CancelProposal:
    post:
      operationId: Msg_CancelProposal
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgCancelProposal is the Msg/CancelProposal request type.
          properties:
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            proposer:
              description: proposer is the account address of the proposer.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgCancelProposalResponse defines the response structure
              for executing a

              MsgCancelProposal message.'
            properties:
              canceled_height:
                description: canceled_height defines the block height at which the
                  proposal is canceled.
                format: uint64
                type: string
              canceled_time:
                description: canceled_time is the time when proposal is canceled.
                format: date-time
                type: string
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CancelProposal defines a method to cancel governance proposal
      tags:
      - Msg
  /cosmos.gov.v1.Msg/Deposit:
    post:
      operationId: Msg_GovV1Deposit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgDeposit defines a message to submit a deposit to an existing
            proposal.
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgDepositResponse defines the Msg/Deposit response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Deposit defines a method to add deposit on a specific proposal.
      tags:
      - Msg
  /cosmos.gov.v1.Msg/ExecLegacyContent:
    post:
      operationId: Msg_ExecLegacyContent
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgExecLegacyContent is used to wrap the legacy content field
            into a message.

            This ensures backwards compatibility with v1beta1.MsgSubmitProposal.'
          properties:
            authority:
              description: authority must be the gov module address.
              type: string
            content:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ExecLegacyContent defines a Msg to be in included in a MsgSubmitProposal

        to execute a legacy content-based proposal.'
      tags:
      - Msg
  /cosmos.gov.v1.Msg/SubmitProposal:
    post:
      operationId: Msg_GovV1SubmitProposal
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSubmitProposal defines an sdk.Msg type that supports submitting
            arbitrary

            proposal Content.'
          properties:
            expedited:
              title: expedited defines if the proposal is expedited or not
              type: boolean
            initial_deposit:
              description: 'initial_deposit is the deposit value that must be paid
                at proposal

                submission.'
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            messages:
              description: messages are the arbitrary messages to be executed if proposal
                passes.
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            metadata:
              description: metadata is any arbitrary metadata attached to the proposal.
              type: string
            proposer:
              description: proposer is the account address of the proposer.
              type: string
            summary:
              title: summary is the summary of the proposal
              type: string
            title:
              description: title is the title of the proposal.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSubmitProposalResponse defines the Msg/SubmitProposal
              response type.
            properties:
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SubmitProposal defines a method to create new proposal given the messages.
      tags:
      - Msg
  /cosmos.gov.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateGovV1Params
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/gov parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                burn_proposal_deposit_prevote:
                  title: burn deposits if the proposal does not enter voting period
                  type: boolean
                burn_vote_quorum:
                  title: burn deposits if a proposal does not meet quorum
                  type: boolean
                burn_vote_veto:
                  title: burn deposits if quorum with vote type no_veto is met
                  type: boolean
                expedited_min_deposit:
                  description: Minimum expedited deposit for a proposal to enter voting
                    period.
                  items:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                expedited_threshold:
                  description: 'Minimum proportion of Yes votes for proposal to pass.
                    Default value: 0.67.'
                  type: string
                expedited_voting_period:
                  description: Duration of the voting period of an expedited proposal.
                  type: string
                max_deposit_period:
                  description: 'Maximum period for Atom holders to deposit on a proposal.
                    Initial value: 2

                    months.'
                  type: string
                min_deposit:
                  description: Minimum deposit for a proposal to enter voting period.
                  items:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  type: array
                min_deposit_ratio:
                  description: 'The ratio representing the proportion of the deposit
                    value minimum that

                    must be met when making a deposit. Default value: 0.01. Meaning
                    that for a

                    chain with a min_deposit of 100stake, a deposit of 1stake would
                    be

                    required.'
                  type: string
                min_initial_deposit_ratio:
                  description: "The ratio representing the proportion of the deposit\
                    \ value that must be\n paid at proposal submission."
                  type: string
                proposal_cancel_dest:
                  description: 'The address which will receive (proposal_cancel_ratio
                    * deposit) proposal

                    deposits. If empty, the (proposal_cancel_ratio * deposit) proposal
                    deposits

                    will be burned.'
                  type: string
                proposal_cancel_ratio:
                  description: 'The cancel ratio which will not be returned back to
                    the depositors when a

                    proposal is cancelled.'
                  type: string
                quorum:
                  description: "Minimum percentage of total stake needed to vote for\
                    \ a result to be\n considered valid."
                  type: string
                threshold:
                  description: 'Minimum proportion of Yes votes for proposal to pass.
                    Default value: 0.5.'
                  type: string
                veto_threshold:
                  description: "Minimum value of Veto votes to Total votes ratio for\
                    \ proposal to be\n vetoed. Default value: 1/3."
                  type: string
                voting_period:
                  description: Duration of the voting period.
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/gov
        module

        parameters. The authority is defined in the keeper.'
      tags:
      - Msg
  /cosmos.gov.v1.Msg/Vote:
    post:
      operationId: Msg_GovV1Vote
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgVote defines a message to cast a vote.
          properties:
            metadata:
              description: metadata is any arbitrary metadata attached to the Vote.
              type: string
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: option defines the vote option.
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address for the proposal.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgVoteResponse defines the Msg/Vote response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Vote defines a method to add a vote on a specific proposal.
      tags:
      - Msg
  /cosmos.gov.v1.Msg/VoteWeighted:
    post:
      operationId: Msg_GovV1VoteWeighted
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgVoteWeighted defines a message to cast a vote.
          properties:
            metadata:
              description: metadata is any arbitrary metadata attached to the VoteWeighted.
              type: string
            options:
              description: options defines the weighted vote options.
              items:
                description: WeightedVoteOption defines a unit of vote for vote split.
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not
                      contain duplicate vote

                      options.'
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote
                      option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address for the proposal.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'VoteWeighted defines a method to add a weighted vote on a specific

        proposal.'
      tags:
      - Msg
  /cosmos.gov.v1beta1.Msg/Deposit:
    post:
      operationId: Msg_GovDeposit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgDeposit defines a message to submit a deposit to an existing
            proposal.
          properties:
            amount:
              description: amount to be deposited by depositor.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              description: depositor defines the deposit addresses from the proposals.
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgDepositResponse defines the Msg/Deposit response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Deposit defines a method to add deposit on a specific proposal.
      tags:
      - Msg
  /cosmos.gov.v1beta1.Msg/SubmitProposal:
    post:
      operationId: Msg_GovSubmitProposal
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSubmitProposal defines an sdk.Msg type that supports submitting
            arbitrary

            proposal Content.'
          properties:
            content:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            initial_deposit:
              description: 'initial_deposit is the deposit value that must be paid
                at proposal

                submission.'
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            proposer:
              description: proposer is the account address of the proposer.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSubmitProposalResponse defines the Msg/SubmitProposal
              response type.
            properties:
              proposal_id:
                description: proposal_id defines the unique id of the proposal.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SubmitProposal defines a method to create new proposal given a content.
      tags:
      - Msg
  /cosmos.gov.v1beta1.Msg/Vote:
    post:
      operationId: Msg_GovVote
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgVote defines a message to cast a vote.
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: option defines the vote option.
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address for the proposal.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgVoteResponse defines the Msg/Vote response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Vote defines a method to add a vote on a specific proposal.
      tags:
      - Msg
  /cosmos.gov.v1beta1.Msg/VoteWeighted:
    post:
      operationId: Msg_GovVoteWeighted
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgVoteWeighted defines a message to cast a vote.
          properties:
            options:
              description: options defines the weighted vote options.
              items:
                description: WeightedVoteOption defines a unit of vote for vote split.
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'option defines the valid vote options, it must not
                      contain duplicate vote

                      options.'
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    description: weight is the vote weight associated with the vote
                      option.
                    type: string
                type: object
              type: array
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            voter:
              description: voter is the voter address for the proposal.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'VoteWeighted defines a method to add a weighted vote on a specific

        proposal.'
      tags:
      - Msg
  /cosmos.mint.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateMintParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/mint parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                blocks_per_year:
                  format: uint64
                  title: expected blocks per year
                  type: string
                goal_bonded:
                  title: goal of percent bonded atoms
                  type: string
                inflation_max:
                  title: maximum inflation rate
                  type: string
                inflation_min:
                  title: minimum inflation rate
                  type: string
                inflation_rate_change:
                  title: maximum annual change in inflation rate
                  type: string
                mint_denom:
                  title: type of coin to mint
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/mint
        module

        parameters. The authority is defaults to the x/gov module account.'
      tags:
      - Msg
  /cosmos.nft.v1beta1.Msg/Send:
    post:
      operationId: Msg_NftSend
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSend represents a message to send a nft from one account
            to another

            account.'
          properties:
            class_id:
              title: 'class_id defines the unique identifier of the nft classification,
                similar

                to the contract address of ERC721'
              type: string
            id:
              title: id defines the unique identification of nft
              type: string
            receiver:
              title: receiver is the receiver address of nft
              type: string
            sender:
              title: sender is the address of the owner of nft
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSendResponse defines the Msg/Send response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Send defines a method to send a nft from one account to another account.
      tags:
      - Msg
  /cosmos.slashing.v1beta1.Msg/Unjail:
    post:
      operationId: Msg_Unjail
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            validator_addr:
              type: string
          title: MsgUnjail defines the Msg/Unjail request type
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgUnjailResponse defines the Msg/Unjail response type
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Unjail defines a method for unjailing a jailed validator, thus returning

        them into the bonded validator set, so they can begin receiving provisions

        and rewards again.'
      tags:
      - Msg
  /cosmos.slashing.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateSlashingParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/slashing parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                downtime_jail_duration:
                  type: string
                min_signed_per_window:
                  format: byte
                  type: string
                signed_blocks_window:
                  format: int64
                  type: string
                slash_fraction_double_sign:
                  format: byte
                  type: string
                slash_fraction_downtime:
                  format: byte
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/slashing

        module parameters. The authority defaults to the x/gov module account.'
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/BeginRedelegate:
    post:
      operationId: Msg_BeginRedelegate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgBeginRedelegate defines a SDK message for performing a
            redelegation

            of coins from a delegator and source validator to a destination validator.'
          properties:
            amount:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegator_address:
              type: string
            validator_dst_address:
              type: string
            validator_src_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate
              response type.
            properties:
              completion_time:
                format: date-time
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'BeginRedelegate defines a method for performing a redelegation

        of coins from a delegator and source validator to a destination validator.'
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/CancelUnbondingDelegation:
    post:
      operationId: Msg_CancelUnbondingDelegation
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            amount:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              title: amount is always less than or equal to unbonding delegation entry
                balance
              type: object
            creation_height:
              description: creation_height is the height which the unbonding took
                place.
              format: int64
              type: string
            delegator_address:
              type: string
            validator_address:
              type: string
          title: 'MsgCancelUnbondingDelegation defines the SDK message for performing
            a cancel

            unbonding delegation for delegator'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgCancelUnbondingDelegationResponse
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'CancelUnbondingDelegation defines a method for performing canceling
        the

        unbonding delegation and delegate back to previous validator.'
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/CreateValidator:
    post:
      operationId: Msg_CreateValidator
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgCreateValidator defines a SDK message for creating a new
            validator.
          properties:
            commission:
              description: 'CommissionRates defines the initial commission rates to
                be used for creating

                a validator.'
              properties:
                max_change_rate:
                  description: 'max_change_rate defines the maximum daily increase
                    of the validator

                    commission, as a fraction.'
                  type: string
                max_rate:
                  description: 'max_rate defines the maximum commission rate which
                    validator can ever

                    charge, as a fraction.'
                  type: string
                rate:
                  description: rate is the commission rate charged to delegators,
                    as a fraction.
                  type: string
              type: object
            delegator_address:
              description: 'Deprecated: Use of Delegator Address in MsgCreateValidator
                is deprecated.

                The validator address bytes and delegator address bytes refer to the
                same

                account while creating validator (defer only in bech32 notation).'
              type: string
            description:
              description: Description defines a validator description.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            min_self_delegation:
              type: string
            pubkey:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            validator_address:
              type: string
            value:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgCreateValidatorResponse defines the Msg/CreateValidator
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CreateValidator defines a method for creating a new validator.
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/Delegate:
    post:
      operationId: Msg_Delegate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgDelegate defines a SDK message for performing a delegation
            of coins

            from a delegator to a validator.'
          properties:
            amount:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegator_address:
              type: string
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgDelegateResponse defines the Msg/Delegate response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Delegate defines a method for performing a delegation of coins

        from a delegator to a validator.'
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/EditValidator:
    post:
      operationId: Msg_EditValidator
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgEditValidator defines a SDK message for editing an existing
            validator.
          properties:
            commission_rate:
              title: 'We pass a reference to the new commission rate and min self
                delegation as

                it''s not mandatory to update. If not updated, the deserialized rate
                will be

                zero with no way to distinguish if an update was intended.

                REF: #2373'
              type: string
            description:
              description: Description defines a validator description.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            min_self_delegation:
              type: string
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgEditValidatorResponse defines the Msg/EditValidator response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: EditValidator defines a method for editing an existing validator.
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/Undelegate:
    post:
      operationId: Msg_Undelegate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgUndelegate defines a SDK message for performing an undelegation
            from a

            delegate and a validator.'
          properties:
            amount:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegator_address:
              type: string
            validator_address:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUndelegateResponse defines the Msg/Undelegate response
              type.
            properties:
              amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                title: amount returns the amount of undelegated coins
                type: object
              completion_time:
                format: date-time
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Undelegate defines a method for performing an undelegation from a

        delegate and a validator.'
      tags:
      - Msg
  /cosmos.staking.v1beta1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateStakingParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/staking parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                bond_denom:
                  description: bond_denom defines the bondable coin denomination.
                  type: string
                historical_entries:
                  description: historical_entries is the number of historical entries
                    to persist.
                  format: int64
                  type: integer
                max_entries:
                  description: 'max_entries is the max entries for either unbonding
                    delegation or

                    redelegation (per pair/trio).'
                  format: int64
                  type: integer
                max_validators:
                  description: max_validators is the maximum number of validators.
                  format: int64
                  type: integer
                min_commission_rate:
                  title: 'min_commission_rate is the chain-wide minimum commission
                    rate that a

                    validator can charge their delegators'
                  type: string
                unbonding_time:
                  description: unbonding_time is the time duration of unbonding.
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines an operation for updating the x/staking module

        parameters.'
      tags:
      - Msg
  /cosmos.upgrade.v1beta1.Msg/CancelUpgrade:
    post:
      operationId: Msg_CancelUpgrade
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgCancelUpgrade is the Msg/CancelUpgrade request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgCancelUpgradeResponse is the Msg/CancelUpgrade response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'CancelUpgrade is a governance operation for cancelling a previously

        approved software upgrade.'
      tags:
      - Msg
  /cosmos.upgrade.v1beta1.Msg/SoftwareUpgrade:
    post:
      operationId: Msg_SoftwareUpgrade
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            plan:
              description: plan is the upgrade plan.
              properties:
                height:
                  description: The height at which the upgrade must be performed.
                  format: int64
                  type: string
                info:
                  title: 'Any application specific upgrade info to be included on-chain

                    such as a git commit that validators could automatically upgrade
                    to'
                  type: string
                name:
                  description: 'Sets the name for the upgrade. This name will be used
                    by the upgraded

                    version of the software to apply any special "on-upgrade" commands
                    during

                    the first BeginBlock method after the upgrade is applied. It is
                    also used

                    to detect whether a software version can handle a given upgrade.
                    If no

                    upgrade handler with this name has been set in the software, it
                    will be

                    assumed that the software is out-of-date when the upgrade Time
                    or Height is

                    reached and the software will exit.'
                  type: string
                time:
                  description: 'Deprecated: Time based upgrades have been deprecated.
                    Time based upgrade

                    logic has been removed from the SDK. If this field is not empty,
                    an error

                    will be thrown.'
                  format: date-time
                  type: string
                upgraded_client_state:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SoftwareUpgrade is a governance operation for initiating a software

        upgrade.'
      tags:
      - Msg
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      operationId: Query_AccountInfo
      parameters:
      - description: address is the account address string.
        in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryAccountInfoResponse is the Query/AccountInfo response
              type.
            properties:
              info:
                description: info is the account info which is represented by BaseAccount.
                properties:
                  account_number:
                    format: uint64
                    type: string
                  address:
                    type: string
                  pub_key:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  sequence:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AccountInfo queries account info which is common to all account types.
      tags:
      - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_Accounts
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryAccountsResponse is the response type for the Query/Accounts
              RPC method.
            properties:
              accounts:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                title: accounts are the existing accounts
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Accounts returns all the existing accounts.
      tags:
      - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      operationId: Query_Account
      parameters:
      - description: address defines the address to query for.
        in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryAccountResponse is the response type for the Query/Account
              RPC method.
            properties:
              account:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account details based on address.
      tags:
      - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      operationId: Query_AccountAddressByID
      parameters:
      - description: 'Deprecated, use account_id instead


          id is the account number of the address to be queried. This field

          should have been an uint64 (like all account numbers), and will be

          updated to uint64 in a future version of the auth query.'
        format: int64
        in: path
        name: id
        required: true
        type: string
      - description: account_id is the account number of the address to be queried.
        format: uint64
        in: query
        name: account_id
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              account_address:
                type: string
            title: 'QueryAccountAddressByIDResponse is the response type for AccountAddressByID

              rpc method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AccountAddressByID returns account address based on account number.
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      operationId: Query_Bech32Prefix
      responses:
        '200':
          description: A successful response.
          schema:
            description: Bech32PrefixResponse is the response type for Bech32Prefix
              rpc method.
            properties:
              bech32_prefix:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Bech32Prefix queries bech32Prefix
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      operationId: Query_AddressBytesToString
      parameters:
      - format: byte
        in: path
        name: address_bytes
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'AddressBytesToStringResponse is the response type for AddressString
              rpc

              method.'
            properties:
              address_string:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AddressBytesToString converts Account Address bytes to string
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      operationId: Query_AddressStringToBytes
      parameters:
      - in: path
        name: address_string
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'AddressStringToBytesResponse is the response type for AddressBytes
              rpc

              method.'
            properties:
              address_bytes:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AddressStringToBytes converts Address string to bytes
      tags:
      - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      operationId: Query_ModuleAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryModuleAccountsResponse is the response type for the
              Query/ModuleAccounts

              RPC method.'
            properties:
              accounts:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleAccounts returns all the existing module accounts.
      tags:
      - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      operationId: Query_ModuleAccountByName
      parameters:
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryModuleAccountByNameResponse is the response type for
              the

              Query/ModuleAccountByName RPC method.'
            properties:
              account:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleAccountByName returns the module account info by module name
      tags:
      - Query
  /cosmos/auth/v1beta1/params:
    get:
      operationId: Query_AuthParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  max_memo_characters:
                    format: uint64
                    type: string
                  sig_verify_cost_ed25519:
                    format: uint64
                    type: string
                  sig_verify_cost_secp256k1:
                    format: uint64
                    type: string
                  tx_sig_limit:
                    format: uint64
                    type: string
                  tx_size_cost_per_byte:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants:
    get:
      operationId: Query_Grants
      parameters:
      - in: query
        name: granter
        required: false
        type: string
      - in: query
        name: grantee
        required: false
        type: string
      - description: 'Optional, msg_type_url, when set, will query only grants matching
          given msg

          type.'
        in: query
        name: msg_type_url
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryGrantsResponse is the response type for the Query/Authorizations
              RPC

              method.'
            properties:
              grants:
                description: authorizations is a list of grants granted for grantee
                  by granter.
                items:
                  description: 'Grant gives permissions to execute

                    the provide method with expiration time.'
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      title: 'time when the grant will expire and will be pruned.
                        If null, then the grant

                        doesn''t have a time expiration (other conditions  in `authorization`

                        may apply to invalidate the grant)'
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      operationId: Query_GranteeGrants
      parameters:
      - in: path
        name: grantee
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryGranteeGrantsResponse is the response type for the
              Query/GranteeGrants

              RPC method.'
            properties:
              grants:
                description: grants is a list of grants granted to the grantee.
                items:
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      type: string
                    grantee:
                      type: string
                    granter:
                      type: string
                  title: 'GrantAuthorization extends a grant with both the addresses
                    of the grantee and

                    granter. It is used in genesis.proto and query.proto'
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      operationId: Query_GranterGrants
      parameters:
      - in: path
        name: granter
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryGranterGrantsResponse is the response type for the
              Query/GranterGrants

              RPC method.'
            properties:
              grants:
                description: grants is a list of grants granted by the granter.
                items:
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      type: string
                    grantee:
                      type: string
                    granter:
                      type: string
                  title: 'GrantAuthorization extends a grant with both the addresses
                    of the grantee and

                    granter. It is used in genesis.proto and query.proto'
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      tags:
      - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_AllBalances
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      - description: 'resolve_denom is the flag to resolve the denom into a human-readable
          form

          from the metadata.'
        in: query
        name: resolve_denom
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAllBalancesResponse is the response type for the Query/AllBalances
              RPC

              method.'
            properties:
              balances:
                description: balances is the balances of all the coins.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllBalances queries the balance of all coins for a single account.
      tags:
      - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      operationId: Query_Balance
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        type: string
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
            properties:
              balance:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Balance queries the balance of a single coin for a single account.
      tags:
      - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_DenomOwners
      parameters:
      - description: denom defines the coin denomination to query all account holders
          for.
        in: path
        name: denom
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDenomOwnersResponse defines the RPC response of a DenomOwners
              RPC query.
            properties:
              denom_owners:
                items:
                  description: 'DenomOwner defines structure representing an account
                    that owns or holds a

                    particular denominated token. It contains the account address
                    and account

                    balance of the denominated token.'
                  properties:
                    address:
                      description: address defines the address that owns a particular
                        denomination.
                      type: string
                    balance:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DenomOwners queries for all account addresses that own a particular
        token

        denomination.'
      tags:
      - Query
  /cosmos/bank/v1beta1/denom_owners_by_query:
    get:
      operationId: Query_DenomOwnersByQuery
      parameters:
      - description: denom defines the coin denomination to query all account holders
          for.
        in: query
        name: denom
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomOwnersByQueryResponse defines the RPC response
              of a

              DenomOwnersByQuery RPC query.'
            properties:
              denom_owners:
                items:
                  description: 'DenomOwner defines structure representing an account
                    that owns or holds a

                    particular denominated token. It contains the account address
                    and account

                    balance of the denominated token.'
                  properties:
                    address:
                      description: address defines the address that owns a particular
                        denomination.
                      type: string
                    balance:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DenomOwnersByQuery queries for all account addresses that own a particular

        token denomination.'
      tags:
      - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      operationId: Query_DenomsMetadata
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata

              RPC method.'
            properties:
              metadatas:
                description: metadata provides the client information for all the
                  registered tokens.
                items:
                  description: 'Metadata represents a struct that describes

                    a basic token.'
                  properties:
                    base:
                      description: base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                      type: string
                    denom_units:
                      items:
                        description: 'DenomUnit represents a struct that describes
                          a given

                          denomination unit of the basic token.'
                        properties:
                          aliases:
                            items:
                              type: string
                            title: aliases is a list of string aliases for the given
                              denom
                            type: array
                          denom:
                            description: denom represents the string name of the given
                              denom unit (e.g uatom).
                            type: string
                          exponent:
                            description: 'exponent represents power of 10 exponent
                              that one must

                              raise the base_denom to in order to equal the given
                              DenomUnit''s denom

                              1 denom = 10^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a DenomUnit
                              of ''atom'' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).'
                            format: int64
                            type: integer
                        type: object
                      title: denom_units represents the list of DenomUnit's for a
                        given coin
                      type: array
                    description:
                      type: string
                    display:
                      description: 'display indicates the suggested denom that should
                        be

                        displayed in clients.'
                      type: string
                    name:
                      title: 'name defines the name of the token (eg: Cosmos Atom)'
                      type: string
                    symbol:
                      description: 'symbol is the token symbol usually shown on exchanges
                        (eg: ATOM). This can

                        be the same as the display.'
                      type: string
                    uri:
                      description: 'URI to a document (on or off-chain) that contains
                        additional information.

                        Optional.'
                      type: string
                    uri_hash:
                      description: 'URIHash is a sha256 hash of a document pointed
                        by URI. It''s used to verify

                        that the document didn''t change. Optional.'
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DenomsMetadata queries the client metadata for all registered coin

        denominations.'
      tags:
      - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      operationId: Query_DenomMetadata
      parameters:
      - description: denom is the coin denom to query the metadata for.
        in: path
        name: denom
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata

              RPC method.'
            properties:
              metadata:
                description: 'Metadata represents a struct that describes

                  a basic token.'
                properties:
                  base:
                    description: base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                    type: string
                  denom_units:
                    items:
                      description: 'DenomUnit represents a struct that describes a
                        given

                        denomination unit of the basic token.'
                      properties:
                        aliases:
                          items:
                            type: string
                          title: aliases is a list of string aliases for the given
                            denom
                          type: array
                        denom:
                          description: denom represents the string name of the given
                            denom unit (e.g uatom).
                          type: string
                        exponent:
                          description: 'exponent represents power of 10 exponent that
                            one must

                            raise the base_denom to in order to equal the given DenomUnit''s
                            denom

                            1 denom = 10^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a DenomUnit
                            of ''atom'' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).'
                          format: int64
                          type: integer
                      type: object
                    title: denom_units represents the list of DenomUnit's for a given
                      coin
                    type: array
                  description:
                    type: string
                  display:
                    description: 'display indicates the suggested denom that should
                      be

                      displayed in clients.'
                    type: string
                  name:
                    title: 'name defines the name of the token (eg: Cosmos Atom)'
                    type: string
                  symbol:
                    description: 'symbol is the token symbol usually shown on exchanges
                      (eg: ATOM). This can

                      be the same as the display.'
                    type: string
                  uri:
                    description: 'URI to a document (on or off-chain) that contains
                      additional information.

                      Optional.'
                    type: string
                  uri_hash:
                    description: 'URIHash is a sha256 hash of a document pointed by
                      URI. It''s used to verify

                      that the document didn''t change. Optional.'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomMetadata queries the client metadata of a given coin denomination.
      tags:
      - Query
  /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
    get:
      operationId: Query_DenomMetadataByQueryString
      parameters:
      - description: denom is the coin denom to query the metadata for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomMetadataByQueryStringResponse is the response
              type for the

              Query/DenomMetadata RPC method. Identical with QueryDenomMetadataResponse
              but

              receives denom as query string in request.'
            properties:
              metadata:
                description: 'Metadata represents a struct that describes

                  a basic token.'
                properties:
                  base:
                    description: base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                    type: string
                  denom_units:
                    items:
                      description: 'DenomUnit represents a struct that describes a
                        given

                        denomination unit of the basic token.'
                      properties:
                        aliases:
                          items:
                            type: string
                          title: aliases is a list of string aliases for the given
                            denom
                          type: array
                        denom:
                          description: denom represents the string name of the given
                            denom unit (e.g uatom).
                          type: string
                        exponent:
                          description: 'exponent represents power of 10 exponent that
                            one must

                            raise the base_denom to in order to equal the given DenomUnit''s
                            denom

                            1 denom = 10^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a DenomUnit
                            of ''atom'' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).'
                          format: int64
                          type: integer
                      type: object
                    title: denom_units represents the list of DenomUnit's for a given
                      coin
                    type: array
                  description:
                    type: string
                  display:
                    description: 'display indicates the suggested denom that should
                      be

                      displayed in clients.'
                    type: string
                  name:
                    title: 'name defines the name of the token (eg: Cosmos Atom)'
                    type: string
                  symbol:
                    description: 'symbol is the token symbol usually shown on exchanges
                      (eg: ATOM). This can

                      be the same as the display.'
                    type: string
                  uri:
                    description: 'URI to a document (on or off-chain) that contains
                      additional information.

                      Optional.'
                    type: string
                  uri_hash:
                    description: 'URIHash is a sha256 hash of a document pointed by
                      URI. It''s used to verify

                      that the document didn''t change. Optional.'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DenomMetadataByQueryString queries the client metadata of a given
        coin

        denomination.'
      tags:
      - Query
  /cosmos/bank/v1beta1/params:
    get:
      operationId: Query_BankParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse defines the response type for querying
              x/bank parameters.
            properties:
              params:
                description: params provides the parameters of the bank module.
                properties:
                  default_send_enabled:
                    type: boolean
                  send_enabled:
                    description: 'Deprecated: Use of SendEnabled in params is deprecated.

                      For genesis, use the newly added send_enabled field in the genesis
                      object.

                      Storage, lookup, and manipulation of this information is now
                      in the keeper.


                      As of cosmos-sdk 0.47, this only exists for backwards compatibility
                      of

                      genesis files.'
                    items:
                      description: 'SendEnabled maps coin denom to a send_enabled
                        status (whether a denom is

                        sendable).'
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of x/bank module.
      tags:
      - Query
  /cosmos/bank/v1beta1/send_enabled:
    get:
      description: 'This query only returns denominations that have specific SendEnabled

        settings. Any denomination that does not have a specific setting will use

        the default params.default_send_enabled, and will not be returned by this

        query.'
      operationId: Query_SendEnabled
      parameters:
      - collectionFormat: multi
        description: 'denoms is the specific denoms you want look up. Leave empty
          to get all

          entries.'
        in: query
        items:
          type: string
        name: denoms
        required: false
        type: array
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QuerySendEnabledResponse defines the RPC response of a SendEnable
              query.
            properties:
              pagination:
                description: 'pagination defines the pagination in the response. This
                  field is only

                  populated if the denoms field in the request is empty.'
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              send_enabled:
                items:
                  description: 'SendEnabled maps coin denom to a send_enabled status
                    (whether a denom is

                    sendable).'
                  properties:
                    denom:
                      type: string
                    enabled:
                      type: boolean
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SendEnabled queries for SendEnabled entries.
      tags:
      - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_SpendableBalances
      parameters:
      - description: address is the address to query spendable balances for.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QuerySpendableBalancesResponse defines the gRPC response
              structure for

              querying an account''s spendable balances.'
            properties:
              balances:
                description: balances is the spendable balances of all the coins.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SpendableBalances queries the spendable balance of all coins for a
        single

        account.'
      tags:
      - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_SpendableBalanceByDenom
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        type: string
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QuerySpendableBalanceByDenomResponse defines the gRPC response
              structure for

              querying an account''s spendable balance for a specific denom.'
            properties:
              balance:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'SpendableBalanceByDenom queries the spendable balance of a single
        denom for

        a single account.'
      tags:
      - Query
  /cosmos/bank/v1beta1/supply:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_TotalSupply
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              supply:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: supply is the supply of the coins
                type: array
            title: 'QueryTotalSupplyResponse is the response type for the Query/TotalSupply
              RPC

              method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TotalSupply queries the total supply of all coins.
      tags:
      - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_SupplyOf
      parameters:
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
            properties:
              amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SupplyOf queries the supply of a single coin.
      tags:
      - Query
  /cosmos/base/node/v1beta1/config:
    get:
      operationId: Service_Config
      responses:
        '200':
          description: A successful response.
          schema:
            description: ConfigResponse defines the response structure for the Config
              gRPC query.
            properties:
              halt_height:
                format: uint64
                type: string
              minimum_gas_price:
                type: string
              pruning_interval:
                type: string
              pruning_keep_recent:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Config queries for the operator configuration.
      tags:
      - Service
  /cosmos/base/node/v1beta1/status:
    get:
      operationId: Service_Status
      responses:
        '200':
          description: A successful response.
          schema:
            description: StateResponse defines the response structure for the status
              of a node.
            properties:
              app_hash:
                format: byte
                type: string
              earliest_store_height:
                format: uint64
                type: string
              height:
                format: uint64
                type: string
              timestamp:
                format: date-time
                type: string
              validator_hash:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Status queries for the node status.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      operationId: Service_ABCIQuery
      parameters:
      - format: byte
        in: query
        name: data
        required: false
        type: string
      - in: query
        name: path
        required: false
        type: string
      - format: int64
        in: query
        name: height
        required: false
        type: string
      - in: query
        name: prove
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'ABCIQueryResponse defines the response structure for the
              ABCIQuery gRPC

              query.


              Note: This type is a duplicate of the ResponseQuery proto type defined
              in

              Tendermint.'
            properties:
              code:
                format: int64
                type: integer
              codespace:
                type: string
              height:
                format: int64
                type: string
              index:
                format: int64
                type: string
              info:
                type: string
              key:
                format: byte
                type: string
              log:
                type: string
              proof_ops:
                description: 'ProofOps is Merkle proof defined by the list of ProofOps.


                  Note: This type is a duplicate of the ProofOps proto type defined
                  in

                  Tendermint.'
                properties:
                  ops:
                    items:
                      description: 'ProofOp defines an operation used for calculating
                        Merkle root. The data could

                        be arbitrary format, providing necessary data for example
                        neighbouring node

                        hash.


                        Note: This type is a duplicate of the ProofOp proto type defined
                        in

                        Tendermint.'
                      properties:
                        data:
                          format: byte
                          type: string
                        key:
                          format: byte
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                type: object
              value:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ABCIQuery defines a query handler that supports ABCI queries directly
        to

        the application, bypassing Tendermint completely. The ABCI query must

        contain a valid and supported path, including app, custom, p2p, and store.'
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      operationId: Service_GetLatestBlock
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'GetLatestBlockResponse is the response type for the Query/GetLatestBlock
              RPC

              method.'
            properties:
              block:
                properties:
                  data:
                    properties:
                      txs:
                        description: 'Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We''re just agreeing
                          on the order first.

                          This means that block.AppHash does not include these txs.'
                        items:
                          format: byte
                          type: string
                        type: array
                    title: Data contains the set of transactions included in the block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: 'DuplicateVoteEvidence contains evidence
                                of a validator signed two conflicting

                                votes.'
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: 'LightClientAttackEvidence contains evidence
                                of a set of validators attempting

                                to mislead a light client.'
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: 'Commit contains the evidence
                                            that a block was committed by a set of

                                            validators.'
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: CommitSig is a part of
                                                  the Vote included in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                    - BLOCK_ID_FLAG_UNKNOWN
                                                    - BLOCK_ID_FLAG_ABSENT
                                                    - BLOCK_ID_FLAG_COMMIT
                                                    - BLOCK_ID_FLAG_NIL
                                                    title: BlockIdFlag indicates which
                                                      BlockID the signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: Header defines the structure
                                            of a block header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: hashes from the app output from
                                                the prev block
                                              type: string
                                            version:
                                              description: 'Consensus captures the
                                                consensus rules for processing a block
                                                in the

                                                blockchain, including all blockchain
                                                data structures and the rules of the

                                                application''s state transition machine.'
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              title: basic block info
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: PublicKey defines the keys available
                                                for use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: PublicKey defines the keys
                                                  available for use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                  last_commit:
                    description: 'Commit contains the evidence that a block was committed
                      by a set of

                      validators.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: CommitSig is a part of the Vote included in
                            a Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                              title: BlockIdFlag indicates which BlockID the signature
                                is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                title: 'Deprecated: please use `sdk_block` instead'
                type: object
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              sdk_block:
                description: 'Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.'
                properties:
                  data:
                    properties:
                      txs:
                        description: 'Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We''re just agreeing
                          on the order first.

                          This means that block.AppHash does not include these txs.'
                        items:
                          format: byte
                          type: string
                        type: array
                    title: Data contains the set of transactions included in the block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: 'DuplicateVoteEvidence contains evidence
                                of a validator signed two conflicting

                                votes.'
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: 'LightClientAttackEvidence contains evidence
                                of a set of validators attempting

                                to mislead a light client.'
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: 'Commit contains the evidence
                                            that a block was committed by a set of

                                            validators.'
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: CommitSig is a part of
                                                  the Vote included in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                    - BLOCK_ID_FLAG_UNKNOWN
                                                    - BLOCK_ID_FLAG_ABSENT
                                                    - BLOCK_ID_FLAG_COMMIT
                                                    - BLOCK_ID_FLAG_NIL
                                                    title: BlockIdFlag indicates which
                                                      BlockID the signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: Header defines the structure
                                            of a block header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: hashes from the app output from
                                                the prev block
                                              type: string
                                            version:
                                              description: 'Consensus captures the
                                                consensus rules for processing a block
                                                in the

                                                blockchain, including all blockchain
                                                data structures and the rules of the

                                                application''s state transition machine.'
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              title: basic block info
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: PublicKey defines the keys available
                                                for use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: PublicKey defines the keys
                                                  available for use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a Tendermint block
                      header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        description: 'proposer_address is the original block proposer
                          address, formatted as a

                          Bech32 string. In Tendermint, this type is `bytes`, but
                          in the SDK, we

                          convert it to a Bech32 string for better UX.'
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                  last_commit:
                    description: 'Commit contains the evidence that a block was committed
                      by a set of

                      validators.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: CommitSig is a part of the Vote included in
                            a Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                              title: BlockIdFlag indicates which BlockID the signature
                                is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetLatestBlock returns the latest block.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      operationId: Service_GetBlockByHeight
      parameters:
      - format: int64
        in: path
        name: height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight

              RPC method.'
            properties:
              block:
                properties:
                  data:
                    properties:
                      txs:
                        description: 'Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We''re just agreeing
                          on the order first.

                          This means that block.AppHash does not include these txs.'
                        items:
                          format: byte
                          type: string
                        type: array
                    title: Data contains the set of transactions included in the block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: 'DuplicateVoteEvidence contains evidence
                                of a validator signed two conflicting

                                votes.'
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: 'LightClientAttackEvidence contains evidence
                                of a set of validators attempting

                                to mislead a light client.'
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: 'Commit contains the evidence
                                            that a block was committed by a set of

                                            validators.'
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: CommitSig is a part of
                                                  the Vote included in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                    - BLOCK_ID_FLAG_UNKNOWN
                                                    - BLOCK_ID_FLAG_ABSENT
                                                    - BLOCK_ID_FLAG_COMMIT
                                                    - BLOCK_ID_FLAG_NIL
                                                    title: BlockIdFlag indicates which
                                                      BlockID the signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: Header defines the structure
                                            of a block header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: hashes from the app output from
                                                the prev block
                                              type: string
                                            version:
                                              description: 'Consensus captures the
                                                consensus rules for processing a block
                                                in the

                                                blockchain, including all blockchain
                                                data structures and the rules of the

                                                application''s state transition machine.'
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              title: basic block info
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: PublicKey defines the keys available
                                                for use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: PublicKey defines the keys
                                                  available for use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                  last_commit:
                    description: 'Commit contains the evidence that a block was committed
                      by a set of

                      validators.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: CommitSig is a part of the Vote included in
                            a Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                              title: BlockIdFlag indicates which BlockID the signature
                                is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                title: 'Deprecated: please use `sdk_block` instead'
                type: object
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              sdk_block:
                description: 'Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.'
                properties:
                  data:
                    properties:
                      txs:
                        description: 'Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We''re just agreeing
                          on the order first.

                          This means that block.AppHash does not include these txs.'
                        items:
                          format: byte
                          type: string
                        type: array
                    title: Data contains the set of transactions included in the block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: 'DuplicateVoteEvidence contains evidence
                                of a validator signed two conflicting

                                votes.'
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: 'Vote represents a prevote or precommit
                                    vote from validators for

                                    consensus.'
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: 'Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.'
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: 'Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.'
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: 'Vote signature by the validator
                                        if they participated in consensus for the

                                        associated block.'
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: "SignedMsgType is a type of signed\
                                        \ message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                        \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                      enum:
                                      - SIGNED_MSG_TYPE_UNKNOWN
                                      - SIGNED_MSG_TYPE_PREVOTE
                                      - SIGNED_MSG_TYPE_PRECOMMIT
                                      - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: 'LightClientAttackEvidence contains evidence
                                of a set of validators attempting

                                to mislead a light client.'
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: 'Commit contains the evidence
                                            that a block was committed by a set of

                                            validators.'
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: CommitSig is a part of
                                                  the Vote included in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                    - BLOCK_ID_FLAG_UNKNOWN
                                                    - BLOCK_ID_FLAG_ABSENT
                                                    - BLOCK_ID_FLAG_COMMIT
                                                    - BLOCK_ID_FLAG_NIL
                                                    title: BlockIdFlag indicates which
                                                      BlockID the signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: Header defines the structure
                                            of a block header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: hashes from the app output from
                                                the prev block
                                              type: string
                                            version:
                                              description: 'Consensus captures the
                                                consensus rules for processing a block
                                                in the

                                                blockchain, including all blockchain
                                                data structures and the rules of the

                                                application''s state transition machine.'
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              title: basic block info
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: PublicKey defines the keys available
                                                for use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: PublicKey defines the keys
                                                  available for use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a Tendermint block
                      header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        description: 'proposer_address is the original block proposer
                          address, formatted as a

                          Bech32 string. In Tendermint, this type is `bytes`, but
                          in the SDK, we

                          convert it to a Bech32 string for better UX.'
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                  last_commit:
                    description: 'Commit contains the evidence that a block was committed
                      by a set of

                      validators.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: CommitSig is a part of the Vote included in
                            a Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                              title: BlockIdFlag indicates which BlockID the signature
                                is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetBlockByHeight queries block for given height.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      operationId: Service_GetNodeInfo
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'GetNodeInfoResponse is the response type for the Query/GetNodeInfo
              RPC

              method.'
            properties:
              application_version:
                description: VersionInfo is the type for the GetNodeInfoResponse message.
                properties:
                  app_name:
                    type: string
                  build_deps:
                    items:
                      properties:
                        path:
                          title: module path
                          type: string
                        sum:
                          title: checksum
                          type: string
                        version:
                          title: module version
                          type: string
                      title: Module is the type for VersionInfo
                      type: object
                    type: array
                  build_tags:
                    type: string
                  cosmos_sdk_version:
                    type: string
                  git_commit:
                    type: string
                  go_version:
                    type: string
                  name:
                    type: string
                  version:
                    type: string
                type: object
              default_node_info:
                properties:
                  channels:
                    format: byte
                    type: string
                  default_node_id:
                    type: string
                  listen_addr:
                    type: string
                  moniker:
                    type: string
                  network:
                    type: string
                  other:
                    properties:
                      rpc_address:
                        type: string
                      tx_index:
                        type: string
                    type: object
                  protocol_version:
                    properties:
                      app:
                        format: uint64
                        type: string
                      block:
                        format: uint64
                        type: string
                      p2p:
                        format: uint64
                        type: string
                    type: object
                  version:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetNodeInfo queries the current node info.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      operationId: Service_GetSyncing
      responses:
        '200':
          description: A successful response.
          schema:
            description: GetSyncingResponse is the response type for the Query/GetSyncing
              RPC method.
            properties:
              syncing:
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetSyncing queries node syncing.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      operationId: Service_GetLatestValidatorSet
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'GetLatestValidatorSetResponse is the response type for the

              Query/GetValidatorSetByHeight RPC method.'
            properties:
              block_height:
                format: int64
                type: string
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              validators:
                items:
                  description: Validator is the type for the validator-set.
                  properties:
                    address:
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetLatestValidatorSet queries latest validator-set.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      operationId: Service_GetValidatorSetByHeight
      parameters:
      - format: int64
        in: path
        name: height
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'GetValidatorSetByHeightResponse is the response type for
              the

              Query/GetValidatorSetByHeight RPC method.'
            properties:
              block_height:
                format: int64
                type: string
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              validators:
                items:
                  description: Validator is the type for the validator-set.
                  properties:
                    address:
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      tags:
      - Service
  /cosmos/circuit/v1/accounts:
    get:
      operationId: Query_CircuitAccounts
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: AccountsResponse is the response type for the Query/Accounts
              RPC method.
            properties:
              accounts:
                items:
                  properties:
                    address:
                      type: string
                    permissions:
                      description: 'Permissions are the permissions that an account
                        has to trip

                        or reset the circuit breaker.'
                      properties:
                        level:
                          default: LEVEL_NONE_UNSPECIFIED
                          description: level is the level of permissions granted to
                            this account.
                          enum:
                          - LEVEL_NONE_UNSPECIFIED
                          - LEVEL_SOME_MSGS
                          - LEVEL_ALL_MSGS
                          - LEVEL_SUPER_ADMIN
                          type: string
                        limit_type_urls:
                          description: 'limit_type_urls is used with LEVEL_SOME_MSGS
                            to limit the lists of Msg type

                            URLs that the account can trip. It is an error to use
                            limit_type_urls with

                            a level other than LEVEL_SOME_MSGS.'
                          items:
                            type: string
                          type: array
                      type: object
                  title: 'GenesisAccountPermissions is the account permissions for
                    the circuit breaker

                    in genesis'
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account permissions.
      tags:
      - Query
  /cosmos/circuit/v1/accounts/{address}:
    get:
      operationId: Query_CircuitAccount
      parameters:
      - in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: AccountResponse is the response type for the Query/Account
              RPC method.
            properties:
              permission:
                description: 'Permissions are the permissions that an account has
                  to trip

                  or reset the circuit breaker.'
                properties:
                  level:
                    default: LEVEL_NONE_UNSPECIFIED
                    description: level is the level of permissions granted to this
                      account.
                    enum:
                    - LEVEL_NONE_UNSPECIFIED
                    - LEVEL_SOME_MSGS
                    - LEVEL_ALL_MSGS
                    - LEVEL_SUPER_ADMIN
                    type: string
                  limit_type_urls:
                    description: 'limit_type_urls is used with LEVEL_SOME_MSGS to
                      limit the lists of Msg type

                      URLs that the account can trip. It is an error to use limit_type_urls
                      with

                      a level other than LEVEL_SOME_MSGS.'
                    items:
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account permissions.
      tags:
      - Query
  /cosmos/circuit/v1/disable_list:
    get:
      operationId: Query_DisabledList
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'DisabledListResponse is the response type for the Query/DisabledList
              RPC

              method.'
            properties:
              disabled_list:
                items:
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DisabledList returns a list of disabled message urls
      tags:
      - Query
  /cosmos/consensus/v1/params:
    get:
      operationId: Query_ConsensusParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryParamsResponse defines the response type for querying
              x/consensus

              parameters.'
            properties:
              params:
                description: 'params are the tendermint consensus params stored in
                  the consensus module.

                  Please note that `params.version` is not populated in this response,
                  it is

                  tracked separately in the x/upgrade module.'
                properties:
                  abci:
                    description: 'ABCIParams configure functionality specific to the
                      Application Blockchain

                      Interface.'
                    properties:
                      vote_extensions_enable_height:
                        description: 'vote_extensions_enable_height configures the
                          first height during which

                          vote extensions will be enabled. During this specified height,
                          and for all

                          subsequent heights, precommit messages that do not contain
                          valid extension

                          data will be considered invalid. Prior to this height, vote
                          extensions will

                          not be used or accepted by validators on the network.


                          Once enabled, vote extensions will be created by the application
                          in

                          ExtendVote, passed to the application for validation in
                          VerifyVoteExtension

                          and given to the application to use when proposing a block
                          during

                          PrepareProposal.'
                        format: int64
                        type: string
                    type: object
                  block:
                    description: BlockParams contains limits on the block size.
                    properties:
                      max_bytes:
                        format: int64
                        title: 'Max block size, in bytes.

                          Note: must be greater than 0'
                        type: string
                      max_gas:
                        format: int64
                        title: 'Max gas per block.

                          Note: must be greater or equal to -1'
                        type: string
                    type: object
                  evidence:
                    description: EvidenceParams determine how we handle evidence of
                      malfeasance.
                    properties:
                      max_age_duration:
                        description: 'Max age of evidence, in time.


                          It should correspond with an app''s "unbonding period" or
                          other similar

                          mechanism for handling [Nothing-At-Stake

                          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).'
                        type: string
                      max_age_num_blocks:
                        description: 'Max age of evidence, in blocks.


                          The basic formula for calculating this is: MaxAgeDuration
                          / {average block

                          time}.'
                        format: int64
                        type: string
                      max_bytes:
                        format: int64
                        title: 'This sets the maximum size of total evidence in bytes
                          that can be committed

                          in a single block. and should fall comfortably under the
                          max block bytes.

                          Default is 1048576 or 1MB'
                        type: string
                    type: object
                  validator:
                    description: 'ValidatorParams restrict the public key types validators
                      can use.

                      NOTE: uses ABCI pubkey naming, not Amino names.'
                    properties:
                      pub_key_types:
                        items:
                          type: string
                        type: array
                    type: object
                  version:
                    description: VersionParams contains the ABCI application version.
                    properties:
                      app:
                        format: uint64
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of x/consensus module.
      tags:
      - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      description: 'WARNING: This query will fail if an external community pool is
        used.'
      operationId: Query_CommunityPool
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryCommunityPoolResponse is the response type for the
              Query/CommunityPool

              RPC method.'
            properties:
              pool:
                description: pool defines community pool's coins.
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CommunityPool queries the community pool coins.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      operationId: Query_DelegationTotalRewards
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegationTotalRewardsResponse is the response type
              for the

              Query/DelegationTotalRewards RPC method.'
            properties:
              rewards:
                description: rewards defines all the rewards accrued by a delegator.
                items:
                  description: 'DelegationDelegatorReward represents the properties

                    of a delegator''s delegation reward.'
                  properties:
                    reward:
                      items:
                        description: 'DecCoin defines a token with a denomination
                          and a decimal amount.


                          NOTE: The amount field is an Dec which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    validator_address:
                      type: string
                  type: object
                type: array
              total:
                description: total defines the sum of all the rewards.
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DelegationTotalRewards queries the total rewards accrued by each

        validator.'
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      operationId: Query_DelegationRewards
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegationRewardsResponse is the response type for
              the

              Query/DelegationRewards RPC method.'
            properties:
              rewards:
                description: rewards defines the rewards accrued by a delegation.
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      operationId: Query_DelegatorValidators
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegatorValidatorsResponse is the response type for
              the

              Query/DelegatorValidators RPC method.'
            properties:
              validators:
                description: validators defines the validators a delegator is delegating
                  for.
                items:
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DelegatorValidators queries the validators of a delegator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      operationId: Query_DelegatorWithdrawAddress
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegatorWithdrawAddressResponse is the response type
              for the

              Query/DelegatorWithdrawAddress RPC method.'
            properties:
              withdraw_address:
                description: withdraw_address defines the delegator address to query
                  for.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/params:
    get:
      operationId: Query_DistributionParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  base_proposer_reward:
                    description: 'Deprecated: The base_proposer_reward field is deprecated
                      and is no longer

                      used in the x/distribution module''s reward mechanism.'
                    type: string
                  bonus_proposer_reward:
                    description: 'Deprecated: The bonus_proposer_reward field is deprecated
                      and is no longer

                      used in the x/distribution module''s reward mechanism.'
                    type: string
                  community_tax:
                    type: string
                  withdraw_addr_enabled:
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries params of the distribution module.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      operationId: Query_ValidatorDistributionInfo
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryValidatorDistributionInfoResponse is the response type
              for the

              Query/ValidatorDistributionInfo RPC method.'
            properties:
              commission:
                description: commission defines the commission the validator received.
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              operator_address:
                description: operator_address defines the validator operator address.
                type: string
              self_bond_rewards:
                description: self_bond_rewards defines the self delegations rewards.
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ValidatorDistributionInfo queries validator commission and self-delegation

        rewards for validator'
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      operationId: Query_ValidatorCommission
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              commission:
                description: commission defines the commission the validator received.
                properties:
                  commission:
                    items:
                      description: 'DecCoin defines a token with a denomination and
                        a decimal amount.


                        NOTE: The amount field is an Dec which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
            title: 'QueryValidatorCommissionResponse is the response type for the

              Query/ValidatorCommission RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ValidatorCommission queries accumulated commission for a validator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      operationId: Query_ValidatorOutstandingRewards
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryValidatorOutstandingRewardsResponse is the response
              type for the

              Query/ValidatorOutstandingRewards RPC method.'
            properties:
              rewards:
                description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
                  rewards

                  for a validator inexpensive to track, allows simple sanity checks.'
                properties:
                  rewards:
                    items:
                      description: 'DecCoin defines a token with a denomination and
                        a decimal amount.


                        NOTE: The amount field is an Dec which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      operationId: Query_ValidatorSlashes
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      - description: starting_height defines the optional starting height to query
          the slashes.
        format: uint64
        in: query
        name: starting_height
        required: false
        type: string
      - description: starting_height defines the optional ending height to query the
          slashes.
        format: uint64
        in: query
        name: ending_height
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryValidatorSlashesResponse is the response type for the

              Query/ValidatorSlashes RPC method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              slashes:
                description: slashes defines the slashes the validator received.
                items:
                  description: 'ValidatorSlashEvent represents a validator slash event.

                    Height is implicit within the store key.

                    This is needed to calculate appropriate amount of staking tokens

                    for delegations which are withdrawn after a slash has occurred.'
                  properties:
                    fraction:
                      type: string
                    validator_period:
                      format: uint64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ValidatorSlashes queries slash events of a validator.
      tags:
      - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      operationId: Query_AllEvidence
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAllEvidenceResponse is the response type for the Query/AllEvidence
              RPC

              method.'
            properties:
              evidence:
                description: evidence returns all evidences.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllEvidence queries all evidence.
      tags:
      - Query
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      operationId: Query_Evidence
      parameters:
      - description: hash defines the evidence hash of the requested evidence.
        in: path
        name: hash
        required: true
        type: string
      - description: 'evidence_hash defines the hash of the requested evidence.

          Deprecated: Use hash, a HEX encoded string, instead.'
        format: byte
        in: query
        name: evidence_hash
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryEvidenceResponse is the response type for the Query/Evidence
              RPC method.
            properties:
              evidence:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Evidence queries evidence based on evidence hash.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      operationId: Query_Allowance
      parameters:
      - description: granter is the address of the user granting an allowance of their
          funds.
        in: path
        name: granter
        required: true
        type: string
      - description: 'grantee is the address of the user being granted an allowance
          of another

          user''s funds.'
        in: path
        name: grantee
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAllowanceResponse is the response type for the Query/Allowance
              RPC

              method.'
            properties:
              allowance:
                description: allowance is a allowance granted for grantee by granter.
                properties:
                  allowance:
                    description: allowance can be any of basic, periodic, allowed
                      fee allowance.
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  grantee:
                    description: 'grantee is the address of the user being granted
                      an allowance of another

                      user''s funds.'
                    type: string
                  granter:
                    description: granter is the address of the user granting an allowance
                      of their funds.
                    type: string
                title: Grant is stored in the KVStore to record a grant with full
                  context
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Allowance returns granted allwance to the grantee by the granter.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      operationId: Query_Allowances
      parameters:
      - in: path
        name: grantee
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAllowancesResponse is the response type for the Query/Allowances
              RPC

              method.'
            properties:
              allowances:
                description: allowances are allowance's granted for grantee by granter.
                items:
                  properties:
                    allowance:
                      description: allowance can be any of basic, periodic, allowed
                        fee allowance.
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    grantee:
                      description: 'grantee is the address of the user being granted
                        an allowance of another

                        user''s funds.'
                      type: string
                    granter:
                      description: granter is the address of the user granting an
                        allowance of their funds.
                      type: string
                  title: Grant is stored in the KVStore to record a grant with full
                    context
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Allowances returns all the grants for the given grantee address.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      operationId: Query_AllowancesByGranter
      parameters:
      - in: path
        name: granter
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAllowancesByGranterResponse is the response type for
              the

              Query/AllowancesByGranter RPC method.'
            properties:
              allowances:
                description: allowances that have been issued by the granter.
                items:
                  properties:
                    allowance:
                      description: allowance can be any of basic, periodic, allowed
                        fee allowance.
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    grantee:
                      description: 'grantee is the address of the user being granted
                        an allowance of another

                        user''s funds.'
                      type: string
                    granter:
                      description: granter is the address of the user granting an
                        allowance of their funds.
                      type: string
                  title: Grant is stored in the KVStore to record a grant with full
                    context
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllowancesByGranter returns all the grants given by an address
      tags:
      - Query
  /cosmos/gov/v1/constitution:
    get:
      operationId: Query_Constitution
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              constitution:
                type: string
            title: 'QueryConstitutionResponse is the response type for the Query/Constitution
              RPC

              method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Constitution queries the chain's constitution.
      tags:
      - Query
  /cosmos/gov/v1/params/{params_type}:
    get:
      operationId: Query_GovV1Params
      parameters:
      - description: 'params_type defines which parameters to query for, can be one
          of "voting",

          "tallying" or "deposit".'
        in: path
        name: params_type
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              deposit_params:
                description: 'Deprecated: Prefer to use `params` instead.

                  deposit_params defines the parameters related to deposit.'
                properties:
                  max_deposit_period:
                    description: 'Maximum period for Atom holders to deposit on a
                      proposal. Initial value: 2

                      months.'
                    type: string
                  min_deposit:
                    description: Minimum deposit for a proposal to enter voting period.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              params:
                description: params defines all the paramaters of x/gov module.
                properties:
                  burn_proposal_deposit_prevote:
                    title: burn deposits if the proposal does not enter voting period
                    type: boolean
                  burn_vote_quorum:
                    title: burn deposits if a proposal does not meet quorum
                    type: boolean
                  burn_vote_veto:
                    title: burn deposits if quorum with vote type no_veto is met
                    type: boolean
                  expedited_min_deposit:
                    description: Minimum expedited deposit for a proposal to enter
                      voting period.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  expedited_threshold:
                    description: 'Minimum proportion of Yes votes for proposal to
                      pass. Default value: 0.67.'
                    type: string
                  expedited_voting_period:
                    description: Duration of the voting period of an expedited proposal.
                    type: string
                  max_deposit_period:
                    description: 'Maximum period for Atom holders to deposit on a
                      proposal. Initial value: 2

                      months.'
                    type: string
                  min_deposit:
                    description: Minimum deposit for a proposal to enter voting period.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  min_deposit_ratio:
                    description: 'The ratio representing the proportion of the deposit
                      value minimum that

                      must be met when making a deposit. Default value: 0.01. Meaning
                      that for a

                      chain with a min_deposit of 100stake, a deposit of 1stake would
                      be

                      required.'
                    type: string
                  min_initial_deposit_ratio:
                    description: "The ratio representing the proportion of the deposit\
                      \ value that must be\n paid at proposal submission."
                    type: string
                  proposal_cancel_dest:
                    description: 'The address which will receive (proposal_cancel_ratio
                      * deposit) proposal

                      deposits. If empty, the (proposal_cancel_ratio * deposit) proposal
                      deposits

                      will be burned.'
                    type: string
                  proposal_cancel_ratio:
                    description: 'The cancel ratio which will not be returned back
                      to the depositors when a

                      proposal is cancelled.'
                    type: string
                  quorum:
                    description: "Minimum percentage of total stake needed to vote\
                      \ for a result to be\n considered valid."
                    type: string
                  threshold:
                    description: 'Minimum proportion of Yes votes for proposal to
                      pass. Default value: 0.5.'
                    type: string
                  veto_threshold:
                    description: "Minimum value of Veto votes to Total votes ratio\
                      \ for proposal to be\n vetoed. Default value: 1/3."
                    type: string
                  voting_period:
                    description: Duration of the voting period.
                    type: string
                type: object
              tally_params:
                description: 'Deprecated: Prefer to use `params` instead.

                  tally_params defines the parameters related to tally.'
                properties:
                  quorum:
                    description: 'Minimum percentage of total stake needed to vote
                      for a result to be

                      considered valid.'
                    type: string
                  threshold:
                    description: 'Minimum proportion of Yes votes for proposal to
                      pass. Default value: 0.5.'
                    type: string
                  veto_threshold:
                    description: 'Minimum value of Veto votes to Total votes ratio
                      for proposal to be

                      vetoed. Default value: 1/3.'
                    type: string
                type: object
              voting_params:
                description: 'Deprecated: Prefer to use `params` instead.

                  voting_params defines the parameters related to voting.'
                properties:
                  voting_period:
                    description: Duration of the voting period.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the gov module.
      tags:
      - Query
  /cosmos/gov/v1/proposals:
    get:
      operationId: Query_GovV1Proposal
      parameters:
      - default: PROPOSAL_STATUS_UNSPECIFIED
        description: "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
          \ PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
          \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n\
          period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
          \ defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED:\
          \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n\
          passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a\
          \ proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
          \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
          failed."
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        in: query
        name: proposal_status
        required: false
        type: string
      - description: voter defines the voter address for the proposals.
        in: query
        name: voter
        required: false
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: query
        name: depositor
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryProposalsResponse is the response type for the Query/Proposals
              RPC

              method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              proposals:
                description: proposals defines all the requested governance proposals.
                items:
                  description: Proposal defines the core field members of a governance
                    proposal.
                  properties:
                    deposit_end_time:
                      description: deposit_end_time is the end time for deposition.
                      format: date-time
                      type: string
                    expedited:
                      title: expedited defines if the proposal is expedited
                      type: boolean
                    failed_reason:
                      title: failed_reason defines the reason why the proposal failed
                      type: string
                    final_tally_result:
                      description: 'final_tally_result is the final tally result of
                        the proposal. When

                        querying a proposal via gRPC, this field is not populated
                        until the

                        proposal''s voting period has ended.'
                      properties:
                        abstain_count:
                          description: abstain_count is the number of abstain votes
                            on a proposal.
                          type: string
                        no_count:
                          description: no_count is the number of no votes on a proposal.
                          type: string
                        no_with_veto_count:
                          description: no_with_veto_count is the number of no with
                            veto votes on a proposal.
                          type: string
                        yes_count:
                          description: yes_count is the number of yes votes on a proposal.
                          type: string
                      type: object
                    id:
                      description: id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    messages:
                      description: messages are the arbitrary messages to be executed
                        if the proposal passes.
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      type: array
                    metadata:
                      title: 'metadata is any arbitrary metadata attached to the proposal.

                        the recommended format of the metadata is to be found here:

                        https://docs.cosmos.network/v0.47/modules/gov#proposal-3'
                      type: string
                    proposer:
                      title: proposer is the address of the proposal sumbitter
                      type: string
                    status:
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      description: status defines the proposal status.
                      enum:
                      - PROPOSAL_STATUS_UNSPECIFIED
                      - PROPOSAL_STATUS_DEPOSIT_PERIOD
                      - PROPOSAL_STATUS_VOTING_PERIOD
                      - PROPOSAL_STATUS_PASSED
                      - PROPOSAL_STATUS_REJECTED
                      - PROPOSAL_STATUS_FAILED
                      type: string
                    submit_time:
                      description: submit_time is the time of proposal submission.
                      format: date-time
                      type: string
                    summary:
                      title: summary is a short summary of the proposal
                      type: string
                    title:
                      title: title is the title of the proposal
                      type: string
                    total_deposit:
                      description: total_deposit is the total deposit on the proposal.
                      items:
                        description: 'Coin defines a token with a denomination and
                          an amount.


                          NOTE: The amount field is an Int which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    voting_end_time:
                      description: voting_end_time is the end time of voting on a
                        proposal.
                      format: date-time
                      type: string
                    voting_start_time:
                      description: voting_start_time is the starting time to vote
                        on a proposal.
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Proposals queries all proposals based on given status.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      operationId: Query_GovV1Proposal
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
            properties:
              proposal:
                description: Proposal defines the core field members of a governance
                  proposal.
                properties:
                  deposit_end_time:
                    description: deposit_end_time is the end time for deposition.
                    format: date-time
                    type: string
                  expedited:
                    title: expedited defines if the proposal is expedited
                    type: boolean
                  failed_reason:
                    title: failed_reason defines the reason why the proposal failed
                    type: string
                  final_tally_result:
                    description: 'final_tally_result is the final tally result of
                      the proposal. When

                      querying a proposal via gRPC, this field is not populated until
                      the

                      proposal''s voting period has ended.'
                    properties:
                      abstain_count:
                        description: abstain_count is the number of abstain votes
                          on a proposal.
                        type: string
                      no_count:
                        description: no_count is the number of no votes on a proposal.
                        type: string
                      no_with_veto_count:
                        description: no_with_veto_count is the number of no with veto
                          votes on a proposal.
                        type: string
                      yes_count:
                        description: yes_count is the number of yes votes on a proposal.
                        type: string
                    type: object
                  id:
                    description: id defines the unique id of the proposal.
                    format: uint64
                    type: string
                  messages:
                    description: messages are the arbitrary messages to be executed
                      if the proposal passes.
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  metadata:
                    title: 'metadata is any arbitrary metadata attached to the proposal.

                      the recommended format of the metadata is to be found here:

                      https://docs.cosmos.network/v0.47/modules/gov#proposal-3'
                    type: string
                  proposer:
                    title: proposer is the address of the proposal sumbitter
                    type: string
                  status:
                    default: PROPOSAL_STATUS_UNSPECIFIED
                    description: status defines the proposal status.
                    enum:
                    - PROPOSAL_STATUS_UNSPECIFIED
                    - PROPOSAL_STATUS_DEPOSIT_PERIOD
                    - PROPOSAL_STATUS_VOTING_PERIOD
                    - PROPOSAL_STATUS_PASSED
                    - PROPOSAL_STATUS_REJECTED
                    - PROPOSAL_STATUS_FAILED
                    type: string
                  submit_time:
                    description: submit_time is the time of proposal submission.
                    format: date-time
                    type: string
                  summary:
                    title: summary is a short summary of the proposal
                    type: string
                  title:
                    title: title is the title of the proposal
                    type: string
                  total_deposit:
                    description: total_deposit is the total deposit on the proposal.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  voting_end_time:
                    description: voting_end_time is the end time of voting on a proposal.
                    format: date-time
                    type: string
                  voting_start_time:
                    description: voting_start_time is the starting time to vote on
                      a proposal.
                    format: date-time
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Proposal queries proposal details based on ProposalID.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      operationId: Query_GovV1Deposit
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
            properties:
              deposits:
                description: deposits defines the requested deposits.
                items:
                  description: 'Deposit defines an amount deposited by an account
                    address to an active

                    proposal.'
                  properties:
                    amount:
                      description: amount to be deposited by depositor.
                      items:
                        description: 'Coin defines a token with a denomination and
                          an amount.


                          NOTE: The amount field is an Int which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    depositor:
                      description: depositor defines the deposit addresses from the
                        proposals.
                      type: string
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Deposits queries all deposits of a single proposal.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Query_GovV1Deposit
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: path
        name: depositor
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
            properties:
              deposit:
                description: 'Deposit defines an amount deposited by an account address
                  to an active

                  proposal.'
                properties:
                  amount:
                    description: amount to be deposited by depositor.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  depositor:
                    description: depositor defines the deposit addresses from the
                      proposals.
                    type: string
                  proposal_id:
                    description: proposal_id defines the unique id of the proposal.
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Deposit queries single deposit information based on proposalID,

        depositAddr.'
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      operationId: Query_GovV1TallyResult
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
            properties:
              tally:
                description: tally defines the requested tally.
                properties:
                  abstain_count:
                    description: abstain_count is the number of abstain votes on a
                      proposal.
                    type: string
                  no_count:
                    description: no_count is the number of no votes on a proposal.
                    type: string
                  no_with_veto_count:
                    description: no_with_veto_count is the number of no with veto
                      votes on a proposal.
                    type: string
                  yes_count:
                    description: yes_count is the number of yes votes on a proposal.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TallyResult queries the tally of a proposal vote.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      operationId: Query_GovV1Votes
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryVotesResponse is the response type for the Query/Votes
              RPC method.
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              votes:
                description: votes defines the queried votes.
                items:
                  description: 'Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote option.'
                  properties:
                    metadata:
                      title: 'metadata is any arbitrary metadata attached to the vote.

                        the recommended format of the metadata is to be found here:

                        https://docs.cosmos.network/v0.47/modules/gov#vote-5'
                      type: string
                    options:
                      description: options is the weighted vote options.
                      items:
                        description: WeightedVoteOption defines a unit of vote for
                          vote split.
                        properties:
                          option:
                            default: VOTE_OPTION_UNSPECIFIED
                            description: 'option defines the valid vote options, it
                              must not contain duplicate vote

                              options.'
                            enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                            type: string
                          weight:
                            description: weight is the vote weight associated with
                              the vote option.
                            type: string
                        type: object
                      type: array
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    voter:
                      description: voter is the voter address of the proposal.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Votes queries votes of a given proposal.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Query_GovV1Vote
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: voter defines the voter address for the proposals.
        in: path
        name: voter
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryVoteResponse is the response type for the Query/Vote
              RPC method.
            properties:
              vote:
                description: 'Vote defines a vote on a governance proposal.

                  A Vote consists of a proposal ID, the voter, and the vote option.'
                properties:
                  metadata:
                    title: 'metadata is any arbitrary metadata attached to the vote.

                      the recommended format of the metadata is to be found here:

                      https://docs.cosmos.network/v0.47/modules/gov#vote-5'
                    type: string
                  options:
                    description: options is the weighted vote options.
                    items:
                      description: WeightedVoteOption defines a unit of vote for vote
                        split.
                      properties:
                        option:
                          default: VOTE_OPTION_UNSPECIFIED
                          description: 'option defines the valid vote options, it
                            must not contain duplicate vote

                            options.'
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                          type: string
                        weight:
                          description: weight is the vote weight associated with the
                            vote option.
                          type: string
                      type: object
                    type: array
                  proposal_id:
                    description: proposal_id defines the unique id of the proposal.
                    format: uint64
                    type: string
                  voter:
                    description: voter is the voter address of the proposal.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
      - Query
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      operationId: Query_GovParams
      parameters:
      - description: 'params_type defines which parameters to query for, can be one
          of "voting",

          "tallying" or "deposit".'
        in: path
        name: params_type
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              deposit_params:
                description: deposit_params defines the parameters related to deposit.
                properties:
                  max_deposit_period:
                    description: 'Maximum period for Atom holders to deposit on a
                      proposal. Initial value: 2

                      months.'
                    type: string
                  min_deposit:
                    description: Minimum deposit for a proposal to enter voting period.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              tally_params:
                description: tally_params defines the parameters related to tally.
                properties:
                  quorum:
                    description: 'Minimum percentage of total stake needed to vote
                      for a result to be

                      considered valid.'
                    format: byte
                    type: string
                  threshold:
                    description: 'Minimum proportion of Yes votes for proposal to
                      pass. Default value: 0.5.'
                    format: byte
                    type: string
                  veto_threshold:
                    description: 'Minimum value of Veto votes to Total votes ratio
                      for proposal to be

                      vetoed. Default value: 1/3.'
                    format: byte
                    type: string
                type: object
              voting_params:
                description: voting_params defines the parameters related to voting.
                properties:
                  voting_period:
                    description: Duration of the voting period.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the gov module.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      operationId: Query_Proposals
      parameters:
      - default: PROPOSAL_STATUS_UNSPECIFIED
        description: "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
          \ PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
          \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n\
          period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
          \ defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED:\
          \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n\
          passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a\
          \ proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
          \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
          failed."
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        in: query
        name: proposal_status
        required: false
        type: string
      - description: voter defines the voter address for the proposals.
        in: query
        name: voter
        required: false
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: query
        name: depositor
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryProposalsResponse is the response type for the Query/Proposals
              RPC

              method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              proposals:
                description: proposals defines all the requested governance proposals.
                items:
                  description: Proposal defines the core field members of a governance
                    proposal.
                  properties:
                    content:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    deposit_end_time:
                      description: deposit_end_time is the end time for deposition.
                      format: date-time
                      type: string
                    final_tally_result:
                      description: 'final_tally_result is the final tally result of
                        the proposal. When

                        querying a proposal via gRPC, this field is not populated
                        until the

                        proposal''s voting period has ended.'
                      properties:
                        abstain:
                          description: abstain is the number of abstain votes on a
                            proposal.
                          type: string
                        'no':
                          description: no is the number of no votes on a proposal.
                          type: string
                        no_with_veto:
                          description: no_with_veto is the number of no with veto
                            votes on a proposal.
                          type: string
                        'yes':
                          description: yes is the number of yes votes on a proposal.
                          type: string
                      type: object
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    status:
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      description: status defines the proposal status.
                      enum:
                      - PROPOSAL_STATUS_UNSPECIFIED
                      - PROPOSAL_STATUS_DEPOSIT_PERIOD
                      - PROPOSAL_STATUS_VOTING_PERIOD
                      - PROPOSAL_STATUS_PASSED
                      - PROPOSAL_STATUS_REJECTED
                      - PROPOSAL_STATUS_FAILED
                      type: string
                    submit_time:
                      description: submit_time is the time of proposal submission.
                      format: date-time
                      type: string
                    total_deposit:
                      description: total_deposit is the total deposit on the proposal.
                      items:
                        description: 'Coin defines a token with a denomination and
                          an amount.


                          NOTE: The amount field is an Int which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    voting_end_time:
                      description: voting_end_time is the end time of voting on a
                        proposal.
                      format: date-time
                      type: string
                    voting_start_time:
                      description: voting_start_time is the starting time to vote
                        on a proposal.
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Proposals queries all proposals based on given status.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      operationId: Query_Proposal
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
            properties:
              proposal:
                description: Proposal defines the core field members of a governance
                  proposal.
                properties:
                  content:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  deposit_end_time:
                    description: deposit_end_time is the end time for deposition.
                    format: date-time
                    type: string
                  final_tally_result:
                    description: 'final_tally_result is the final tally result of
                      the proposal. When

                      querying a proposal via gRPC, this field is not populated until
                      the

                      proposal''s voting period has ended.'
                    properties:
                      abstain:
                        description: abstain is the number of abstain votes on a proposal.
                        type: string
                      'no':
                        description: no is the number of no votes on a proposal.
                        type: string
                      no_with_veto:
                        description: no_with_veto is the number of no with veto votes
                          on a proposal.
                        type: string
                      'yes':
                        description: yes is the number of yes votes on a proposal.
                        type: string
                    type: object
                  proposal_id:
                    description: proposal_id defines the unique id of the proposal.
                    format: uint64
                    type: string
                  status:
                    default: PROPOSAL_STATUS_UNSPECIFIED
                    description: status defines the proposal status.
                    enum:
                    - PROPOSAL_STATUS_UNSPECIFIED
                    - PROPOSAL_STATUS_DEPOSIT_PERIOD
                    - PROPOSAL_STATUS_VOTING_PERIOD
                    - PROPOSAL_STATUS_PASSED
                    - PROPOSAL_STATUS_REJECTED
                    - PROPOSAL_STATUS_FAILED
                    type: string
                  submit_time:
                    description: submit_time is the time of proposal submission.
                    format: date-time
                    type: string
                  total_deposit:
                    description: total_deposit is the total deposit on the proposal.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  voting_end_time:
                    description: voting_end_time is the end time of voting on a proposal.
                    format: date-time
                    type: string
                  voting_start_time:
                    description: voting_start_time is the starting time to vote on
                      a proposal.
                    format: date-time
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Proposal queries proposal details based on ProposalID.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      operationId: Query_Deposits
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
            properties:
              deposits:
                description: deposits defines the requested deposits.
                items:
                  description: 'Deposit defines an amount deposited by an account
                    address to an active

                    proposal.'
                  properties:
                    amount:
                      description: amount to be deposited by depositor.
                      items:
                        description: 'Coin defines a token with a denomination and
                          an amount.


                          NOTE: The amount field is an Int which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    depositor:
                      description: depositor defines the deposit addresses from the
                        proposals.
                      type: string
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Deposits queries all deposits of a single proposal.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Query_Deposit
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: path
        name: depositor
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
            properties:
              deposit:
                description: 'Deposit defines an amount deposited by an account address
                  to an active

                  proposal.'
                properties:
                  amount:
                    description: amount to be deposited by depositor.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  depositor:
                    description: depositor defines the deposit addresses from the
                      proposals.
                    type: string
                  proposal_id:
                    description: proposal_id defines the unique id of the proposal.
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Deposit queries single deposit information based on proposalID, depositor

        address.'
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      operationId: Query_TallyResult
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
            properties:
              tally:
                description: tally defines the requested tally.
                properties:
                  abstain:
                    description: abstain is the number of abstain votes on a proposal.
                    type: string
                  'no':
                    description: no is the number of no votes on a proposal.
                    type: string
                  no_with_veto:
                    description: no_with_veto is the number of no with veto votes
                      on a proposal.
                    type: string
                  'yes':
                    description: yes is the number of yes votes on a proposal.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TallyResult queries the tally of a proposal vote.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      operationId: Query_Votes
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryVotesResponse is the response type for the Query/Votes
              RPC method.
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              votes:
                description: votes defines the queried votes.
                items:
                  description: 'Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote option.'
                  properties:
                    option:
                      default: VOTE_OPTION_UNSPECIFIED
                      description: 'Deprecated: Prefer to use `options` instead. This
                        field is set in queries

                        if and only if `len(options) == 1` and that option has weight
                        1. In all

                        other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                      type: string
                    options:
                      description: options is the weighted vote options.
                      items:
                        description: WeightedVoteOption defines a unit of vote for
                          vote split.
                        properties:
                          option:
                            default: VOTE_OPTION_UNSPECIFIED
                            description: 'option defines the valid vote options, it
                              must not contain duplicate vote

                              options.'
                            enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                            type: string
                          weight:
                            description: weight is the vote weight associated with
                              the vote option.
                            type: string
                        type: object
                      type: array
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    voter:
                      description: voter is the voter address of the proposal.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Votes queries votes of a given proposal.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Query_Vote
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: voter defines the voter address for the proposals.
        in: path
        name: voter
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryVoteResponse is the response type for the Query/Vote
              RPC method.
            properties:
              vote:
                description: 'Vote defines a vote on a governance proposal.

                  A Vote consists of a proposal ID, the voter, and the vote option.'
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: 'Deprecated: Prefer to use `options` instead. This
                      field is set in queries

                      if and only if `len(options) == 1` and that option has weight
                      1. In all

                      other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  options:
                    description: options is the weighted vote options.
                    items:
                      description: WeightedVoteOption defines a unit of vote for vote
                        split.
                      properties:
                        option:
                          default: VOTE_OPTION_UNSPECIFIED
                          description: 'option defines the valid vote options, it
                            must not contain duplicate vote

                            options.'
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                          type: string
                        weight:
                          description: weight is the vote weight associated with the
                            vote option.
                          type: string
                      type: object
                    type: array
                  proposal_id:
                    description: proposal_id defines the unique id of the proposal.
                    format: uint64
                    type: string
                  voter:
                    description: voter is the voter address of the proposal.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
      - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      operationId: Query_AnnualProvisions
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAnnualProvisionsResponse is the response type for the

              Query/AnnualProvisions RPC method.'
            properties:
              annual_provisions:
                description: annual_provisions is the current minting annual provisions
                  value.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AnnualProvisions current minting annual provisions value.
      tags:
      - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      operationId: Query_Inflation
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryInflationResponse is the response type for the Query/Inflation
              RPC

              method.'
            properties:
              inflation:
                description: inflation is the current minting inflation value.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Inflation returns the current minting inflation value.
      tags:
      - Query
  /cosmos/mint/v1beta1/params:
    get:
      operationId: Query_MintParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  blocks_per_year:
                    format: uint64
                    title: expected blocks per year
                    type: string
                  goal_bonded:
                    title: goal of percent bonded atoms
                    type: string
                  inflation_max:
                    title: maximum inflation rate
                    type: string
                  inflation_min:
                    title: minimum inflation rate
                    type: string
                  inflation_rate_change:
                    title: maximum annual change in inflation rate
                    type: string
                  mint_denom:
                    title: type of coin to mint
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params returns the total set of minting parameters.
      tags:
      - Query
  /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
    get:
      operationId: Query_NftBalance
      parameters:
      - description: owner is the owner address of the nft
        in: path
        name: owner
        required: true
        type: string
      - description: class_id associated with the nft
        in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              amount:
                format: uint64
                title: amount is the number of all NFTs of a given class owned by
                  the owner
                type: string
            title: QueryBalanceResponse is the response type for the Query/Balance
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Balance queries the number of NFTs of a given class owned by the owner,

        same as balanceOf in ERC721'
      tags:
      - Query
  /cosmos/nft/v1beta1/classes:
    get:
      operationId: Query_Classes
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              classes:
                description: class defines the class of the nft type.
                items:
                  description: Class defines the class of the nft type.
                  properties:
                    data:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      title: data is the app specific metadata of the NFT class. Optional
                      type: object
                    description:
                      title: description is a brief description of nft classification.
                        Optional
                      type: string
                    id:
                      title: 'id defines the unique identifier of the NFT classification,
                        similar to the

                        contract address of ERC721'
                      type: string
                    name:
                      title: name defines the human-readable name of the NFT classification.
                        Optional
                      type: string
                    symbol:
                      title: symbol is an abbreviated name for nft classification.
                        Optional
                      type: string
                    uri:
                      title: 'uri for the class metadata stored off chain. It can
                        define schema for Class

                        and NFT `Data` attributes. Optional'
                      type: string
                    uri_hash:
                      title: uri_hash is a hash of the document pointed by uri. Optional
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            title: QueryClassesResponse is the response type for the Query/Classes
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Classes queries all NFT classes
      tags:
      - Query
  /cosmos/nft/v1beta1/classes/{class_id}:
    get:
      operationId: Query_Class
      parameters:
      - description: class_id associated with the nft
        in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              class:
                description: Class defines the class of the nft type.
                properties:
                  data:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    title: data is the app specific metadata of the NFT class. Optional
                    type: object
                  description:
                    title: description is a brief description of nft classification.
                      Optional
                    type: string
                  id:
                    title: 'id defines the unique identifier of the NFT classification,
                      similar to the

                      contract address of ERC721'
                    type: string
                  name:
                    title: name defines the human-readable name of the NFT classification.
                      Optional
                    type: string
                  symbol:
                    title: symbol is an abbreviated name for nft classification. Optional
                    type: string
                  uri:
                    title: 'uri for the class metadata stored off chain. It can define
                      schema for Class

                      and NFT `Data` attributes. Optional'
                    type: string
                  uri_hash:
                    title: uri_hash is a hash of the document pointed by uri. Optional
                    type: string
                type: object
            title: QueryClassResponse is the response type for the Query/Class RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Class queries an NFT class based on its id
      tags:
      - Query
  /cosmos/nft/v1beta1/nfts:
    get:
      operationId: Query_NFTs
      parameters:
      - description: class_id associated with the nft.
        in: query
        name: class_id
        required: false
        type: string
      - description: owner is the owner address of the nft.
        in: query
        name: owner
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              nfts:
                items:
                  description: NFT defines the NFT.
                  properties:
                    class_id:
                      title: class_id associated with the NFT, similar to the contract
                        address of ERC721
                      type: string
                    data:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      title: data is an app specific data of the NFT. Optional
                      type: object
                    id:
                      title: id is a unique identifier of the NFT
                      type: string
                    uri:
                      title: uri for the NFT metadata stored off chain
                      type: string
                    uri_hash:
                      title: uri_hash is a hash of the document pointed by uri
                      type: string
                  type: object
                title: NFT defines the NFT
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'NFTs queries all NFTs of a given class or owner,choose at least one
        of the

        two, similar to tokenByIndex in ERC721Enumerable'
      tags:
      - Query
  /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
    get:
      operationId: Query_NFT
      parameters:
      - description: class_id associated with the nft
        in: path
        name: class_id
        required: true
        type: string
      - description: id is a unique identifier of the NFT
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              nft:
                description: NFT defines the NFT.
                properties:
                  class_id:
                    title: class_id associated with the NFT, similar to the contract
                      address of ERC721
                    type: string
                  data:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    title: data is an app specific data of the NFT. Optional
                    type: object
                  id:
                    title: id is a unique identifier of the NFT
                    type: string
                  uri:
                    title: uri for the NFT metadata stored off chain
                    type: string
                  uri_hash:
                    title: uri_hash is a hash of the document pointed by uri
                    type: string
                title: owner is the owner address of the nft
                type: object
            title: QueryNFTResponse is the response type for the Query/NFT RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: NFT queries an NFT based on its class and id.
      tags:
      - Query
  /cosmos/nft/v1beta1/owner/{class_id}/{id}:
    get:
      operationId: Query_Owner
      parameters:
      - description: class_id associated with the nft
        in: path
        name: class_id
        required: true
        type: string
      - description: id is a unique identifier of the NFT
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              owner:
                title: owner is the owner address of the nft
                type: string
            title: QueryOwnerResponse is the response type for the Query/Owner RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Owner queries the owner of the NFT based on its class and id, same
        as

        ownerOf in ERC721'
      tags:
      - Query
  /cosmos/nft/v1beta1/supply/{class_id}:
    get:
      operationId: Query_Supply
      parameters:
      - description: class_id associated with the nft
        in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              amount:
                format: uint64
                title: amount is the number of all NFTs from the given class
                type: string
            title: QuerySupplyResponse is the response type for the Query/Supply RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Supply queries the number of NFTs from the given class, same as totalSupply

        of ERC721.'
      tags:
      - Query
  /cosmos/params/v1beta1/params:
    get:
      operationId: Query_Params
      parameters:
      - description: subspace defines the module to query the parameter for.
        in: query
        name: subspace
        required: false
        type: string
      - description: key defines the key of the parameter in the subspace.
        in: query
        name: key
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is response type for the Query/Params
              RPC method.
            properties:
              param:
                description: param defines the queried parameter.
                properties:
                  key:
                    type: string
                  subspace:
                    type: string
                  value:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Params queries a specific parameter of a module, given its subspace
        and

        key.'
      tags:
      - Query
  /cosmos/params/v1beta1/subspaces:
    get:
      operationId: Query_Subspaces
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QuerySubspacesResponse defines the response types for querying
              for all

              registered subspaces and all keys for a subspace.'
            properties:
              subspaces:
                items:
                  description: 'Subspace defines a parameter subspace name and all
                    the keys that exist for

                    the subspace.'
                  properties:
                    keys:
                      items:
                        type: string
                      type: array
                    subspace:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Subspaces queries for all registered subspaces and all keys for a subspace.
      tags:
      - Query
  /cosmos/slashing/v1beta1/params:
    get:
      operationId: Query_SlashingParams
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              params:
                description: Params represents the parameters used for by the slashing
                  module.
                properties:
                  downtime_jail_duration:
                    type: string
                  min_signed_per_window:
                    format: byte
                    type: string
                  signed_blocks_window:
                    format: int64
                    type: string
                  slash_fraction_double_sign:
                    format: byte
                    type: string
                  slash_fraction_downtime:
                    format: byte
                    type: string
                type: object
            title: QueryParamsResponse is the response type for the Query/Params RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of slashing module
      tags:
      - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      operationId: Query_SigningInfos
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              info:
                items:
                  description: 'ValidatorSigningInfo defines a validator''s signing
                    info for monitoring their

                    liveness activity.'
                  properties:
                    address:
                      type: string
                    index_offset:
                      description: 'Index which is incremented every time a validator
                        is bonded in a block and

                        _may_ have signed a pre-commit or not. This in conjunction
                        with the

                        signed_blocks_window param determines the index in the missed
                        block bitmap.'
                      format: int64
                      type: string
                    jailed_until:
                      description: Timestamp until which the validator is jailed due
                        to liveness downtime.
                      format: date-time
                      type: string
                    missed_blocks_counter:
                      description: 'A counter of missed (unsigned) blocks. It is used
                        to avoid unnecessary

                        reads in the missed block bitmap.'
                      format: int64
                      type: string
                    start_height:
                      format: int64
                      title: Height at which validator was first a candidate OR was
                        un-jailed
                      type: string
                    tombstoned:
                      description: 'Whether or not a validator has been tombstoned
                        (killed out of validator

                        set). It is set once the validator commits an equivocation
                        or for any other

                        configured misbehavior.'
                      type: boolean
                  type: object
                title: info is the signing info of all validators
                type: array
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            title: 'QuerySigningInfosResponse is the response type for the Query/SigningInfos
              RPC

              method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SigningInfos queries signing info of all validators
      tags:
      - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      operationId: Query_SigningInfo
      parameters:
      - description: cons_address is the address to query signing info of
        in: path
        name: cons_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              val_signing_info:
                description: 'ValidatorSigningInfo defines a validator''s signing
                  info for monitoring their

                  liveness activity.'
                properties:
                  address:
                    type: string
                  index_offset:
                    description: 'Index which is incremented every time a validator
                      is bonded in a block and

                      _may_ have signed a pre-commit or not. This in conjunction with
                      the

                      signed_blocks_window param determines the index in the missed
                      block bitmap.'
                    format: int64
                    type: string
                  jailed_until:
                    description: Timestamp until which the validator is jailed due
                      to liveness downtime.
                    format: date-time
                    type: string
                  missed_blocks_counter:
                    description: 'A counter of missed (unsigned) blocks. It is used
                      to avoid unnecessary

                      reads in the missed block bitmap.'
                    format: int64
                    type: string
                  start_height:
                    format: int64
                    title: Height at which validator was first a candidate OR was
                      un-jailed
                    type: string
                  tombstoned:
                    description: 'Whether or not a validator has been tombstoned (killed
                      out of validator

                      set). It is set once the validator commits an equivocation or
                      for any other

                      configured misbehavior.'
                    type: boolean
                title: val_signing_info is the signing info of requested val cons
                  address
                type: object
            title: 'QuerySigningInfoResponse is the response type for the Query/SigningInfo
              RPC

              method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SigningInfo queries the signing info of given cons address
      tags:
      - Query
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_DelegatorDelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegatorDelegationsResponse is response type for the

              Query/DelegatorDelegations RPC method.'
            properties:
              delegation_responses:
                description: delegation_responses defines all the delegations' info
                  of a delegator.
                items:
                  description: 'DelegationResponse is equivalent to Delegation except
                    that it contains a

                    balance in addition to shares which is more suitable for client
                    responses.'
                  properties:
                    balance:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    delegation:
                      description: 'Delegation represents the bond with tokens held
                        by an account. It is

                        owned by one delegator, and is associated with the voting
                        power of one

                        validator.'
                      properties:
                        delegator_address:
                          description: delegator_address is the encoded address of
                            the delegator.
                          type: string
                        shares:
                          description: shares define the delegation shares received.
                          type: string
                        validator_address:
                          description: validator_address is the encoded address of
                            the validator.
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_Redelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: src_validator_addr defines the validator address to redelegate
          from.
        in: query
        name: src_validator_addr
        required: false
        type: string
      - description: dst_validator_addr defines the validator address to redelegate
          to.
        in: query
        name: dst_validator_addr
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryRedelegationsResponse is response type for the Query/Redelegations
              RPC

              method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              redelegation_responses:
                items:
                  description: 'RedelegationResponse is equivalent to a Redelegation
                    except that its entries

                    contain a balance in addition to shares which is more suitable
                    for client

                    responses.'
                  properties:
                    entries:
                      items:
                        description: 'RedelegationEntryResponse is equivalent to a
                          RedelegationEntry except that it

                          contains a balance in addition to shares which is more suitable
                          for client

                          responses.'
                        properties:
                          balance:
                            type: string
                          redelegation_entry:
                            description: RedelegationEntry defines a redelegation
                              object with relevant metadata.
                            properties:
                              completion_time:
                                description: completion_time defines the unix time
                                  for redelegation completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height  defines the height which
                                  the redelegation took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the initial balance
                                  when redelegation started.
                                type: string
                              shares_dst:
                                description: 'shares_dst is the amount of destination-validator
                                  shares created by

                                  redelegation.'
                                type: string
                              unbonding_id:
                                format: uint64
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                              unbonding_on_hold_ref_count:
                                format: int64
                                title: 'Strictly positive if this entry''s unbonding
                                  has been stopped by external

                                  modules'
                                type: string
                            type: object
                        type: object
                      type: array
                    redelegation:
                      description: 'Redelegation contains the list of a particular
                        delegator''s redelegating bonds

                        from a particular source validator to a particular destination
                        validator.'
                      properties:
                        delegator_address:
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                          type: string
                        entries:
                          description: entries are the redelegation entries.
                          items:
                            description: RedelegationEntry defines a redelegation
                              object with relevant metadata.
                            properties:
                              completion_time:
                                description: completion_time defines the unix time
                                  for redelegation completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height  defines the height which
                                  the redelegation took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the initial balance
                                  when redelegation started.
                                type: string
                              shares_dst:
                                description: 'shares_dst is the amount of destination-validator
                                  shares created by

                                  redelegation.'
                                type: string
                              unbonding_id:
                                format: uint64
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                              unbonding_on_hold_ref_count:
                                format: int64
                                title: 'Strictly positive if this entry''s unbonding
                                  has been stopped by external

                                  modules'
                                type: string
                            type: object
                          type: array
                        validator_dst_address:
                          description: 'validator_dst_address is the validator redelegation
                            destination operator

                            address.'
                          type: string
                        validator_src_address:
                          description: 'validator_src_address is the validator redelegation
                            source operator

                            address.'
                          type: string
                      type: object
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Redelegations queries redelegations of given address.
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_DelegatorUnbondingDelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryUnbondingDelegatorDelegationsResponse is response type
              for the

              Query/UnbondingDelegatorDelegations RPC method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              unbonding_responses:
                items:
                  description: 'UnbondingDelegation stores all of a single delegator''s
                    unbonding bonds

                    for a single validator in an time-ordered list.'
                  properties:
                    delegator_address:
                      description: delegator_address is the encoded address of the
                        delegator.
                      type: string
                    entries:
                      description: entries are the unbonding delegation entries.
                      items:
                        description: UnbondingDelegationEntry defines an unbonding
                          object with relevant metadata.
                        properties:
                          balance:
                            description: balance defines the tokens to receive at
                              completion.
                            type: string
                          completion_time:
                            description: completion_time is the unix time for unbonding
                              completion.
                            format: date-time
                            type: string
                          creation_height:
                            description: creation_height is the height which the unbonding
                              took place.
                            format: int64
                            type: string
                          initial_balance:
                            description: 'initial_balance defines the tokens initially
                              scheduled to receive at

                              completion.'
                            type: string
                          unbonding_id:
                            format: uint64
                            title: Incrementing id that uniquely identifies this entry
                            type: string
                          unbonding_on_hold_ref_count:
                            format: int64
                            title: 'Strictly positive if this entry''s unbonding has
                              been stopped by external

                              modules'
                            type: string
                        type: object
                      type: array
                    validator_address:
                      description: validator_address is the encoded address of the
                        validator.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DelegatorUnbondingDelegations queries all unbonding delegations of
        a given

        delegator address.'
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_StakingDelegatorValidators
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegatorValidatorsResponse is response type for the

              Query/DelegatorValidators RPC method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              validators:
                description: validators defines the validators' info of a delegator.
                items:
                  description: 'Validator defines a validator, together with the total
                    amount of the

                    Validator''s bond shares and their exchange rate to coins. Slashing
                    results in

                    a decrease in the exchange rate, allowing correct calculation
                    of future

                    undelegations without iterating over delegators. When coins are
                    delegated to

                    this validator, the validator is credited with a delegation whose
                    number of

                    bond shares is based on the amount of coins delegated divided
                    by the current

                    exchange rate. Voting power can be calculated as total bonded
                    shares

                    multiplied by exchange rate.'
                  properties:
                    commission:
                      description: commission defines the commission parameters.
                      properties:
                        commission_rates:
                          description: 'commission_rates defines the initial commission
                            rates to be used for

                            creating a validator.'
                          properties:
                            max_change_rate:
                              description: 'max_change_rate defines the maximum daily
                                increase of the validator

                                commission, as a fraction.'
                              type: string
                            max_rate:
                              description: 'max_rate defines the maximum commission
                                rate which validator can ever

                                charge, as a fraction.'
                              type: string
                            rate:
                              description: rate is the commission rate charged to
                                delegators, as a fraction.
                              type: string
                          type: object
                        update_time:
                          description: update_time is the last time the commission
                            rate was changed.
                          format: date-time
                          type: string
                      type: object
                    consensus_pubkey:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    delegator_shares:
                      description: delegator_shares defines total shares issued to
                        a validator's delegators.
                      type: string
                    description:
                      description: description defines the description terms for the
                        validator.
                      properties:
                        details:
                          description: details define other optional details.
                          type: string
                        identity:
                          description: identity defines an optional identity signature
                            (ex. UPort or Keybase).
                          type: string
                        moniker:
                          description: moniker defines a human-readable name for the
                            validator.
                          type: string
                        security_contact:
                          description: security_contact defines an optional email
                            for security contact.
                          type: string
                        website:
                          description: website defines an optional website link.
                          type: string
                      type: object
                    jailed:
                      description: 'jailed defined whether the validator has been
                        jailed from bonded status or

                        not.'
                      type: boolean
                    min_self_delegation:
                      description: 'min_self_delegation is the validator''s self declared
                        minimum self

                        delegation.'
                      type: string
                    operator_address:
                      description: 'operator_address defines the address of the validator''s
                        operator; bech

                        encoded in JSON.'
                      type: string
                    status:
                      default: BOND_STATUS_UNSPECIFIED
                      description: status is the validator status (bonded/unbonding/unbonded).
                      enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                      type: string
                    tokens:
                      description: tokens define the delegated tokens (incl. self-delegation).
                      type: string
                    unbonding_height:
                      description: 'unbonding_height defines, if unbonding, the height
                        at which this validator

                        has begun unbonding.'
                      format: int64
                      type: string
                    unbonding_ids:
                      items:
                        format: uint64
                        type: string
                      title: 'list of unbonding ids, each uniquely identifing an unbonding
                        of this

                        validator'
                      type: array
                    unbonding_on_hold_ref_count:
                      format: int64
                      title: 'strictly positive if this validator''s unbonding has
                        been stopped by

                        external modules'
                      type: string
                    unbonding_time:
                      description: 'unbonding_time defines, if unbonding, the min
                        time for the validator to

                        complete unbonding.'
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DelegatorValidators queries all validators info for given delegator

        address.'
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      operationId: Query_DelegatorValidator
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegatorValidatorResponse response type for the

              Query/DelegatorValidator RPC method.'
            properties:
              validator:
                description: 'Validator defines a validator, together with the total
                  amount of the

                  Validator''s bond shares and their exchange rate to coins. Slashing
                  results in

                  a decrease in the exchange rate, allowing correct calculation of
                  future

                  undelegations without iterating over delegators. When coins are
                  delegated to

                  this validator, the validator is credited with a delegation whose
                  number of

                  bond shares is based on the amount of coins delegated divided by
                  the current

                  exchange rate. Voting power can be calculated as total bonded shares

                  multiplied by exchange rate.'
                properties:
                  commission:
                    description: commission defines the commission parameters.
                    properties:
                      commission_rates:
                        description: 'commission_rates defines the initial commission
                          rates to be used for

                          creating a validator.'
                        properties:
                          max_change_rate:
                            description: 'max_change_rate defines the maximum daily
                              increase of the validator

                              commission, as a fraction.'
                            type: string
                          max_rate:
                            description: 'max_rate defines the maximum commission
                              rate which validator can ever

                              charge, as a fraction.'
                            type: string
                          rate:
                            description: rate is the commission rate charged to delegators,
                              as a fraction.
                            type: string
                        type: object
                      update_time:
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                        type: string
                    type: object
                  consensus_pubkey:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  delegator_shares:
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                    type: string
                  description:
                    description: description defines the description terms for the
                      validator.
                    properties:
                      details:
                        description: details define other optional details.
                        type: string
                      identity:
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                        type: string
                      moniker:
                        description: moniker defines a human-readable name for the
                          validator.
                        type: string
                      security_contact:
                        description: security_contact defines an optional email for
                          security contact.
                        type: string
                      website:
                        description: website defines an optional website link.
                        type: string
                    type: object
                  jailed:
                    description: 'jailed defined whether the validator has been jailed
                      from bonded status or

                      not.'
                    type: boolean
                  min_self_delegation:
                    description: 'min_self_delegation is the validator''s self declared
                      minimum self

                      delegation.'
                    type: string
                  operator_address:
                    description: 'operator_address defines the address of the validator''s
                      operator; bech

                      encoded in JSON.'
                    type: string
                  status:
                    default: BOND_STATUS_UNSPECIFIED
                    description: status is the validator status (bonded/unbonding/unbonded).
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                    type: string
                  tokens:
                    description: tokens define the delegated tokens (incl. self-delegation).
                    type: string
                  unbonding_height:
                    description: 'unbonding_height defines, if unbonding, the height
                      at which this validator

                      has begun unbonding.'
                    format: int64
                    type: string
                  unbonding_ids:
                    items:
                      format: uint64
                      type: string
                    title: 'list of unbonding ids, each uniquely identifing an unbonding
                      of this

                      validator'
                    type: array
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: 'strictly positive if this validator''s unbonding has been
                      stopped by

                      external modules'
                    type: string
                  unbonding_time:
                    description: 'unbonding_time defines, if unbonding, the min time
                      for the validator to

                      complete unbonding.'
                    format: date-time
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DelegatorValidator queries validator info for given delegator validator

        pair.'
      tags:
      - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      operationId: Query_HistoricalInfo
      parameters:
      - description: height defines at which height to query the historical info.
        format: int64
        in: path
        name: height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
              RPC

              method.'
            properties:
              hist:
                description: hist defines the historical info at the given height.
                properties:
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: prev block info
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        description: 'Consensus captures the consensus rules for processing
                          a block in the

                          blockchain, including all blockchain data structures and
                          the rules of the

                          application''s state transition machine.'
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        title: basic block info
                        type: object
                    type: object
                  valset:
                    items:
                      description: 'Validator defines a validator, together with the
                        total amount of the

                        Validator''s bond shares and their exchange rate to coins.
                        Slashing results in

                        a decrease in the exchange rate, allowing correct calculation
                        of future

                        undelegations without iterating over delegators. When coins
                        are delegated to

                        this validator, the validator is credited with a delegation
                        whose number of

                        bond shares is based on the amount of coins delegated divided
                        by the current

                        exchange rate. Voting power can be calculated as total bonded
                        shares

                        multiplied by exchange rate.'
                      properties:
                        commission:
                          description: commission defines the commission parameters.
                          properties:
                            commission_rates:
                              description: 'commission_rates defines the initial commission
                                rates to be used for

                                creating a validator.'
                              properties:
                                max_change_rate:
                                  description: 'max_change_rate defines the maximum
                                    daily increase of the validator

                                    commission, as a fraction.'
                                  type: string
                                max_rate:
                                  description: 'max_rate defines the maximum commission
                                    rate which validator can ever

                                    charge, as a fraction.'
                                  type: string
                                rate:
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                  type: string
                              type: object
                            update_time:
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                              type: string
                          type: object
                        consensus_pubkey:
                          properties:
                            type_url:
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        delegator_shares:
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                          type: string
                        description:
                          description: description defines the description terms for
                            the validator.
                          properties:
                            details:
                              description: details define other optional details.
                              type: string
                            identity:
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                              type: string
                            moniker:
                              description: moniker defines a human-readable name for
                                the validator.
                              type: string
                            security_contact:
                              description: security_contact defines an optional email
                                for security contact.
                              type: string
                            website:
                              description: website defines an optional website link.
                              type: string
                          type: object
                        jailed:
                          description: 'jailed defined whether the validator has been
                            jailed from bonded status or

                            not.'
                          type: boolean
                        min_self_delegation:
                          description: 'min_self_delegation is the validator''s self
                            declared minimum self

                            delegation.'
                          type: string
                        operator_address:
                          description: 'operator_address defines the address of the
                            validator''s operator; bech

                            encoded in JSON.'
                          type: string
                        status:
                          default: BOND_STATUS_UNSPECIFIED
                          description: status is the validator status (bonded/unbonding/unbonded).
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                          type: string
                        tokens:
                          description: tokens define the delegated tokens (incl. self-delegation).
                          type: string
                        unbonding_height:
                          description: 'unbonding_height defines, if unbonding, the
                            height at which this validator

                            has begun unbonding.'
                          format: int64
                          type: string
                        unbonding_ids:
                          items:
                            format: uint64
                            type: string
                          title: 'list of unbonding ids, each uniquely identifing
                            an unbonding of this

                            validator'
                          type: array
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: 'strictly positive if this validator''s unbonding
                            has been stopped by

                            external modules'
                          type: string
                        unbonding_time:
                          description: 'unbonding_time defines, if unbonding, the
                            min time for the validator to

                            complete unbonding.'
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: HistoricalInfo queries the historical info for given height.
      tags:
      - Query
  /cosmos/staking/v1beta1/params:
    get:
      operationId: Query_StakingParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  bond_denom:
                    description: bond_denom defines the bondable coin denomination.
                    type: string
                  historical_entries:
                    description: historical_entries is the number of historical entries
                      to persist.
                    format: int64
                    type: integer
                  max_entries:
                    description: 'max_entries is the max entries for either unbonding
                      delegation or

                      redelegation (per pair/trio).'
                    format: int64
                    type: integer
                  max_validators:
                    description: max_validators is the maximum number of validators.
                    format: int64
                    type: integer
                  min_commission_rate:
                    title: 'min_commission_rate is the chain-wide minimum commission
                      rate that a

                      validator can charge their delegators'
                    type: string
                  unbonding_time:
                    description: unbonding_time is the time duration of unbonding.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the staking parameters.
      tags:
      - Query
  /cosmos/staking/v1beta1/pool:
    get:
      operationId: Query_Pool
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryPoolResponse is response type for the Query/Pool RPC
              method.
            properties:
              pool:
                description: pool defines the pool info.
                properties:
                  bonded_tokens:
                    type: string
                  not_bonded_tokens:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Pool queries the pool info.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_Validators
      parameters:
      - description: status enables to query for validators matching a given status.
        in: query
        name: status
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              validators:
                description: validators contains all the queried validators.
                items:
                  description: 'Validator defines a validator, together with the total
                    amount of the

                    Validator''s bond shares and their exchange rate to coins. Slashing
                    results in

                    a decrease in the exchange rate, allowing correct calculation
                    of future

                    undelegations without iterating over delegators. When coins are
                    delegated to

                    this validator, the validator is credited with a delegation whose
                    number of

                    bond shares is based on the amount of coins delegated divided
                    by the current

                    exchange rate. Voting power can be calculated as total bonded
                    shares

                    multiplied by exchange rate.'
                  properties:
                    commission:
                      description: commission defines the commission parameters.
                      properties:
                        commission_rates:
                          description: 'commission_rates defines the initial commission
                            rates to be used for

                            creating a validator.'
                          properties:
                            max_change_rate:
                              description: 'max_change_rate defines the maximum daily
                                increase of the validator

                                commission, as a fraction.'
                              type: string
                            max_rate:
                              description: 'max_rate defines the maximum commission
                                rate which validator can ever

                                charge, as a fraction.'
                              type: string
                            rate:
                              description: rate is the commission rate charged to
                                delegators, as a fraction.
                              type: string
                          type: object
                        update_time:
                          description: update_time is the last time the commission
                            rate was changed.
                          format: date-time
                          type: string
                      type: object
                    consensus_pubkey:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    delegator_shares:
                      description: delegator_shares defines total shares issued to
                        a validator's delegators.
                      type: string
                    description:
                      description: description defines the description terms for the
                        validator.
                      properties:
                        details:
                          description: details define other optional details.
                          type: string
                        identity:
                          description: identity defines an optional identity signature
                            (ex. UPort or Keybase).
                          type: string
                        moniker:
                          description: moniker defines a human-readable name for the
                            validator.
                          type: string
                        security_contact:
                          description: security_contact defines an optional email
                            for security contact.
                          type: string
                        website:
                          description: website defines an optional website link.
                          type: string
                      type: object
                    jailed:
                      description: 'jailed defined whether the validator has been
                        jailed from bonded status or

                        not.'
                      type: boolean
                    min_self_delegation:
                      description: 'min_self_delegation is the validator''s self declared
                        minimum self

                        delegation.'
                      type: string
                    operator_address:
                      description: 'operator_address defines the address of the validator''s
                        operator; bech

                        encoded in JSON.'
                      type: string
                    status:
                      default: BOND_STATUS_UNSPECIFIED
                      description: status is the validator status (bonded/unbonding/unbonded).
                      enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                      type: string
                    tokens:
                      description: tokens define the delegated tokens (incl. self-delegation).
                      type: string
                    unbonding_height:
                      description: 'unbonding_height defines, if unbonding, the height
                        at which this validator

                        has begun unbonding.'
                      format: int64
                      type: string
                    unbonding_ids:
                      items:
                        format: uint64
                        type: string
                      title: 'list of unbonding ids, each uniquely identifing an unbonding
                        of this

                        validator'
                      type: array
                    unbonding_on_hold_ref_count:
                      format: int64
                      title: 'strictly positive if this validator''s unbonding has
                        been stopped by

                        external modules'
                      type: string
                    unbonding_time:
                      description: 'unbonding_time defines, if unbonding, the min
                        time for the validator to

                        complete unbonding.'
                      format: date-time
                      type: string
                  type: object
                type: array
            title: QueryValidatorsResponse is response type for the Query/Validators
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Validators queries all validators that match the given status.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      operationId: Query_Validator
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              validator:
                description: 'Validator defines a validator, together with the total
                  amount of the

                  Validator''s bond shares and their exchange rate to coins. Slashing
                  results in

                  a decrease in the exchange rate, allowing correct calculation of
                  future

                  undelegations without iterating over delegators. When coins are
                  delegated to

                  this validator, the validator is credited with a delegation whose
                  number of

                  bond shares is based on the amount of coins delegated divided by
                  the current

                  exchange rate. Voting power can be calculated as total bonded shares

                  multiplied by exchange rate.'
                properties:
                  commission:
                    description: commission defines the commission parameters.
                    properties:
                      commission_rates:
                        description: 'commission_rates defines the initial commission
                          rates to be used for

                          creating a validator.'
                        properties:
                          max_change_rate:
                            description: 'max_change_rate defines the maximum daily
                              increase of the validator

                              commission, as a fraction.'
                            type: string
                          max_rate:
                            description: 'max_rate defines the maximum commission
                              rate which validator can ever

                              charge, as a fraction.'
                            type: string
                          rate:
                            description: rate is the commission rate charged to delegators,
                              as a fraction.
                            type: string
                        type: object
                      update_time:
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                        type: string
                    type: object
                  consensus_pubkey:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  delegator_shares:
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                    type: string
                  description:
                    description: description defines the description terms for the
                      validator.
                    properties:
                      details:
                        description: details define other optional details.
                        type: string
                      identity:
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                        type: string
                      moniker:
                        description: moniker defines a human-readable name for the
                          validator.
                        type: string
                      security_contact:
                        description: security_contact defines an optional email for
                          security contact.
                        type: string
                      website:
                        description: website defines an optional website link.
                        type: string
                    type: object
                  jailed:
                    description: 'jailed defined whether the validator has been jailed
                      from bonded status or

                      not.'
                    type: boolean
                  min_self_delegation:
                    description: 'min_self_delegation is the validator''s self declared
                      minimum self

                      delegation.'
                    type: string
                  operator_address:
                    description: 'operator_address defines the address of the validator''s
                      operator; bech

                      encoded in JSON.'
                    type: string
                  status:
                    default: BOND_STATUS_UNSPECIFIED
                    description: status is the validator status (bonded/unbonding/unbonded).
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                    type: string
                  tokens:
                    description: tokens define the delegated tokens (incl. self-delegation).
                    type: string
                  unbonding_height:
                    description: 'unbonding_height defines, if unbonding, the height
                      at which this validator

                      has begun unbonding.'
                    format: int64
                    type: string
                  unbonding_ids:
                    items:
                      format: uint64
                      type: string
                    title: 'list of unbonding ids, each uniquely identifing an unbonding
                      of this

                      validator'
                    type: array
                  unbonding_on_hold_ref_count:
                    format: int64
                    title: 'strictly positive if this validator''s unbonding has been
                      stopped by

                      external modules'
                    type: string
                  unbonding_time:
                    description: 'unbonding_time defines, if unbonding, the min time
                      for the validator to

                      complete unbonding.'
                    format: date-time
                    type: string
                type: object
            title: QueryValidatorResponse is response type for the Query/Validator
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Validator queries validator info for given validator address.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_ValidatorDelegations
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              delegation_responses:
                items:
                  description: 'DelegationResponse is equivalent to Delegation except
                    that it contains a

                    balance in addition to shares which is more suitable for client
                    responses.'
                  properties:
                    balance:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    delegation:
                      description: 'Delegation represents the bond with tokens held
                        by an account. It is

                        owned by one delegator, and is associated with the voting
                        power of one

                        validator.'
                      properties:
                        delegator_address:
                          description: delegator_address is the encoded address of
                            the delegator.
                          type: string
                        shares:
                          description: shares define the delegation shares received.
                          type: string
                        validator_address:
                          description: validator_address is the encoded address of
                            the validator.
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            title: 'QueryValidatorDelegationsResponse is response type for the

              Query/ValidatorDelegations RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ValidatorDelegations queries delegate info for given validator.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      operationId: Query_Delegation
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDelegationResponse is response type for the Query/Delegation
              RPC method.
            properties:
              delegation_response:
                description: 'DelegationResponse is equivalent to Delegation except
                  that it contains a

                  balance in addition to shares which is more suitable for client
                  responses.'
                properties:
                  balance:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  delegation:
                    description: 'Delegation represents the bond with tokens held
                      by an account. It is

                      owned by one delegator, and is associated with the voting power
                      of one

                      validator.'
                    properties:
                      delegator_address:
                        description: delegator_address is the encoded address of the
                          delegator.
                        type: string
                      shares:
                        description: shares define the delegation shares received.
                        type: string
                      validator_address:
                        description: validator_address is the encoded address of the
                          validator.
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Delegation queries delegate info for given validator delegator pair.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      operationId: Query_UnbondingDelegation
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDelegationResponse is response type for the Query/UnbondingDelegation

              RPC method.'
            properties:
              unbond:
                description: 'UnbondingDelegation stores all of a single delegator''s
                  unbonding bonds

                  for a single validator in an time-ordered list.'
                properties:
                  delegator_address:
                    description: delegator_address is the encoded address of the delegator.
                    type: string
                  entries:
                    description: entries are the unbonding delegation entries.
                    items:
                      description: UnbondingDelegationEntry defines an unbonding object
                        with relevant metadata.
                      properties:
                        balance:
                          description: balance defines the tokens to receive at completion.
                          type: string
                        completion_time:
                          description: completion_time is the unix time for unbonding
                            completion.
                          format: date-time
                          type: string
                        creation_height:
                          description: creation_height is the height which the unbonding
                            took place.
                          format: int64
                          type: string
                        initial_balance:
                          description: 'initial_balance defines the tokens initially
                            scheduled to receive at

                            completion.'
                          type: string
                        unbonding_id:
                          format: uint64
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                        unbonding_on_hold_ref_count:
                          format: int64
                          title: 'Strictly positive if this entry''s unbonding has
                            been stopped by external

                            modules'
                          type: string
                      type: object
                    type: array
                  validator_address:
                    description: validator_address is the encoded address of the validator.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UnbondingDelegation queries unbonding info for given validator delegator

        pair.'
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      description: 'When called from another module, this query might consume a high
        amount of

        gas if the pagination field is incorrectly set.'
      operationId: Query_ValidatorUnbondingDelegations
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryValidatorUnbondingDelegationsResponse is response type
              for the

              Query/ValidatorUnbondingDelegations RPC method.'
            properties:
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              unbonding_responses:
                items:
                  description: 'UnbondingDelegation stores all of a single delegator''s
                    unbonding bonds

                    for a single validator in an time-ordered list.'
                  properties:
                    delegator_address:
                      description: delegator_address is the encoded address of the
                        delegator.
                      type: string
                    entries:
                      description: entries are the unbonding delegation entries.
                      items:
                        description: UnbondingDelegationEntry defines an unbonding
                          object with relevant metadata.
                        properties:
                          balance:
                            description: balance defines the tokens to receive at
                              completion.
                            type: string
                          completion_time:
                            description: completion_time is the unix time for unbonding
                              completion.
                            format: date-time
                            type: string
                          creation_height:
                            description: creation_height is the height which the unbonding
                              took place.
                            format: int64
                            type: string
                          initial_balance:
                            description: 'initial_balance defines the tokens initially
                              scheduled to receive at

                              completion.'
                            type: string
                          unbonding_id:
                            format: uint64
                            title: Incrementing id that uniquely identifies this entry
                            type: string
                          unbonding_on_hold_ref_count:
                            format: int64
                            title: 'Strictly positive if this entry''s unbonding has
                              been stopped by external

                              modules'
                            type: string
                        type: object
                      type: array
                    validator_address:
                      description: validator_address is the encoded address of the
                        validator.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      tags:
      - Query
  /cosmos/tx/v1beta1/decode:
    post:
      operationId: Service_TxDecode
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'TxDecodeRequest is the request type for the Service.TxDecode

            RPC method.'
          properties:
            tx_bytes:
              description: tx_bytes is the raw transaction.
              format: byte
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.TxDecodeResponse'
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxDecode decodes the transaction.
      tags:
      - Service
  /cosmos/tx/v1beta1/decode/amino:
    post:
      operationId: Service_TxDecodeAmino
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino

            RPC method.'
          properties:
            amino_binary:
              format: byte
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino

              RPC method.'
            properties:
              amino_json:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      tags:
      - Service
  /cosmos/tx/v1beta1/encode:
    post:
      operationId: Service_TxEncode
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cosmos.tx.v1beta1.TxEncodeRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'TxEncodeResponse is the response type for the

              Service.TxEncode method.'
            properties:
              tx_bytes:
                description: tx_bytes is the encoded transaction bytes.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxEncode encodes the transaction.
      tags:
      - Service
  /cosmos/tx/v1beta1/encode/amino:
    post:
      operationId: Service_TxEncodeAmino
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino

            RPC method.'
          properties:
            amino_json:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino

              RPC method.'
            properties:
              amino_binary:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      tags:
      - Service
  /cosmos/tx/v1beta1/simulate:
    post:
      operationId: Service_Simulate
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cosmos.tx.v1beta1.SimulateRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'SimulateResponse is the response type for the

              Service.SimulateRPC method.'
            properties:
              gas_info:
                description: gas_info is the information about gas used in the simulation.
                properties:
                  gas_used:
                    description: GasUsed is the amount of gas actually consumed.
                    format: uint64
                    type: string
                  gas_wanted:
                    description: GasWanted is the maximum units of work we allow this
                      tx to perform.
                    format: uint64
                    type: string
                type: object
              result:
                description: result is the result of the simulation.
                properties:
                  data:
                    description: 'Data is any data returned from message or handler
                      execution. It MUST be

                      length prefixed in order to separate data from multiple message
                      executions.

                      Deprecated. This field is still populated, but prefer msg_response
                      instead

                      because it also contains the Msg response typeURL.'
                    format: byte
                    type: string
                  events:
                    description: 'Events contains a slice of Event objects that were
                      emitted during message

                      or handler execution.'
                    items:
                      description: 'Event allows application developers to attach
                        additional information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.'
                      properties:
                        attributes:
                          items:
                            description: EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    description: Log contains the log information from message or
                      handler execution.
                    type: string
                  msg_responses:
                    description: msg_responses contains the Msg handler responses
                      type packed in Anys.
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulate simulates executing a transaction for estimating gas usage.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs:
    get:
      operationId: Service_GetTxsEvent
      parameters:
      - collectionFormat: multi
        description: 'events is the list of transaction event type.

          Deprecated post v0.47.x: use query instead, which should contain a valid

          events query.'
        in: query
        items:
          type: string
        name: events
        required: false
        type: array
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      - default: ORDER_BY_UNSPECIFIED
        description: " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
          \ sorting order. OrderBy defaults\nto ASC in this case.\n - ORDER_BY_ASC:\
          \ ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC\
          \ defines descending order"
        enum:
        - ORDER_BY_UNSPECIFIED
        - ORDER_BY_ASC
        - ORDER_BY_DESC
        in: query
        name: order_by
        required: false
        type: string
      - description: 'page is the page number to query, starts at 1. If not provided,
          will

          default to first page.'
        format: uint64
        in: query
        name: page
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: limit
        required: false
        type: string
      - description: 'query defines the transaction event query that is proxied to
          Tendermint''s

          TxSearch RPC method. The query must be valid.'
        in: query
        name: query
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetTxsEvent fetches txs by event.
      tags:
      - Service
    post:
      operationId: Service_BroadcastTx
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'BroadcastTxRequest is the request type for the Service.BroadcastTxRequest

            RPC method.'
          properties:
            mode:
              default: BROADCAST_MODE_UNSPECIFIED
              description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
                \ RPC\nmethod.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode\
                \ ordering\n - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC\
                \ instead,\nBROADCAST_MODE_BLOCK is not supported by the SDK from\
                \ v0.47.x onwards.\n - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines\
                \ a tx broadcasting mode where the client waits\nfor a CheckTx execution\
                \ response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines\
                \ a tx broadcasting mode where the client\nreturns immediately."
              enum:
              - BROADCAST_MODE_UNSPECIFIED
              - BROADCAST_MODE_BLOCK
              - BROADCAST_MODE_SYNC
              - BROADCAST_MODE_ASYNC
              type: string
            tx_bytes:
              description: tx_bytes is the raw transaction.
              format: byte
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'BroadcastTxResponse is the response type for the

              Service.BroadcastTx method.'
            properties:
              tx_response:
                description: 'TxResponse defines a structure containing relevant tx
                  data and metadata. The

                  tags are stringified and the log is JSON decoded.'
                properties:
                  code:
                    description: Response code.
                    format: int64
                    type: integer
                  codespace:
                    title: Namespace for the Code
                    type: string
                  data:
                    description: Result bytes, if any.
                    type: string
                  events:
                    description: 'Events defines all the events emitted by processing
                      a transaction. Note,

                      these events include those emitted by processing all the messages
                      and those

                      emitted from the ante. Whereas Logs contains the events, with

                      additional metadata, emitted only by processing the messages.'
                    items:
                      description: 'Event allows application developers to attach
                        additional information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.'
                      properties:
                        attributes:
                          items:
                            description: EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  gas_used:
                    description: Amount of gas consumed by transaction.
                    format: int64
                    type: string
                  gas_wanted:
                    description: Amount of gas requested for transaction.
                    format: int64
                    type: string
                  height:
                    format: int64
                    title: The block height
                    type: string
                  info:
                    description: Additional information. May be non-deterministic.
                    type: string
                  logs:
                    description: The output of the application's logger (typed). May
                      be non-deterministic.
                    items:
                      description: ABCIMessageLog defines a structure containing an
                        indexed tx ABCI message log.
                      properties:
                        events:
                          description: 'Events contains a slice of Event objects that
                            were emitted during some

                            execution.'
                          items:
                            description: 'StringEvent defines en Event object wrapper
                              where all the attributes

                              contain key/value pairs that are strings instead of
                              raw bytes.'
                            properties:
                              attributes:
                                items:
                                  description: 'Attribute defines an attribute wrapper
                                    where the key and value are

                                    strings instead of raw bytes.'
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                          type: array
                        log:
                          type: string
                        msg_index:
                          format: int64
                          type: integer
                      type: object
                    type: array
                  raw_log:
                    description: 'The output of the application''s logger (raw string).
                      May be

                      non-deterministic.'
                    type: string
                  timestamp:
                    description: 'Time of the previous block. For heights > 1, it''s
                      the weighted median of

                      the timestamps of the valid votes in the block.LastCommit. For
                      height == 1,

                      it''s genesis time.'
                    type: string
                  tx:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  txhash:
                    description: The transaction hash.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: BroadcastTx broadcast transaction.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      operationId: Service_GetBlockWithTxs
      parameters:
      - description: height is the height of the block to query.
        format: int64
        in: path
        name: height
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetBlockWithTxs fetches a block with decoded txs.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      operationId: Service_GetTx
      parameters:
      - description: hash is the tx hash to query, encoded as a hex string.
        in: path
        name: hash
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetTx fetches a tx by hash.
      tags:
      - Service
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      operationId: Query_AppliedPlan
      parameters:
      - description: name is the name of the applied plan to query for.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
              RPC

              method.'
            properties:
              height:
                description: height is the block height at which the plan was applied.
                format: int64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      operationId: Query_Authority
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              address:
                type: string
            title: QueryAuthorityResponse is the response type for Query/Authority
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Returns the account with authority to conduct upgrades
      tags:
      - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      operationId: Query_CurrentPlan
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
              RPC

              method.'
            properties:
              plan:
                description: plan is the current upgrade plan.
                properties:
                  height:
                    description: The height at which the upgrade must be performed.
                    format: int64
                    type: string
                  info:
                    title: 'Any application specific upgrade info to be included on-chain

                      such as a git commit that validators could automatically upgrade
                      to'
                    type: string
                  name:
                    description: 'Sets the name for the upgrade. This name will be
                      used by the upgraded

                      version of the software to apply any special "on-upgrade" commands
                      during

                      the first BeginBlock method after the upgrade is applied. It
                      is also used

                      to detect whether a software version can handle a given upgrade.
                      If no

                      upgrade handler with this name has been set in the software,
                      it will be

                      assumed that the software is out-of-date when the upgrade Time
                      or Height is

                      reached and the software will exit.'
                    type: string
                  time:
                    description: 'Deprecated: Time based upgrades have been deprecated.
                      Time based upgrade

                      logic has been removed from the SDK. If this field is not empty,
                      an error

                      will be thrown.'
                    format: date-time
                    type: string
                  upgraded_client_state:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CurrentPlan queries the current upgrade plan.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      operationId: Query_ModuleVersions
      parameters:
      - description: 'module_name is a field to query a specific module

          consensus version from state. Leaving this empty will

          fetch the full list of module versions from state.'
        in: query
        name: module_name
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryModuleVersionsResponse is the response type for the
              Query/ModuleVersions

              RPC method.'
            properties:
              module_versions:
                description: module_versions is a list of module names with their
                  consensus versions.
                items:
                  description: ModuleVersion specifies a module and its consensus
                    version.
                  properties:
                    name:
                      title: name of the app module
                      type: string
                    version:
                      format: uint64
                      title: consensus version of the app module
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleVersions queries the list of module versions from state.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      operationId: Query_UpgradedConsensusState
      parameters:
      - description: 'last height of the current chain must be sent in request

          as this is the height under which next consensus state is stored'
        format: int64
        in: path
        name: last_height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryUpgradedConsensusStateResponse is the response type
              for the

              Query/UpgradedConsensusState RPC method.'
            properties:
              upgraded_consensus_state:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)'
      tags:
      - Query
  /dysonprotocol.crontask.v1.Msg/CreateTask:
    post:
      operationId: Msg_CreateTask
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            creator:
              title: Address of the creator of the task
              type: string
            expiry_timestamp:
              title: 'Unix timestamp after which the task will expire if not executed

                Can be either a Unix timestamp or a time offset prefixed with "+"
                (e.g.

                "+2h") When using an offset, it''s relative to the scheduled_timestamp'
              type: string
            msgs:
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              title: Messages to execute as part of the task
              type: array
            scheduled_timestamp:
              title: 'Unix timestamp when the task is scheduled to execute

                Can be either a Unix timestamp or a time offset prefixed with "+"
                (e.g.

                "+1h30m") Offset is relative to the current block time'
              type: string
            task_gas_fee:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              title: Gas fee for the task execution
              type: object
            task_gas_limit:
              format: uint64
              title: Maximum gas limit for the task execution
              type: string
          title: MsgCreateTask defines the message for creating a new task
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              task_id:
                format: uint64
                title: The ID of the created task
                type: string
            title: MsgCreateTaskResponse defines the response for creating a new task
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CreateTask creates a new scheduled task
      tags:
      - Msg
  /dysonprotocol.crontask.v1.Msg/DeleteTask:
    post:
      operationId: Msg_DeleteTask
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            creator:
              title: Address of the creator of the task
              type: string
            task_id:
              format: uint64
              title: ID of the task to delete
              type: string
          title: MsgDeleteTask defines the message for deleting a task
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgDeleteTaskResponse defines the response for deleting a task
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DeleteTask deletes a scheduled task
      tags:
      - Msg
  /dysonprotocol.crontask.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateCrontaskParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: '---------------------------------------------------------------------------

            MsgUpdateParams

            ---------------------------------------------------------------------------

            UpdateParams defines a governance operation for updating the x/crontask

            module parameters. The authority defaults to the x/gov module account.'
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/crontask parameters to update.

                NOTE: All parameters must be supplied.'
              properties:
                block_gas_limit:
                  format: uint64
                  title: Maximum gas allowed for executing tasks per block
                  type: string
                clean_up_time:
                  format: int64
                  title: Retention period for completed/failed/expired tasks (seconds)
                  type: string
                expiry_limit:
                  format: int64
                  title: Default expiry limit in seconds (24 hours)
                  type: string
                max_scheduled_time:
                  format: int64
                  title: Maximum allowed scheduled time in seconds from task creation
                    (24 hours)
                  type: string
              title: Params defines the parameters for the crontask module
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateParams updates the parameters of the x/crontask module
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/AcceptBid:
    post:
      operationId: Msg_AcceptBid
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            nft_class_id:
              type: string
            nft_id:
              type: string
            owner:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/BurnCoins:
    post:
      operationId: Msg_BurnCoins
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgBurnCoins burns coins from the owner''s balance, if each
            coin''s root name

            is owned by that owner.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: Using the same annotation as MintCoins for consistency
              type: array
            owner:
              title: Owner address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: Response for BurnCoins
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/BurnNFT:
    post:
      operationId: Msg_BurnNFT
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            class_id:
              type: string
            nft_id:
              type: string
            owner:
              type: string
          title: BurnNFT
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/ClaimBid:
    post:
      operationId: Msg_ClaimBid
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            bidder:
              type: string
            nft_class_id:
              type: string
            nft_id:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/Commit:
    post:
      operationId: Msg_Commit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            committer:
              type: string
            hexhash:
              type: string
            valuation:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/MintCoins:
    post:
      operationId: Msg_MintCoins
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgMintCoins mints coins into the owner''s balance, as long
            as each coin''s

            "root name" is owned by that owner.'
          properties:
            amount:
              description: 'Using repeated cosmos.base.v1beta1.Coin with the annotation

                (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"

                so that the generated Go code will have `Amount sdk.Coins` automatically.'
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            owner:
              title: Owner must be a valid address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: Response for MintCoins
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/MintNFT:
    post:
      operationId: Msg_MintNFT
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            class_id:
              type: string
            nft_id:
              type: string
            owner:
              type: string
            uri:
              type: string
            uri_hash:
              type: string
          title: MintNFT
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/MoveCoins:
    post:
      operationId: Msg_MoveCoins
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgMoveCoins moves custom denom coins between two accounts
            if signer owns the

            root denom.'
          properties:
            inputs:
              description: 'Single input expected: the account holding the coins.'
              items:
                description: Input models transaction input.
                properties:
                  address:
                    type: string
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            outputs:
              description: One or multiple outputs; each destination must be a non-module
                account.
              items:
                description: Output models transaction outputs.
                properties:
                  address:
                    type: string
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            owner:
              description: Signer must own the root name of each coin denoms in all
                inputs.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/MoveNft:
    post:
      operationId: Msg_MoveNft
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgMoveNft moves an NFT between accounts when signer owns the
            NFT class.
          properties:
            class_id:
              type: string
            from_address:
              title: Current holder (must match NFT owner, non-module)
              type: string
            nft_id:
              type: string
            owner:
              title: Signer owning class root name
              type: string
            to_address:
              title: Destination holder (non-module)
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/PlaceBid:
    post:
      operationId: Msg_PlaceBid
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            bid_amount:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            bidder:
              type: string
            nft_class_id:
              type: string
            nft_id:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/RejectBid:
    post:
      operationId: Msg_RejectBid
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            new_valuation:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            nft_class_id:
              type: string
            nft_id:
              type: string
            owner:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/Renew:
    post:
      operationId: Msg_Renew
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            nft_class_id:
              type: string
            nft_id:
              type: string
            payer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              expiry:
                format: date-time
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/Reveal:
    post:
      operationId: Msg_Reveal
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            committer:
              type: string
            name:
              type: string
            salt:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SaveClass:
    post:
      operationId: Msg_SaveClass
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            class_id:
              type: string
            description:
              type: string
            name:
              type: string
            owner:
              type: string
            symbol:
              type: string
            uri:
              type: string
            uri_hash:
              type: string
          title: SaveClass
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SetDenomMetadata:
    post:
      operationId: Msg_SetDenomMetadata
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSetDenomMetadata allows a governance-authorized account
            to set denom

            metadata.'
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            metadata:
              description: The bank module metadata describing the denom, display,
                base, etc.
              properties:
                base:
                  description: base represents the base denom (should be the DenomUnit
                    with exponent = 0).
                  type: string
                denom_units:
                  items:
                    description: 'DenomUnit represents a struct that describes a given

                      denomination unit of the basic token.'
                    properties:
                      aliases:
                        items:
                          type: string
                        title: aliases is a list of string aliases for the given denom
                        type: array
                      denom:
                        description: denom represents the string name of the given
                          denom unit (e.g uatom).
                        type: string
                      exponent:
                        description: 'exponent represents power of 10 exponent that
                          one must

                          raise the base_denom to in order to equal the given DenomUnit''s
                          denom

                          1 denom = 10^exponent base_denom

                          (e.g. with a base_denom of uatom, one can create a DenomUnit
                          of ''atom'' with

                          exponent = 6, thus: 1 atom = 10^6 uatom).'
                        format: int64
                        type: integer
                    type: object
                  title: denom_units represents the list of DenomUnit's for a given
                    coin
                  type: array
                description:
                  type: string
                display:
                  description: 'display indicates the suggested denom that should
                    be

                    displayed in clients.'
                  type: string
                name:
                  title: 'name defines the name of the token (eg: Cosmos Atom)'
                  type: string
                symbol:
                  description: 'symbol is the token symbol usually shown on exchanges
                    (eg: ATOM). This can

                    be the same as the display.'
                  type: string
                uri:
                  description: 'URI to a document (on or off-chain) that contains
                    additional information.

                    Optional.'
                  type: string
                uri_hash:
                  description: 'URIHash is a sha256 hash of a document pointed by
                    URI. It''s used to verify

                    that the document didn''t change. Optional.'
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgSetDenomMetadataResponse defines the response structure
              for executing a

              MsgSetDenomMetadata message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SetDestination:
    post:
      operationId: Msg_SetDestination
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            destination:
              type: string
            name:
              type: string
            owner:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SetNFTClassExtraData:
    post:
      operationId: Msg_SetNFTClassExtraData
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            class_id:
              type: string
            extra_data:
              type: string
            owner:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SetNFTMetadata:
    post:
      operationId: Msg_SetNFTMetadata
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            class_id:
              type: string
            metadata:
              type: string
            nft_id:
              type: string
            owner:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/SetValuation:
    post:
      operationId: Msg_SetValuation
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            nft_class_id:
              type: string
            nft_id:
              type: string
            owner:
              type: string
            valuation:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.nameservice.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateNameserviceParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/nameservice parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                allowed_denoms:
                  items:
                    type: string
                  title: 'allowed_denoms defines the denominations that are allowed
                    to be used for

                    valuations and bids'
                  type: array
                bid_timeout:
                  title: 'bid_timeout defines the duration after which a bid can be
                    claimed by the

                    bidder'
                  type: string
                minimum_bid_percent_increase:
                  title: 'minimum_bid_percent_increase defines the minimum percentage
                    increase

                    required for a new bid compared to the previous bid'
                  type: string
                reject_bid_valuation_fee_percent:
                  title: 'reject_bid_valuation_fee_percent defines the percentage
                    of the new

                    valuation to charge as a fee when rejecting a bid'
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
      - Msg
  /dysonprotocol.script.v1.Msg/CreateNewScript:
    post:
      operationId: Msg_CreateNewScript
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgCreateNewScript is the Msg/CreateNewScript request type.
          properties:
            code:
              description: code is the script content.
              type: string
            creator_address:
              description: creator is the account address creating the script.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgCreateNewScriptResponse is the Msg/CreateNewScript response
              type.
            properties:
              script_address:
                description: script_address is the address of the newly created script.
                type: string
              version:
                description: version is the initial script version.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Create a new script with new address = hash(creator + content), a
        new authz

        updatescript permission will also be created for the creator'
      tags:
      - Msg
  /dysonprotocol.script.v1.Msg/ExecScript:
    post:
      operationId: Msg_ExecScript
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgExec executes a script by calling a function with arguments.
          properties:
            args:
              title: 'The positional arguments to pass to the function (*args) encoded
                as a

                json list'
              type: string
            attached_messages:
              description: 'Any attached_messages is the list of attached messages

                to run before the script and the result will be passed

                to the script. If any of the attached messages fails,

                the script execution will be aborted.'
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            executor_address:
              description: executor is the account address used to execute the script.
              type: string
            extra_code:
              description: 'Only if the executor is the owner of the script  will
                the optional

                extra_code be temporary appended to the script for this message before

                calling the function.'
              type: string
            function_name:
              title: The function name to run
              type: string
            kwargs:
              title: 'The keyword argument to pass to the function (**kwargs) encoded
                as a

                json dict'
              type: string
            script_address:
              title: 'address is the script address to execute.

                This can be either a bech32 address or a nameservice name (e.g.,

                "example.dys")'
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgExecResponse is the Msg/Exec request type.
            properties:
              attached_message_results:
                description: Results of the attached messages.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              result:
                description: result is the final result of the proposal execution.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ExecScript executes a script by calling a function with arguments.
      tags:
      - Msg
  /dysonprotocol.script.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateScriptParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            authority:
              description: 'authority is the address that controls the module (defaults
                to x/gov unless

                overwritten).'
              type: string
            params:
              description: 'params defines the x/script parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                absolute_historical_block_cutoff:
                  description: 'absolute_historical_block_cutoff defines the lowest
                    absolute block height

                    that nodes are required to have when max_relative_historical_blocks
                    is

                    enforced. This parameter is used when params are updated so that
                    if

                    MaxRelativeHistoricalBlocks is increased, nodes are not suddenly
                    required

                    to retroactively have historical blocks that predate this cutoff.
                    When

                    MaxRelativeHistoricalBlocks validation occurs, the oldest required
                    block

                    height will be max(current_height - max_relative_historical_blocks,

                    absolute_historical_block_cutoff).'
                  format: int64
                  type: string
                max_relative_historical_blocks:
                  description: 'max_relative_historical_blocks defines the maximum
                    number of historical

                    blocks relative to the current block height that must be kept
                    by nodes for

                    script queries. For example, if this value is 1000 and the current
                    height

                    is 5000, nodes must be able to query blocks back to height 4000.'
                  format: int64
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateParams defines a governance operation for updating the x/script

        module parameters. The authority defaults to the x/gov module account.'
      tags:
      - Msg
  /dysonprotocol.script.v1.Msg/UpdateScript:
    post:
      operationId: Msg_UpdateScript
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateScript is the Msg/UpdateScript request type.
          properties:
            address:
              description: address is the account address of the script.
              type: string
            code:
              description: script is the updated script.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUpdateScriptResponse is the Msg/UpdateScript response
              type.
            properties:
              version:
                description: version is the updated script version.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Update Script updates the script of the given address and increments
        the

        the version.'
      tags:
      - Msg
  /dysonprotocol.storage.v1.Msg/StorageDelete:
    post:
      operationId: Msg_StorageDelete
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgStorageDelete is the message for deleting storage entries.
          properties:
            indexes:
              items:
                type: string
              title: List of indexes to delete
              type: array
            owner:
              description: The owner of the storage entries to delete.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgStorageDeleteResponse is the response for deleting storage
              entries.
            properties:
              deleted_indexes:
                items:
                  type: string
                title: List of indexes that were successfully deleted
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Deletes storage entries. Only the owner can delete.
      tags:
      - Msg
  /dysonprotocol.storage.v1.Msg/StorageSet:
    post:
      operationId: Msg_StorageSet
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgStorageSet is the message for setting a storage entry.
          properties:
            data:
              description: The data to set for the storage entry.
              type: string
            index:
              description: The index of the storage entry to set.
              type: string
            owner:
              description: The owner of the storage entry to set.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgStorageSetResponse is the response for setting a storage
              entry.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Sets a storage entry. Only the owner can set.
      tags:
      - Msg
  /dysonprotocol/crontask/v1/params:
    get:
      operationId: Query_CrontaskParams
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              params:
                properties:
                  block_gas_limit:
                    format: uint64
                    title: Maximum gas allowed for executing tasks per block
                    type: string
                  clean_up_time:
                    format: int64
                    title: Retention period for completed/failed/expired tasks (seconds)
                    type: string
                  expiry_limit:
                    format: int64
                    title: Default expiry limit in seconds (24 hours)
                    type: string
                  max_scheduled_time:
                    format: int64
                    title: Maximum allowed scheduled time in seconds from task creation
                      (24 hours)
                    type: string
                title: Params defines the parameters for the crontask module
                type: object
            title: QueryParamsResponse is the response type for the Query/Params RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params returns the module parameters
      tags:
      - Query
  /dysonprotocol/crontask/v1/tasks/all:
    get:
      operationId: Query_TasksAll
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              tasks:
                description: 'Explicit json tag without omitempty to ensure empty
                  arrays are included in

                  marshalled output so clients can reliably expect the "tasks" key.'
                items:
                  properties:
                    creation_time:
                      format: int64
                      title: Block timestamp when the task was created
                      type: string
                    creator:
                      title: Address of the creator of the task
                      type: string
                    error_log:
                      title: Error message if task execution failed
                      type: string
                    execution_timestamp:
                      format: int64
                      title: Block timestamp when the task was executed (only for
                        DONE / FAILED)
                      type: string
                    expiry_timestamp:
                      format: int64
                      title: Unix timestamp after which the task will expire if not
                        executed
                      type: string
                    msg_results:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Results of message execution
                      type: array
                    msgs:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Messages to execute as part of the task
                      type: array
                    scheduled_timestamp:
                      format: int64
                      title: Unix timestamp when the task is scheduled to execute
                      type: string
                    status:
                      title: 'Current status of the task: Scheduled, Pending, Done,
                        Failed, Expired'
                      type: string
                    task_gas_consumed:
                      format: uint64
                      title: Actual gas consumed during task execution
                      type: string
                    task_gas_fee:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: Gas fee for the task execution
                      type: object
                    task_gas_limit:
                      format: uint64
                      title: Maximum gas limit for the task execution
                      type: string
                    task_gas_price:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: 'Gas price for the task execution which is calculated
                        automatically

                        from task_gas_fee / task_gas_limit'
                      type: object
                    task_id:
                      format: uint64
                      title: The unique identifier for the task
                      type: string
                  title: Task represents a scheduled task in the crontask system
                  type: object
                type: array
            title: 'QueryTasksResponse is the response type for task queries with
              multiple

              results'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TasksAll returns all tasks ordered by ID
      tags:
      - Query
  /dysonprotocol/crontask/v1/tasks/creator/{creator}:
    get:
      operationId: Query_TasksByAddress
      parameters:
      - in: path
        name: creator
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              tasks:
                description: 'Explicit json tag without omitempty to ensure empty
                  arrays are included in

                  marshalled output so clients can reliably expect the "tasks" key.'
                items:
                  properties:
                    creation_time:
                      format: int64
                      title: Block timestamp when the task was created
                      type: string
                    creator:
                      title: Address of the creator of the task
                      type: string
                    error_log:
                      title: Error message if task execution failed
                      type: string
                    execution_timestamp:
                      format: int64
                      title: Block timestamp when the task was executed (only for
                        DONE / FAILED)
                      type: string
                    expiry_timestamp:
                      format: int64
                      title: Unix timestamp after which the task will expire if not
                        executed
                      type: string
                    msg_results:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Results of message execution
                      type: array
                    msgs:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Messages to execute as part of the task
                      type: array
                    scheduled_timestamp:
                      format: int64
                      title: Unix timestamp when the task is scheduled to execute
                      type: string
                    status:
                      title: 'Current status of the task: Scheduled, Pending, Done,
                        Failed, Expired'
                      type: string
                    task_gas_consumed:
                      format: uint64
                      title: Actual gas consumed during task execution
                      type: string
                    task_gas_fee:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: Gas fee for the task execution
                      type: object
                    task_gas_limit:
                      format: uint64
                      title: Maximum gas limit for the task execution
                      type: string
                    task_gas_price:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: 'Gas price for the task execution which is calculated
                        automatically

                        from task_gas_fee / task_gas_limit'
                      type: object
                    task_id:
                      format: uint64
                      title: The unique identifier for the task
                      type: string
                  title: Task represents a scheduled task in the crontask system
                  type: object
                type: array
            title: 'QueryTasksResponse is the response type for task queries with
              multiple

              results'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TasksByAddress returns all tasks created by a specific address
      tags:
      - Query
  /dysonprotocol/crontask/v1/tasks/status/{status}:
    get:
      operationId: Query_TasksByStatusTimestamp
      parameters:
      - in: path
        name: status
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              tasks:
                description: 'Explicit json tag without omitempty to ensure empty
                  arrays are included in

                  marshalled output so clients can reliably expect the "tasks" key.'
                items:
                  properties:
                    creation_time:
                      format: int64
                      title: Block timestamp when the task was created
                      type: string
                    creator:
                      title: Address of the creator of the task
                      type: string
                    error_log:
                      title: Error message if task execution failed
                      type: string
                    execution_timestamp:
                      format: int64
                      title: Block timestamp when the task was executed (only for
                        DONE / FAILED)
                      type: string
                    expiry_timestamp:
                      format: int64
                      title: Unix timestamp after which the task will expire if not
                        executed
                      type: string
                    msg_results:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Results of message execution
                      type: array
                    msgs:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Messages to execute as part of the task
                      type: array
                    scheduled_timestamp:
                      format: int64
                      title: Unix timestamp when the task is scheduled to execute
                      type: string
                    status:
                      title: 'Current status of the task: Scheduled, Pending, Done,
                        Failed, Expired'
                      type: string
                    task_gas_consumed:
                      format: uint64
                      title: Actual gas consumed during task execution
                      type: string
                    task_gas_fee:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: Gas fee for the task execution
                      type: object
                    task_gas_limit:
                      format: uint64
                      title: Maximum gas limit for the task execution
                      type: string
                    task_gas_price:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: 'Gas price for the task execution which is calculated
                        automatically

                        from task_gas_fee / task_gas_limit'
                      type: object
                    task_id:
                      format: uint64
                      title: The unique identifier for the task
                      type: string
                  title: Task represents a scheduled task in the crontask system
                  type: object
                type: array
            title: 'QueryTasksResponse is the response type for task queries with
              multiple

              results'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'TasksByStatusTimestamp returns tasks filtered by status and ordered
        by

        timestamp'
      tags:
      - Query
  /dysonprotocol/crontask/v1/tasks/status/{status}/by_gas:
    get:
      operationId: Query_TasksByStatusGasPrice
      parameters:
      - in: path
        name: status
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
              tasks:
                description: 'Explicit json tag without omitempty to ensure empty
                  arrays are included in

                  marshalled output so clients can reliably expect the "tasks" key.'
                items:
                  properties:
                    creation_time:
                      format: int64
                      title: Block timestamp when the task was created
                      type: string
                    creator:
                      title: Address of the creator of the task
                      type: string
                    error_log:
                      title: Error message if task execution failed
                      type: string
                    execution_timestamp:
                      format: int64
                      title: Block timestamp when the task was executed (only for
                        DONE / FAILED)
                      type: string
                    expiry_timestamp:
                      format: int64
                      title: Unix timestamp after which the task will expire if not
                        executed
                      type: string
                    msg_results:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Results of message execution
                      type: array
                    msgs:
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      title: Messages to execute as part of the task
                      type: array
                    scheduled_timestamp:
                      format: int64
                      title: Unix timestamp when the task is scheduled to execute
                      type: string
                    status:
                      title: 'Current status of the task: Scheduled, Pending, Done,
                        Failed, Expired'
                      type: string
                    task_gas_consumed:
                      format: uint64
                      title: Actual gas consumed during task execution
                      type: string
                    task_gas_fee:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: Gas fee for the task execution
                      type: object
                    task_gas_limit:
                      format: uint64
                      title: Maximum gas limit for the task execution
                      type: string
                    task_gas_price:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      title: 'Gas price for the task execution which is calculated
                        automatically

                        from task_gas_fee / task_gas_limit'
                      type: object
                    task_id:
                      format: uint64
                      title: The unique identifier for the task
                      type: string
                  title: Task represents a scheduled task in the crontask system
                  type: object
                type: array
            title: 'QueryTasksResponse is the response type for task queries with
              multiple

              results'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'TasksByStatusGasPrice returns tasks filtered by status and ordered
        by gas

        price'
      tags:
      - Query
  /dysonprotocol/crontask/v1/tasks/{task_id}:
    get:
      operationId: Query_TaskByID
      parameters:
      - format: uint64
        in: path
        name: task_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              task:
                properties:
                  creation_time:
                    format: int64
                    title: Block timestamp when the task was created
                    type: string
                  creator:
                    title: Address of the creator of the task
                    type: string
                  error_log:
                    title: Error message if task execution failed
                    type: string
                  execution_timestamp:
                    format: int64
                    title: Block timestamp when the task was executed (only for DONE
                      / FAILED)
                    type: string
                  expiry_timestamp:
                    format: int64
                    title: Unix timestamp after which the task will expire if not
                      executed
                    type: string
                  msg_results:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    title: Results of message execution
                    type: array
                  msgs:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    title: Messages to execute as part of the task
                    type: array
                  scheduled_timestamp:
                    format: int64
                    title: Unix timestamp when the task is scheduled to execute
                    type: string
                  status:
                    title: 'Current status of the task: Scheduled, Pending, Done,
                      Failed, Expired'
                    type: string
                  task_gas_consumed:
                    format: uint64
                    title: Actual gas consumed during task execution
                    type: string
                  task_gas_fee:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    title: Gas fee for the task execution
                    type: object
                  task_gas_limit:
                    format: uint64
                    title: Maximum gas limit for the task execution
                    type: string
                  task_gas_price:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    title: 'Gas price for the task execution which is calculated automatically

                      from task_gas_fee / task_gas_limit'
                    type: object
                  task_id:
                    format: uint64
                    title: The unique identifier for the task
                    type: string
                title: Task represents a scheduled task in the crontask system
                type: object
            title: QueryTaskByIDResponse is the response type for the Query/TaskByID
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TaskByID returns a task by its ID
      tags:
      - Query
  /dysonprotocol/nameservice/v1/compute_hash:
    get:
      operationId: Query_ComputeHash
      parameters:
      - description: name is the name to compute the hash for.
        in: query
        name: name
        required: false
        type: string
      - description: salt is the salt to use for the hash computation.
        in: query
        name: salt
        required: false
        type: string
      - description: committer is the committer address.
        in: query
        name: committer
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              hex_hash:
                title: hex_hash is the computed hash as a hex string
                type: string
            title: ComputeHashResponse contains the computed hash as a hex string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ComputeHash computes the hash for a name, salt, and committer address
      tags:
      - Query
  /dysonprotocol/nameservice/v1/params:
    get:
      operationId: Query_NameserviceParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  allowed_denoms:
                    items:
                      type: string
                    title: 'allowed_denoms defines the denominations that are allowed
                      to be used for

                      valuations and bids'
                    type: array
                  bid_timeout:
                    title: 'bid_timeout defines the duration after which a bid can
                      be claimed by the

                      bidder'
                    type: string
                  minimum_bid_percent_increase:
                    title: 'minimum_bid_percent_increase defines the minimum percentage
                      increase

                      required for a new bid compared to the previous bid'
                    type: string
                  reject_bid_valuation_fee_percent:
                    title: 'reject_bid_valuation_fee_percent defines the percentage
                      of the new

                      valuation to charge as a fee when rejecting a bid'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the nameservice module parameters
      tags:
      - Query
  /dysonprotocol/script/v1/decode_bytes:
    get:
      operationId: Query_DecodeBytes
      parameters:
      - in: query
        name: type_url
        required: false
        type: string
      - description: bytes is the encoded bytes.
        format: byte
        in: query
        name: bytes
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryDecodeBytesResponse is the Query/DecodeBytes response
              type.
            properties:
              json:
                description: json is the decoded json string.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DecodeBytes decodes bytes to a JSON string.
      tags:
      - Query
  /dysonprotocol/script/v1/encode_json:
    get:
      operationId: Query_EncodeJson
      parameters:
      - description: json is the json string to encode.
        in: query
        name: json
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryEncodeJsonResponse is the Query/EncodeJson response
              type.
            properties:
              bytes:
                description: bytes is the encoded bytes.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: EncodeJson encodes a JSON string to bytes.
      tags:
      - Query
  /dysonprotocol/script/v1/params:
    get:
      operationId: Query_ScriptParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  absolute_historical_block_cutoff:
                    description: 'absolute_historical_block_cutoff defines the lowest
                      absolute block height

                      that nodes are required to have when max_relative_historical_blocks
                      is

                      enforced. This parameter is used when params are updated so
                      that if

                      MaxRelativeHistoricalBlocks is increased, nodes are not suddenly
                      required

                      to retroactively have historical blocks that predate this cutoff.
                      When

                      MaxRelativeHistoricalBlocks validation occurs, the oldest required
                      block

                      height will be max(current_height - max_relative_historical_blocks,

                      absolute_historical_block_cutoff).'
                    format: int64
                    type: string
                  max_relative_historical_blocks:
                    description: 'max_relative_historical_blocks defines the maximum
                      number of historical

                      blocks relative to the current block height that must be kept
                      by nodes for

                      script queries. For example, if this value is 1000 and the current
                      height

                      is 5000, nodes must be able to query blocks back to height 4000.'
                    format: int64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of the script module.
      tags:
      - Query
  /dysonprotocol/script/v1/script_info/{address}:
    get:
      operationId: Query_ScriptInfo
      parameters:
      - description: address is the account address of the script.
        in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryScriptInfoResponse is the Query/ScriptInfo response
              type.
            properties:
              script:
                description: info is the ScriptInfo of the script.
                properties:
                  address:
                    type: string
                  code:
                    type: string
                  version:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ScriptInfo queries script info based on script address
      tags:
      - Query
  /dysonprotocol/script/v1/verify_tx:
    get:
      operationId: Query_VerifyTx
      parameters:
      - description: The transaction as a JSON string.
        in: query
        name: tx_json
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            title: 'QueryVerifyTxResponse will be empty response on success, error
              will be raised

              on failure'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: VerifyTx verifies a transaction.
      tags:
      - Query
  /dysonprotocol/script/v1/web_request:
    post:
      operationId: Query_Web
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: QueryWebRequest is the Query/Web request type.
          properties:
            address_or_name:
              description: address is the account address of the script.
              type: string
            httprequest:
              description: httprequest is the http request.
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryWebResponse is the Query/Web response type.
            properties:
              httpresponse:
                description: httpresponse is the http response.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries the WSGI web application function of a script.
      tags:
      - Query
  /dysonprotocol/storage/v1/storage_get:
    get:
      operationId: Query_StorageGet
      parameters:
      - description: The address of the owner of the storage entry.
        in: query
        name: owner
        required: false
        type: string
      - description: The index of the storage entry.
        in: query
        name: index
        required: false
        type: string
      - description: The gjson path to extract from the storage entry.
        in: query
        name: extract
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              entry:
                properties:
                  data:
                    description: data is the stored string value associated with the
                      index.
                    type: string
                  hash:
                    description: hash is SHA-256 hex of data field.
                    type: string
                  index:
                    description: 'index is the key/index for the storage entry (within
                      the owner''s

                      namespace).'
                    type: string
                  owner:
                    description: owner is the account address that owns this storage
                      entry.
                    type: string
                  updated_height:
                    description: updated_height is block height of last modification.
                    format: uint64
                    type: string
                  updated_timestamp:
                    description: 'updated_timestamp is the block time in UTC (RFC3339
                      e.g.

                      "2025-06-11T15:23:00Z") when entry was modified.'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Gets the stored data for the given owner and index.
      tags:
      - Query
  /dysonprotocol/storage/v1/storage_list:
    get:
      operationId: Query_StorageList
      parameters:
      - description: The address of the owner of the storage entry.
        in: query
        name: owner
        required: false
        type: string
      - description: The index prefix of the storage entry to filter by.
        in: query
        name: index_prefix
        required: false
        type: string
      - description: 'The optional gjson filter to filter the storage entry. For example,
          Given

          data like {"user": {"age": 18}}, the filter "user.age > 18" will return

          true.'
        in: query
        name: filter
        required: false
        type: string
      - description: 'The optional gjson path to extract from the storage entry. For
          example,

          Given data like {"user": {"name": "jeff"}}, the extract "user.name" will

          return "jeff".'
        in: query
        name: extract
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              entries:
                items:
                  properties:
                    data:
                      description: data is the stored string value associated with
                        the index.
                      type: string
                    hash:
                      description: hash is SHA-256 hex of data field.
                      type: string
                    index:
                      description: 'index is the key/index for the storage entry (within
                        the owner''s

                        namespace).'
                      type: string
                    owner:
                      description: owner is the account address that owns this storage
                        entry.
                      type: string
                    updated_height:
                      description: updated_height is block height of last modification.
                      format: uint64
                      type: string
                    updated_timestamp:
                      description: 'updated_timestamp is the block time in UTC (RFC3339
                        e.g.

                        "2025-06-11T15:23:00Z") when entry was modified.'
                      type: string
                  type: object
                type: array
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'Lists all storage entries for the owner under a given index prefix.
        Use

        filter and extract to filter and extract the data and iterate over the data

        efficiently.'
      tags:
      - Query
  /ibc.applications.interchain_accounts.controller.v1.Msg/RegisterInterchainAccount:
    post:
      operationId: Msg_RegisterInterchainAccount
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            connection_id:
              type: string
            ordering:
              default: ORDER_NONE_UNSPECIFIED
              description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
                \ - ORDER_UNORDERED: packets can be delivered in any order, which\
                \ may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
                \ packets are delivered exactly in the order which they were sent"
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
              title: Order defines if a channel is ORDERED or UNORDERED
              type: string
            owner:
              type: string
            version:
              type: string
          title: MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              channel_id:
                type: string
              port_id:
                type: string
            title: 'MsgRegisterInterchainAccountResponse defines the response for

              Msg/RegisterAccount'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'RegisterInterchainAccount defines a rpc handler for

        MsgRegisterInterchainAccount.'
      tags:
      - Msg
  /ibc.applications.interchain_accounts.controller.v1.Msg/SendTx:
    post:
      operationId: Msg_SendTx
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            connection_id:
              type: string
            owner:
              type: string
            packet_data:
              description: 'InterchainAccountPacketData is comprised of a raw transaction,
                type of

                transaction and optional memo field.'
              properties:
                data:
                  format: byte
                  type: string
                memo:
                  type: string
                type:
                  default: TYPE_UNSPECIFIED
                  description: "- TYPE_UNSPECIFIED: Default zero value enumeration\n\
                    \ - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts\
                    \ host chain"
                  enum:
                  - TYPE_UNSPECIFIED
                  - TYPE_EXECUTE_TX
                  title: 'Type defines a classification of message issued from a controller
                    chain to

                    its associated interchain accounts host'
                  type: string
              type: object
            relative_timeout:
              description: 'Relative timeout timestamp provided will be added to the
                current block time

                during transaction execution. The timeout timestamp must be non-zero.'
              format: uint64
              type: string
          title: MsgSendTx defines the payload for Msg/SendTx
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              sequence:
                format: uint64
                type: string
            title: MsgSendTxResponse defines the response for MsgSendTx
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SendTx defines a rpc handler for MsgSendTx.
      tags:
      - Msg
  /ibc.applications.interchain_accounts.controller.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateIBCInterchainAccountsControllerParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            params:
              description: 'params defines the 27-interchain-accounts/controller parameters
                to update.


                NOTE: All parameters must be supplied.'
              properties:
                controller_enabled:
                  description: controller_enabled enables or disables the controller
                    submodule.
                  type: boolean
              type: object
            signer:
              title: signer address
              type: string
          title: MsgUpdateParams defines the payload for Msg/UpdateParams
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      tags:
      - Msg
  /ibc.applications.interchain_accounts.host.v1.Msg/ModuleQuerySafe:
    post:
      operationId: Msg_ModuleQuerySafe
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            requests:
              description: requests defines the module safe queries to execute.
              items:
                description: 'QueryRequest defines the parameters for a particular
                  query request

                  by an interchain account.'
                properties:
                  data:
                    format: byte
                    title: 'data defines the payload of the query request as defined
                      by ADR-021.

                      https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
                    type: string
                  path:
                    title: 'path defines the path of the query request as defined
                      by ADR-021.

                      https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-021-protobuf-query-encoding.md#custom-query-registration-and-routing'
                    type: string
                type: object
              type: array
            signer:
              title: signer address
              type: string
          title: MsgModuleQuerySafe defines the payload for Msg/ModuleQuerySafe
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              height:
                format: uint64
                title: height at which the responses were queried
                type: string
              responses:
                items:
                  format: byte
                  type: string
                title: protobuf encoded responses for each query
                type: array
            title: MsgModuleQuerySafeResponse defines the response for Msg/ModuleQuerySafe
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleQuerySafe defines a rpc handler for MsgModuleQuerySafe.
      tags:
      - Msg
  /ibc.applications.interchain_accounts.host.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateIBCInterchainAccountsHostParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            params:
              description: 'params defines the 27-interchain-accounts/host parameters
                to update.


                NOTE: All parameters must be supplied.'
              properties:
                allow_messages:
                  description: 'allow_messages defines a list of sdk message typeURLs
                    allowed to be

                    executed on a host chain.'
                  items:
                    type: string
                  type: array
                host_enabled:
                  description: host_enabled enables or disables the host submodule.
                  type: boolean
              type: object
            signer:
              title: signer address
              type: string
          title: MsgUpdateParams defines the payload for Msg/UpdateParams
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      tags:
      - Msg
  /ibc.applications.transfer.v1.Msg/Transfer:
    post:
      operationId: Msg_Transfer
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            encoding:
              title: optional encoding
              type: string
            memo:
              title: optional memo
              type: string
            receiver:
              title: the recipient address on the destination chain
              type: string
            sender:
              title: the sender address
              type: string
            source_channel:
              title: the channel by which the packet will be sent
              type: string
            source_port:
              title: the port on which the packet will be sent
              type: string
            timeout_height:
              description: 'Timeout height relative to the current block height.

                If you are sending with IBC v1 protocol, either timeout_height or

                timeout_timestamp must be set. If you are sending with IBC v2 protocol,

                timeout_timestamp must be set, and timeout_height must be omitted.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            timeout_timestamp:
              description: 'Timeout timestamp in absolute nanoseconds since unix epoch.

                If you are sending with IBC v1 protocol, either timeout_height or

                timeout_timestamp must be set. If you are sending with IBC v2 protocol,

                timeout_timestamp must be set.'
              format: uint64
              type: string
            token:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              title: token to be transferred
              type: object
          title: 'MsgTransfer defines a msg to transfer fungible tokens (i.e Coins)
            between

            ICS20 enabled chains. See ICS Spec here:

            https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgTransferResponse defines the Msg/Transfer response type.
            properties:
              sequence:
                format: uint64
                title: sequence number of the transfer packet sent
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Transfer defines a rpc handler method for MsgTransfer.
      tags:
      - Msg
  /ibc.applications.transfer.v1.Msg/UpdateParams:
    post:
      operationId: Msg_UpdateIBCTransferParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams is the Msg/UpdateParams request type.
          properties:
            params:
              description: 'params defines the transfer parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                receive_enabled:
                  description: 'receive_enabled enables or disables all cross-chain
                    token transfers to this

                    chain.'
                  type: boolean
                send_enabled:
                  description: 'send_enabled enables or disables all cross-chain token
                    transfers from this

                    chain.'
                  type: boolean
              type: object
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateParamsResponse defines the response structure for
              executing a

              MsgUpdateParams message.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateParams defines a rpc handler for MsgUpdateParams.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/Acknowledgement:
    post:
      operationId: Msg_IBCChannelAcknowledgement
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            acknowledgement:
              format: byte
              type: string
            packet:
              properties:
                data:
                  format: byte
                  title: actual opaque bytes transferred directly to the application
                    module
                  type: string
                destination_channel:
                  description: identifies the channel end on the receiving chain.
                  type: string
                destination_port:
                  description: identifies the port on the receiving chain.
                  type: string
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_channel:
                  description: identifies the channel end on the sending chain.
                  type: string
                source_port:
                  description: identifies the port on the sending chain.
                  type: string
                timeout_height:
                  description: 'Normally the RevisionHeight is incremented at each
                    height while keeping

                    RevisionNumber the same. However some consensus algorithms may
                    choose to

                    reset the height in certain conditions e.g. hard forks, state-machine

                    breaking changes In these cases, the RevisionNumber is incremented
                    so that

                    height continues to be monitonically increasing even as the RevisionHeight

                    gets reset


                    Please note that json tags for generated Go code are overridden
                    to explicitly

                    exclude the omitempty jsontag. This enforces the Go json marshaller
                    to always

                    emit zero values for both revision_number and revision_height.'
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet times out
                  type: object
                timeout_timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet times
                    out
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_acked:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          title: MsgAcknowledgement receives incoming IBC acknowledgement
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgAcknowledgementResponse defines the Msg/Acknowledgement
              response type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Acknowledgement defines a rpc handler method for MsgAcknowledgement.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelCloseConfirm:
    post:
      operationId: Msg_ChannelCloseConfirm
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelCloseConfirm defines a msg sent by a Relayer to
            Chain B

            to acknowledge the change of channel state to CLOSED on Chain A.'
          properties:
            channel_id:
              type: string
            port_id:
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_init:
              format: byte
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ChannelCloseConfirm defines a rpc handler method for

        MsgChannelCloseConfirm.'
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelCloseInit:
    post:
      operationId: Msg_ChannelCloseInit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelCloseInit defines a msg sent by a Relayer to Chain
            A

            to close a channel with Chain B.'
          properties:
            channel_id:
              type: string
            port_id:
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ChannelCloseInit defines a rpc handler method for MsgChannelCloseInit.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelOpenAck:
    post:
      operationId: Msg_ChannelOpenAck
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelOpenAck defines a msg sent by a Relayer to Chain
            A to acknowledge

            the change of channel state to TRYOPEN on Chain B.'
          properties:
            channel_id:
              type: string
            counterparty_channel_id:
              type: string
            counterparty_version:
              type: string
            port_id:
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_try:
              format: byte
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ChannelOpenAck defines a rpc handler method for MsgChannelOpenAck.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelOpenConfirm:
    post:
      operationId: Msg_ChannelOpenConfirm
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain
            B to

            acknowledge the change of channel state to OPEN on Chain A.'
          properties:
            channel_id:
              type: string
            port_id:
              type: string
            proof_ack:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ChannelOpenConfirm defines a rpc handler method for MsgChannelOpenConfirm.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelOpenInit:
    post:
      operationId: Msg_ChannelOpenInit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelOpenInit defines an sdk.Msg to initialize a channel
            handshake. It

            is called by a relayer on Chain A.'
          properties:
            channel:
              description: 'Channel defines pipeline for exactly-once packet delivery
                between specific

                modules on separate blockchains, which has at least one end capable
                of

                sending packets and one end capable of receiving packets.'
              properties:
                connection_hops:
                  items:
                    type: string
                  title: 'list of connection identifiers, in order, along which packets
                    sent on

                    this channel will travel'
                  type: array
                counterparty:
                  properties:
                    channel_id:
                      title: channel end on the counterparty chain
                      type: string
                    port_id:
                      description: port on the counterparty chain which owns the other
                        end of the channel.
                      type: string
                  title: counterparty channel end
                  type: object
                ordering:
                  default: ORDER_NONE_UNSPECIFIED
                  description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
                    \ - ORDER_UNORDERED: packets can be delivered in any order, which\
                    \ may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
                    \ packets are delivered exactly in the order which they were sent"
                  enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                  title: whether the channel is ordered or unordered
                  type: string
                state:
                  default: STATE_UNINITIALIZED_UNSPECIFIED
                  description: "State defines if a channel is in one of the following\
                    \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n\
                    \ - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT:\
                    \ A channel has just started the opening handshake.\n - STATE_TRYOPEN:\
                    \ A channel has acknowledged the handshake step on the counterparty\
                    \ chain.\n - STATE_OPEN: A channel has completed the handshake.\
                    \ Open channels are\nready to send and receive packets.\n - STATE_CLOSED:\
                    \ A channel has been closed and can no longer be used to send\
                    \ or receive\npackets."
                  enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                  title: current state of the channel end
                  type: string
                version:
                  title: opaque channel version, which is agreed upon during the handshake
                  type: string
              type: object
            port_id:
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit
              response type.
            properties:
              channel_id:
                type: string
              version:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ChannelOpenInit defines a rpc handler method for MsgChannelOpenInit.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/ChannelOpenTry:
    post:
      operationId: Msg_ChannelOpenTry
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgChannelOpenInit defines a msg sent by a Relayer to try
            to open a channel

            on Chain B. The version field within the Channel field has been deprecated.

            Its value will be ignored by core IBC.'
          properties:
            channel:
              description: 'Channel defines pipeline for exactly-once packet delivery
                between specific

                modules on separate blockchains, which has at least one end capable
                of

                sending packets and one end capable of receiving packets.'
              properties:
                connection_hops:
                  items:
                    type: string
                  title: 'list of connection identifiers, in order, along which packets
                    sent on

                    this channel will travel'
                  type: array
                counterparty:
                  properties:
                    channel_id:
                      title: channel end on the counterparty chain
                      type: string
                    port_id:
                      description: port on the counterparty chain which owns the other
                        end of the channel.
                      type: string
                  title: counterparty channel end
                  type: object
                ordering:
                  default: ORDER_NONE_UNSPECIFIED
                  description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n\
                    \ - ORDER_UNORDERED: packets can be delivered in any order, which\
                    \ may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED:\
                    \ packets are delivered exactly in the order which they were sent"
                  enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                  title: whether the channel is ordered or unordered
                  type: string
                state:
                  default: STATE_UNINITIALIZED_UNSPECIFIED
                  description: "State defines if a channel is in one of the following\
                    \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n\
                    \ - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT:\
                    \ A channel has just started the opening handshake.\n - STATE_TRYOPEN:\
                    \ A channel has acknowledged the handshake step on the counterparty\
                    \ chain.\n - STATE_OPEN: A channel has completed the handshake.\
                    \ Open channels are\nready to send and receive packets.\n - STATE_CLOSED:\
                    \ A channel has been closed and can no longer be used to send\
                    \ or receive\npackets."
                  enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                  title: current state of the channel end
                  type: string
                version:
                  title: opaque channel version, which is agreed upon during the handshake
                  type: string
              type: object
            counterparty_version:
              type: string
            port_id:
              type: string
            previous_channel_id:
              description: 'Deprecated: this field is unused. Crossing hello''s are
                no longer supported

                in core IBC.'
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_init:
              format: byte
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry
              response type.
            properties:
              channel_id:
                type: string
              version:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ChannelOpenTry defines a rpc handler method for MsgChannelOpenTry.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/RecvPacket:
    post:
      operationId: Msg_IBCChannelRecvPacket
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            packet:
              properties:
                data:
                  format: byte
                  title: actual opaque bytes transferred directly to the application
                    module
                  type: string
                destination_channel:
                  description: identifies the channel end on the receiving chain.
                  type: string
                destination_port:
                  description: identifies the port on the receiving chain.
                  type: string
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_channel:
                  description: identifies the channel end on the sending chain.
                  type: string
                source_port:
                  description: identifies the port on the sending chain.
                  type: string
                timeout_height:
                  description: 'Normally the RevisionHeight is incremented at each
                    height while keeping

                    RevisionNumber the same. However some consensus algorithms may
                    choose to

                    reset the height in certain conditions e.g. hard forks, state-machine

                    breaking changes In these cases, the RevisionNumber is incremented
                    so that

                    height continues to be monitonically increasing even as the RevisionHeight

                    gets reset


                    Please note that json tags for generated Go code are overridden
                    to explicitly

                    exclude the omitempty jsontag. This enforces the Go json marshaller
                    to always

                    emit zero values for both revision_number and revision_height.'
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet times out
                  type: object
                timeout_timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet times
                    out
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_commitment:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          title: MsgRecvPacket receives incoming IBC packet
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgRecvPacketResponse defines the Msg/RecvPacket response
              type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: RecvPacket defines a rpc handler method for MsgRecvPacket.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/Timeout:
    post:
      operationId: Msg_IBCChannelTimeout
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            next_sequence_recv:
              format: uint64
              type: string
            packet:
              properties:
                data:
                  format: byte
                  title: actual opaque bytes transferred directly to the application
                    module
                  type: string
                destination_channel:
                  description: identifies the channel end on the receiving chain.
                  type: string
                destination_port:
                  description: identifies the port on the receiving chain.
                  type: string
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_channel:
                  description: identifies the channel end on the sending chain.
                  type: string
                source_port:
                  description: identifies the port on the sending chain.
                  type: string
                timeout_height:
                  description: 'Normally the RevisionHeight is incremented at each
                    height while keeping

                    RevisionNumber the same. However some consensus algorithms may
                    choose to

                    reset the height in certain conditions e.g. hard forks, state-machine

                    breaking changes In these cases, the RevisionNumber is incremented
                    so that

                    height continues to be monitonically increasing even as the RevisionHeight

                    gets reset


                    Please note that json tags for generated Go code are overridden
                    to explicitly

                    exclude the omitempty jsontag. This enforces the Go json marshaller
                    to always

                    emit zero values for both revision_number and revision_height.'
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet times out
                  type: object
                timeout_timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet times
                    out
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_unreceived:
              format: byte
              type: string
            signer:
              type: string
          title: MsgTimeout receives timed-out packet
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgTimeoutResponse defines the Msg/Timeout response type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Timeout defines a rpc handler method for MsgTimeout.
      tags:
      - Msg
  /ibc.core.channel.v1.Msg/TimeoutOnClose:
    post:
      operationId: Msg_TimeoutOnClose
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgTimeoutOnClose timed-out packet upon counterparty channel
            closure.
          properties:
            next_sequence_recv:
              format: uint64
              type: string
            packet:
              properties:
                data:
                  format: byte
                  title: actual opaque bytes transferred directly to the application
                    module
                  type: string
                destination_channel:
                  description: identifies the channel end on the receiving chain.
                  type: string
                destination_port:
                  description: identifies the port on the receiving chain.
                  type: string
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_channel:
                  description: identifies the channel end on the sending chain.
                  type: string
                source_port:
                  description: identifies the port on the sending chain.
                  type: string
                timeout_height:
                  description: 'Normally the RevisionHeight is incremented at each
                    height while keeping

                    RevisionNumber the same. However some consensus algorithms may
                    choose to

                    reset the height in certain conditions e.g. hard forks, state-machine

                    breaking changes In these cases, the RevisionNumber is incremented
                    so that

                    height continues to be monitonically increasing even as the RevisionHeight

                    gets reset


                    Please note that json tags for generated Go code are overridden
                    to explicitly

                    exclude the omitempty jsontag. This enforces the Go json marshaller
                    to always

                    emit zero values for both revision_number and revision_height.'
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: block height after which the packet times out
                  type: object
                timeout_timestamp:
                  format: uint64
                  title: block timestamp (in nanoseconds) after which the packet times
                    out
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_close:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_unreceived:
              format: byte
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose
              response type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TimeoutOnClose defines a rpc handler method for MsgTimeoutOnClose.
      tags:
      - Msg
  /ibc.core.channel.v2.Msg/Acknowledgement:
    post:
      operationId: Msg_IBCChannelV2Acknowledgement
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgAcknowledgement receives incoming IBC acknowledgement.
          properties:
            acknowledgement:
              description: 'Acknowledgement contains a list of all ack results associated
                with a single

                packet. In the case of a successful receive, the acknowledgement will
                contain

                an app acknowledgement for each application that received a payload
                in the

                same order that the payloads were sent in the packet. If the receive
                is not

                successful, the acknowledgement will contain a single app acknowledgment

                which will be a constant error acknowledgment as defined by the IBC
                v2

                protocol.'
              properties:
                app_acknowledgements:
                  items:
                    format: byte
                    type: string
                  type: array
              type: object
            packet:
              properties:
                destination_client:
                  description: identifies the receiving client on the receiving chain.
                  type: string
                payloads:
                  description: a list of payloads, each one for a specific application.
                  items:
                    properties:
                      destination_port:
                        description: specifies the destination port of the packet.
                        type: string
                      encoding:
                        description: the encoding used for the provided value.
                        type: string
                      source_port:
                        description: specifies the source port of the packet.
                        type: string
                      value:
                        description: the raw bytes for the payload.
                        format: byte
                        type: string
                      version:
                        description: version of the specified application.
                        type: string
                    title: 'Payload contains the source and destination ports and
                      payload for the

                      application (version, encoding, raw bytes)'
                    type: object
                  type: array
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_client:
                  description: identifies the sending client on the sending chain.
                  type: string
                timeout_timestamp:
                  description: timeout timestamp in seconds after which the packet
                    times out.
                  format: uint64
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_acked:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgAcknowledgementResponse defines the Msg/Acknowledgement
              response type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Acknowledgement defines a rpc handler method for MsgAcknowledgement.
      tags:
      - Msg
  /ibc.core.channel.v2.Msg/RecvPacket:
    post:
      operationId: Msg_IBCChannelV2RecvPacket
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgRecvPacket receives an incoming IBC packet.
          properties:
            packet:
              properties:
                destination_client:
                  description: identifies the receiving client on the receiving chain.
                  type: string
                payloads:
                  description: a list of payloads, each one for a specific application.
                  items:
                    properties:
                      destination_port:
                        description: specifies the destination port of the packet.
                        type: string
                      encoding:
                        description: the encoding used for the provided value.
                        type: string
                      source_port:
                        description: specifies the source port of the packet.
                        type: string
                      value:
                        description: the raw bytes for the payload.
                        format: byte
                        type: string
                      version:
                        description: version of the specified application.
                        type: string
                    title: 'Payload contains the source and destination ports and
                      payload for the

                      application (version, encoding, raw bytes)'
                    type: object
                  type: array
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_client:
                  description: identifies the sending client on the sending chain.
                  type: string
                timeout_timestamp:
                  description: timeout timestamp in seconds after which the packet
                    times out.
                  format: uint64
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_commitment:
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgRecvPacketResponse defines the Msg/RecvPacket response
              type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: RecvPacket defines a rpc handler method for MsgRecvPacket.
      tags:
      - Msg
  /ibc.core.channel.v2.Msg/SendPacket:
    post:
      operationId: Msg_SendPacket
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgSendPacket sends an outgoing IBC packet.
          properties:
            payloads:
              items:
                properties:
                  destination_port:
                    description: specifies the destination port of the packet.
                    type: string
                  encoding:
                    description: the encoding used for the provided value.
                    type: string
                  source_port:
                    description: specifies the source port of the packet.
                    type: string
                  value:
                    description: the raw bytes for the payload.
                    format: byte
                    type: string
                  version:
                    description: version of the specified application.
                    type: string
                title: 'Payload contains the source and destination ports and payload
                  for the

                  application (version, encoding, raw bytes)'
                type: object
              type: array
            signer:
              type: string
            source_client:
              type: string
            timeout_timestamp:
              format: uint64
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgSendPacketResponse defines the Msg/SendPacket response
              type.
            properties:
              sequence:
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SendPacket defines a rpc handler method for MsgSendPacket.
      tags:
      - Msg
  /ibc.core.channel.v2.Msg/Timeout:
    post:
      operationId: Msg_IBCChannelV2Timeout
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            packet:
              properties:
                destination_client:
                  description: identifies the receiving client on the receiving chain.
                  type: string
                payloads:
                  description: a list of payloads, each one for a specific application.
                  items:
                    properties:
                      destination_port:
                        description: specifies the destination port of the packet.
                        type: string
                      encoding:
                        description: the encoding used for the provided value.
                        type: string
                      source_port:
                        description: specifies the source port of the packet.
                        type: string
                      value:
                        description: the raw bytes for the payload.
                        format: byte
                        type: string
                      version:
                        description: version of the specified application.
                        type: string
                    title: 'Payload contains the source and destination ports and
                      payload for the

                      application (version, encoding, raw bytes)'
                    type: object
                  type: array
                sequence:
                  description: 'number corresponds to the order of sends and receives,
                    where a Packet

                    with an earlier sequence number must be sent and received before
                    a Packet

                    with a later sequence number.'
                  format: uint64
                  type: string
                source_client:
                  description: identifies the sending client on the sending chain.
                  type: string
                timeout_timestamp:
                  description: timeout timestamp in seconds after which the packet
                    times out.
                  format: uint64
                  type: string
              title: Packet defines a type that carries data across different chains
                through IBC
              type: object
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_unreceived:
              format: byte
              type: string
            signer:
              type: string
          title: MsgTimeout receives timed-out packet
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgTimeoutResponse defines the Msg/Timeout response type.
            properties:
              result:
                default: RESPONSE_RESULT_TYPE_UNSPECIFIED
                description: "- RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value\
                  \ enumeration\n - RESPONSE_RESULT_TYPE_NOOP: The message did not\
                  \ call the IBC application callbacks (because, for\nexample, the\
                  \ packet had already been relayed)\n - RESPONSE_RESULT_TYPE_SUCCESS:\
                  \ The message was executed successfully\n - RESPONSE_RESULT_TYPE_FAILURE:\
                  \ The message was executed unsuccessfully"
                enum:
                - RESPONSE_RESULT_TYPE_UNSPECIFIED
                - RESPONSE_RESULT_TYPE_NOOP
                - RESPONSE_RESULT_TYPE_SUCCESS
                - RESPONSE_RESULT_TYPE_FAILURE
                title: 'ResponseResultType defines the possible outcomes of the execution
                  of a

                  message'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Timeout defines a rpc handler method for MsgTimeout.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/CreateClient:
    post:
      operationId: Msg_CreateClient
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: light client state
              type: object
            consensus_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            signer:
              title: signer address
              type: string
          title: MsgCreateClient defines a message to create an IBC client
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgCreateClientResponse defines the Msg/CreateClient response
              type.
            properties:
              client_id:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CreateClient defines a rpc handler method for MsgCreateClient.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/DeleteClientCreator:
    post:
      operationId: Msg_DeleteClientCreator
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            client_id:
              title: client identifier
              type: string
            signer:
              title: signer address
              type: string
          title: 'MsgDeleteClientCreator defines a message to delete the client creator
            of a

            client'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgDeleteClientCreatorResponse defines the Msg/DeleteClientCreator
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'DeleteClientCreator defines a rpc handler method for

        MsgDeleteClientCreator.'
      tags:
      - Msg
  /ibc.core.client.v1.Msg/IBCSoftwareUpgrade:
    post:
      operationId: Msg_IBCSoftwareUpgrade
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            plan:
              description: Plan specifies information about a planned upgrade and
                when it should occur.
              properties:
                height:
                  description: The height at which the upgrade must be performed.
                  format: int64
                  type: string
                info:
                  title: 'Any application specific upgrade info to be included on-chain

                    such as a git commit that validators could automatically upgrade
                    to'
                  type: string
                name:
                  description: 'Sets the name for the upgrade. This name will be used
                    by the upgraded

                    version of the software to apply any special "on-upgrade" commands
                    during

                    the first BeginBlock method after the upgrade is applied. It is
                    also used

                    to detect whether a software version can handle a given upgrade.
                    If no

                    upgrade handler with this name has been set in the software, it
                    will be

                    assumed that the software is out-of-date when the upgrade Time
                    or Height is

                    reached and the software will exit.'
                  type: string
                time:
                  description: 'Deprecated: Time based upgrades have been deprecated.
                    Time based upgrade

                    logic has been removed from the SDK. If this field is not empty,
                    an error

                    will be thrown.'
                  format: date-time
                  type: string
                upgraded_client_state:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
              type: object
            signer:
              title: signer address
              type: string
            upgraded_client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
          title: 'MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade
            of an

            IBC client using a v1 governance proposal'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: IBCSoftwareUpgrade defines a rpc handler method for MsgIBCSoftwareUpgrade.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/RecoverClient:
    post:
      operationId: Msg_RecoverClient
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgRecoverClient defines the message used to recover a frozen
            or expired

            client.'
          properties:
            signer:
              title: signer address
              type: string
            subject_client_id:
              title: the client identifier for the client to be updated if the proposal
                passes
              type: string
            substitute_client_id:
              title: 'the substitute client identifier for the client which will replace
                the

                subject client'
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgRecoverClientResponse defines the Msg/RecoverClient response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: RecoverClient defines a rpc handler method for MsgRecoverClient.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/SubmitMisbehaviour:
    post:
      operationId: Msg_SubmitMisbehaviour
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgSubmitMisbehaviour defines an sdk.Msg type that submits
            Evidence for

            light client misbehaviour.

            This message has been deprecated. Use MsgUpdateClient instead.'
          properties:
            client_id:
              title: client unique identifier
              type: string
            misbehaviour:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: misbehaviour used for freezing the light client
              type: object
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SubmitMisbehaviour defines a rpc handler method for MsgSubmitMisbehaviour.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/UpdateClient:
    post:
      operationId: Msg_UpdateClient
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgUpdateClient defines an sdk.Msg to update a IBC client
            state using

            the given client message.'
          properties:
            client_id:
              title: client unique identifier
              type: string
            client_message:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: client message to update the light client
              type: object
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUpdateClientResponse defines the Msg/UpdateClient response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateClient defines a rpc handler method for MsgUpdateClient.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/UpdateClientParams:
    post:
      operationId: Msg_UpdateClientParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams defines the sdk.Msg type to update the client
            parameters.
          properties:
            params:
              description: 'params defines the client parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                allowed_clients:
                  description: 'allowed_clients defines the list of allowed client
                    state types which can be

                    created and interacted with. If a client type is removed from
                    the allowed

                    clients list, usage of this client will be disabled until it is
                    added again

                    to the list.'
                  items:
                    type: string
                  type: array
              type: object
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUpdateParamsResponse defines the MsgUpdateParams response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateClientParams defines a rpc handler method for MsgUpdateParams.
      tags:
      - Msg
  /ibc.core.client.v1.Msg/UpgradeClient:
    post:
      operationId: Msg_UpgradeClient
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            client_id:
              title: client unique identifier
              type: string
            client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: upgraded client state
              type: object
            consensus_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              title: 'upgraded consensus state, only contains enough information to
                serve as a

                basis of trust in update logic'
              type: object
            proof_upgrade_client:
              format: byte
              title: proof that old chain committed to new client
              type: string
            proof_upgrade_consensus_state:
              format: byte
              title: proof that old chain committed to new consensus state
              type: string
            signer:
              title: signer address
              type: string
          title: 'MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to
            a new client

            state'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpgradeClient defines a rpc handler method for MsgUpgradeClient.
      tags:
      - Msg
  /ibc.core.client.v2.Msg/RegisterCounterparty:
    post:
      operationId: Msg_RegisterCounterparty
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            client_id:
              title: client identifier
              type: string
            counterparty_client_id:
              title: counterparty client identifier
              type: string
            counterparty_merkle_prefix:
              items:
                format: byte
                type: string
              title: counterparty merkle prefix
              type: array
            signer:
              title: signer address
              type: string
          title: 'MsgRegisterCounterparty defines a message to register a counterparty
            on a

            client'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgRegisterCounterpartyResponse defines the Msg/RegisterCounterparty
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'RegisterCounterparty defines a rpc handler method for

        MsgRegisterCounterparty.'
      tags:
      - Msg
  /ibc.core.client.v2.Msg/UpdateClientConfig:
    post:
      operationId: Msg_UpdateClientConfig
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            client_id:
              title: client identifier
              type: string
            config:
              description: 'NOTE: All fields in the config must be supplied.'
              properties:
                allowed_relayers:
                  items:
                    type: string
                  title: 'allowed_relayers defines the set of allowed relayers for
                    IBC V2 protocol

                    for the given client'
                  type: array
              title: allowed relayers
              type: object
            signer:
              title: signer address
              type: string
          title: 'MsgUpdateClientConfig defines the sdk.Msg type to update the configuration

            for a given client'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgUpdateClientConfigResponse defines the MsgUpdateClientConfig
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpdateClientConfig defines a rpc handler method for MsgUpdateClientConfig.
      tags:
      - Msg
  /ibc.core.connection.v1.Msg/ConnectionOpenAck:
    post:
      operationId: Msg_ConnectionOpenAck
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgConnectionOpenAck defines a msg sent by a Relayer to Chain
            A to

            acknowledge the change of connection state to TRYOPEN on Chain B.'
          properties:
            client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            connection_id:
              type: string
            consensus_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            counterparty_connection_id:
              type: string
            host_consensus_state_proof:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            proof_client:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            proof_consensus:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_try:
              format: byte
              title: 'proof of the initialization the connection on Chain B: `UNINITIALIZED
                ->

                TRYOPEN`'
              type: string
            signer:
              type: string
            version:
              description: 'Version defines the versioning scheme used to negotiate
                the IBC version in

                the connection handshake.'
              properties:
                features:
                  items:
                    type: string
                  title: list of features compatible with the specified identifier
                  type: array
                identifier:
                  title: unique version identifier
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
      tags:
      - Msg
  /ibc.core.connection.v1.Msg/ConnectionOpenConfirm:
    post:
      operationId: Msg_ConnectionOpenConfirm
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgConnectionOpenConfirm defines a msg sent by a Relayer to
            Chain B to

            acknowledge the change of connection state to OPEN on Chain A.'
          properties:
            connection_id:
              type: string
            proof_ack:
              format: byte
              title: 'proof for the change of the connection state on Chain A: `INIT
                -> OPEN`'
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm

              response type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConnectionOpenConfirm defines a rpc handler method for

        MsgConnectionOpenConfirm.'
      tags:
      - Msg
  /ibc.core.connection.v1.Msg/ConnectionOpenInit:
    post:
      operationId: Msg_ConnectionOpenInit
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgConnectionOpenInit defines the msg sent by an account on
            Chain A to

            initialize a connection with Chain B.'
          properties:
            client_id:
              type: string
            counterparty:
              description: Counterparty defines the counterparty chain associated
                with a connection end.
              properties:
                client_id:
                  description: 'identifies the client on the counterparty chain associated
                    with a given

                    connection.'
                  type: string
                connection_id:
                  description: 'identifies the connection end on the counterparty
                    chain associated with a

                    given connection.'
                  type: string
                prefix:
                  description: commitment merkle prefix of the counterparty chain.
                  properties:
                    key_prefix:
                      format: byte
                      type: string
                  title: 'MerklePrefix is merkle path prefixed to the key.

                    The constructed key from the Path and the key will be append(Path.KeyPath,

                    append(Path.KeyPrefix, key...))'
                  type: object
              type: object
            delay_period:
              format: uint64
              type: string
            signer:
              type: string
            version:
              description: 'Version defines the versioning scheme used to negotiate
                the IBC version in

                the connection handshake.'
              properties:
                features:
                  items:
                    type: string
                  title: list of features compatible with the specified identifier
                  type: array
                identifier:
                  title: unique version identifier
                  type: string
              type: object
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit
              response

              type.'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
      tags:
      - Msg
  /ibc.core.connection.v1.Msg/ConnectionOpenTry:
    post:
      operationId: Msg_ConnectionOpenTry
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: 'MsgConnectionOpenTry defines a msg sent by a Relayer to try
            to open a

            connection on Chain B.'
          properties:
            client_id:
              type: string
            client_state:
              properties:
                type_url:
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            consensus_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            counterparty:
              description: Counterparty defines the counterparty chain associated
                with a connection end.
              properties:
                client_id:
                  description: 'identifies the client on the counterparty chain associated
                    with a given

                    connection.'
                  type: string
                connection_id:
                  description: 'identifies the connection end on the counterparty
                    chain associated with a

                    given connection.'
                  type: string
                prefix:
                  description: commitment merkle prefix of the counterparty chain.
                  properties:
                    key_prefix:
                      format: byte
                      type: string
                  title: 'MerklePrefix is merkle path prefixed to the key.

                    The constructed key from the Path and the key will be append(Path.KeyPath,

                    append(Path.KeyPrefix, key...))'
                  type: object
              type: object
            counterparty_versions:
              items:
                description: 'Version defines the versioning scheme used to negotiate
                  the IBC version in

                  the connection handshake.'
                properties:
                  features:
                    items:
                      type: string
                    title: list of features compatible with the specified identifier
                    type: array
                  identifier:
                    title: unique version identifier
                    type: string
                type: object
              type: array
            delay_period:
              format: uint64
              type: string
            host_consensus_state_proof:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            previous_connection_id:
              description: 'Deprecated: this field is unused. Crossing hellos are
                no longer supported

                in core IBC.'
              type: string
            proof_client:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            proof_consensus:
              description: 'Deprecated: this field is unused.'
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            proof_init:
              format: byte
              title: 'proof of the initialization the connection on Chain A: `UNINITIALIZED
                ->

                INIT`'
              type: string
            signer:
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry
              response type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
      tags:
      - Msg
  /ibc.core.connection.v1.Msg/UpdateConnectionParams:
    post:
      operationId: Msg_UpdateConnectionParams
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgUpdateParams defines the sdk.Msg type to update the connection
            parameters.
          properties:
            params:
              description: 'params defines the connection parameters to update.


                NOTE: All parameters must be supplied.'
              properties:
                max_expected_time_per_block:
                  description: 'maximum expected time per block (in nanoseconds),
                    used to enforce block

                    delay. This parameter should reflect the largest amount of time
                    that the

                    chain might reasonably take to produce the next block under normal

                    operating conditions. A safe choice is 3-5x the expected time
                    per block.'
                  format: uint64
                  type: string
              type: object
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: MsgUpdateParamsResponse defines the MsgUpdateParams response
              type.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UpdateConnectionParams defines a rpc handler method for

        MsgUpdateParams.'
      tags:
      - Msg
  /ibc.lightclients.wasm.v1.Msg/MigrateContract:
    post:
      operationId: Msg_MigrateContract
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgMigrateContract defines the request type for the MigrateContract
            rpc.
          properties:
            checksum:
              format: byte
              title: checksum is the sha256 hash of the new wasm byte code for the
                contract
              type: string
            client_id:
              title: the client id of the contract
              type: string
            msg:
              format: byte
              title: the json encoded message to be passed to the contract on migration
              type: string
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: 'MsgMigrateContractResponse defines the response type for the MigrateContract

              rpc'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: MigrateContract defines a rpc handler method for MsgMigrateContract.
      tags:
      - Msg
  /ibc.lightclients.wasm.v1.Msg/RemoveChecksum:
    post:
      operationId: Msg_RemoveChecksum
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgRemoveChecksum defines the request type for the MsgRemoveChecksum
            rpc.
          properties:
            checksum:
              format: byte
              title: checksum is the sha256 hash to be removed from the store
              type: string
            signer:
              title: signer address
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            title: MsgStoreChecksumResponse defines the response type for the StoreCode
              rpc
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: RemoveChecksum defines a rpc handler method for MsgRemoveChecksum.
      tags:
      - Msg
  /ibc.lightclients.wasm.v1.Msg/StoreCode:
    post:
      operationId: Msg_StoreCode
      parameters:
      - in: body
        name: body
        required: true
        schema:
          description: MsgStoreCode defines the request type for the StoreCode rpc.
          properties:
            signer:
              title: signer address
              type: string
            wasm_byte_code:
              format: byte
              title: wasm byte code of light client contract. It can be raw or gzip
                compressed
              type: string
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              checksum:
                format: byte
                title: checksum is the sha256 hash of the stored code
                type: string
            title: MsgStoreCodeResponse defines the response type for the StoreCode
              rpc
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: StoreCode defines a rpc handler method for MsgStoreCode.
      tags:
      - Msg
  /ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}:
    get:
      operationId: Query_InterchainAccount
      parameters:
      - in: path
        name: owner
        required: true
        type: string
      - in: path
        name: connection_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryInterchainAccountResponse the response type for the

              Query/InterchainAccount RPC method.'
            properties:
              address:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'InterchainAccount returns the interchain account address for a given
        owner

        address on a given connection'
      tags:
      - Query
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      operationId: Query_IBCInterchainAccountsControllerParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  controller_enabled:
                    description: controller_enabled enables or disables the controller
                      submodule.
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the ICA controller submodule.
      tags:
      - Query
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      operationId: Query_IBCInterchainAccountsHostParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  allow_messages:
                    description: 'allow_messages defines a list of sdk message typeURLs
                      allowed to be

                      executed on a host chain.'
                    items:
                      type: string
                    type: array
                  host_enabled:
                    description: host_enabled enables or disables the host submodule.
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the ICA host submodule.
      tags:
      - Query
  /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
    get:
      operationId: Query_EscrowAddress
      parameters:
      - description: unique channel identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: unique port identifier
        in: path
        name: port_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryEscrowAddressResponse is the response type of the EscrowAddress
              RPC

              method.'
            properties:
              escrow_address:
                title: the escrow account address
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'EscrowAddress returns the escrow address for a particular port and
        channel

        id.'
      tags:
      - Query
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      operationId: Query_DenomHash
      parameters:
      - description: The denomination trace ([port_id]/[channel_id])+/[denom]
        in: path
        name: trace
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomHashResponse is the response type for the Query/DenomHash
              RPC

              method.'
            properties:
              hash:
                description: hash (in hex format) of the denomination trace information.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomHash queries a denomination hash information.
      tags:
      - Query
  /ibc/apps/transfer/v1/denoms:
    get:
      operationId: Query_Denoms
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomsResponse is the response type for the Query/Denoms
              RPC

              method.'
            properties:
              denoms:
                description: denoms returns all denominations.
                items:
                  description: 'Denom holds the base denom of a Token and a trace
                    of the chains it was sent

                    through.'
                  properties:
                    base:
                      title: the base token denomination
                      type: string
                    trace:
                      items:
                        properties:
                          channel_id:
                            type: string
                          port_id:
                            type: string
                        title: Hop defines a port ID, channel ID pair specifying a
                          unique "hop" in a trace
                        type: object
                      title: the trace of the token
                      type: array
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Denoms queries all denominations
      tags:
      - Query
  /ibc/apps/transfer/v1/denoms/{hash}:
    get:
      operationId: Query_Denom
      parameters:
      - description: 'hash (in hex format) or denom (full denom with ibc prefix) of
          the on chain

          denomination.'
        in: path
        name: hash
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryDenomResponse is the response type for the Query/Denom
              RPC

              method.'
            properties:
              denom:
                description: 'Denom holds the base denom of a Token and a trace of
                  the chains it was sent

                  through.'
                properties:
                  base:
                    title: the base token denomination
                    type: string
                  trace:
                    items:
                      properties:
                        channel_id:
                          type: string
                        port_id:
                          type: string
                      title: Hop defines a port ID, channel ID pair specifying a unique
                        "hop" in a trace
                      type: object
                    title: the trace of the token
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Denom queries a denomination
      tags:
      - Query
  /ibc/apps/transfer/v1/params:
    get:
      operationId: Query_IBCTransferParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryParamsResponse is the response type for the Query/Params
              RPC method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  receive_enabled:
                    description: 'receive_enabled enables or disables all cross-chain
                      token transfers to this

                      chain.'
                    type: boolean
                  send_enabled:
                    description: 'send_enabled enables or disables all cross-chain
                      token transfers from this

                      chain.'
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the ibc-transfer module.
      tags:
      - Query
  /ibc/apps/transfer/v1/total_escrow/{denom}:
    get:
      operationId: Query_TotalEscrowForDenom
      parameters:
      - in: path
        name: denom
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryTotalEscrowForDenomResponse is the response type for
              TotalEscrowForDenom

              RPC method.'
            properties:
              amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'TotalEscrowForDenom returns the total amount of tokens in escrow based
        on

        the denom.'
      tags:
      - Query
  /ibc/core/channel/v1/channels:
    get:
      operationId: Query_Channels
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryChannelsResponse is the response type for the Query/Channels
              RPC method.
            properties:
              channels:
                description: list of stored channels of the chain.
                items:
                  description: 'IdentifiedChannel defines a channel with additional
                    port and channel

                    identifier fields.'
                  properties:
                    channel_id:
                      title: channel identifier
                      type: string
                    connection_hops:
                      items:
                        type: string
                      title: 'list of connection identifiers, in order, along which
                        packets sent on

                        this channel will travel'
                      type: array
                    counterparty:
                      properties:
                        channel_id:
                          title: channel end on the counterparty chain
                          type: string
                        port_id:
                          description: port on the counterparty chain which owns the
                            other end of the channel.
                          type: string
                      title: counterparty channel end
                      type: object
                    ordering:
                      default: ORDER_NONE_UNSPECIFIED
                      description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel\
                        \ ordering\n - ORDER_UNORDERED: packets can be delivered in\
                        \ any order, which may differ from the order in\nwhich they\
                        \ were sent.\n - ORDER_ORDERED: packets are delivered exactly\
                        \ in the order which they were sent"
                      enum:
                      - ORDER_NONE_UNSPECIFIED
                      - ORDER_UNORDERED
                      - ORDER_ORDERED
                      title: whether the channel is ordered or unordered
                      type: string
                    port_id:
                      title: port identifier
                      type: string
                    state:
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                      description: "State defines if a channel is in one of the following\
                        \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\
                        \n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT:\
                        \ A channel has just started the opening handshake.\n - STATE_TRYOPEN:\
                        \ A channel has acknowledged the handshake step on the counterparty\
                        \ chain.\n - STATE_OPEN: A channel has completed the handshake.\
                        \ Open channels are\nready to send and receive packets.\n\
                        \ - STATE_CLOSED: A channel has been closed and can no longer\
                        \ be used to send or receive\npackets."
                      enum:
                      - STATE_UNINITIALIZED_UNSPECIFIED
                      - STATE_INIT
                      - STATE_TRYOPEN
                      - STATE_OPEN
                      - STATE_CLOSED
                      title: current state of the channel end
                      type: string
                    version:
                      title: opaque channel version, which is agreed upon during the
                        handshake
                      type: string
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Channels queries all the IBC channels of a chain.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      operationId: Query_Channel
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryChannelResponse is the response type for the Query/Channel
              RPC method.

              Besides the Channel end, it includes a proof and the height from which
              the

              proof was retrieved.'
            properties:
              channel:
                description: 'Channel defines pipeline for exactly-once packet delivery
                  between specific

                  modules on separate blockchains, which has at least one end capable
                  of

                  sending packets and one end capable of receiving packets.'
                properties:
                  connection_hops:
                    items:
                      type: string
                    title: 'list of connection identifiers, in order, along which
                      packets sent on

                      this channel will travel'
                    type: array
                  counterparty:
                    properties:
                      channel_id:
                        title: channel end on the counterparty chain
                        type: string
                      port_id:
                        description: port on the counterparty chain which owns the
                          other end of the channel.
                        type: string
                    title: counterparty channel end
                    type: object
                  ordering:
                    default: ORDER_NONE_UNSPECIFIED
                    description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel\
                      \ ordering\n - ORDER_UNORDERED: packets can be delivered in\
                      \ any order, which may differ from the order in\nwhich they\
                      \ were sent.\n - ORDER_ORDERED: packets are delivered exactly\
                      \ in the order which they were sent"
                    enum:
                    - ORDER_NONE_UNSPECIFIED
                    - ORDER_UNORDERED
                    - ORDER_ORDERED
                    title: whether the channel is ordered or unordered
                    type: string
                  state:
                    default: STATE_UNINITIALIZED_UNSPECIFIED
                    description: "State defines if a channel is in one of the following\
                      \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\n\
                      \ - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT:\
                      \ A channel has just started the opening handshake.\n - STATE_TRYOPEN:\
                      \ A channel has acknowledged the handshake step on the counterparty\
                      \ chain.\n - STATE_OPEN: A channel has completed the handshake.\
                      \ Open channels are\nready to send and receive packets.\n -\
                      \ STATE_CLOSED: A channel has been closed and can no longer\
                      \ be used to send or receive\npackets."
                    enum:
                    - STATE_UNINITIALIZED_UNSPECIFIED
                    - STATE_INIT
                    - STATE_TRYOPEN
                    - STATE_OPEN
                    - STATE_CLOSED
                    title: current state of the channel end
                    type: string
                  version:
                    title: opaque channel version, which is agreed upon during the
                      handshake
                    type: string
                title: channel associated with the request identifiers
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Channel queries an IBC Channel.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      operationId: Query_ChannelClientState
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              identified_client_state:
                description: 'IdentifiedClientState defines a client state with an
                  additional client

                  identifier field.'
                properties:
                  client_id:
                    title: client identifier
                    type: string
                  client_state:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    title: client state
                    type: object
                title: client state associated with the channel
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryChannelClientStateResponse is the Response type for the

              Query/QueryChannelClientState RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ChannelClientState queries for the client state for the channel associated

        with the provided channel identifiers.'
      tags:
      - Query
  ? /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}
  : get:
      operationId: Query_ChannelConsensusState
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: revision number of the consensus state
        format: uint64
        in: path
        name: revision_number
        required: true
        type: string
      - description: revision height of the consensus state
        format: uint64
        in: path
        name: revision_height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              client_id:
                title: client ID associated with the consensus state
                type: string
              consensus_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: consensus state associated with the channel
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryChannelClientStateResponse is the Response type for the

              Query/QueryChannelClientState RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ChannelConsensusState queries for the consensus state for the channel

        associated with the provided channel identifiers.'
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      operationId: Query_NextSequenceReceive
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              next_sequence_receive:
                format: uint64
                title: next sequence receive number
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QuerySequenceResponse is the response type for the

              Query/QueryNextSequenceReceiveResponse RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: NextSequenceReceive returns the next receive sequence for a given channel.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence_send:
    get:
      operationId: Query_IBCChannelNextSequenceSend
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              next_sequence_send:
                format: uint64
                title: next sequence send number
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryNextSequenceSendResponse is the request type for the

              Query/QueryNextSequenceSend RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: NextSequenceSend returns the next send sequence for a given channel.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      operationId: Query_IBCChannelPacketAcknowledgements
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      - collectionFormat: multi
        description: list of packet sequences.
        in: query
        items:
          format: uint64
          type: string
        name: packet_commitment_sequences
        required: false
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              acknowledgements:
                items:
                  description: 'PacketState defines the generic type necessary to
                    retrieve and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to interpret
                    this

                    state as a commitment, acknowledgement, or a receipt.'
                  properties:
                    channel_id:
                      description: channel unique identifier.
                      type: string
                    data:
                      description: embedded data that represents packet state.
                      format: byte
                      type: string
                    port_id:
                      description: channel port identifier.
                      type: string
                    sequence:
                      description: packet sequence.
                      format: uint64
                      type: string
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryPacketAcknowledgemetsResponse is the request type for the

              Query/QueryPacketAcknowledgements RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'PacketAcknowledgements returns all the packet acknowledgements associated

        with a channel.'
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      operationId: Query_IBCChannelPacketAcknowledgement
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              acknowledgement:
                format: byte
                title: packet associated with the request fields
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryPacketAcknowledgementResponse defines the client query response
              for a

              packet which also includes a proof and the height from which the

              proof was retrieved'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      operationId: Query_IBCChannelPacketCommitments
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              commitments:
                items:
                  description: 'PacketState defines the generic type necessary to
                    retrieve and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to interpret
                    this

                    state as a commitment, acknowledgement, or a receipt.'
                  properties:
                    channel_id:
                      description: channel unique identifier.
                      type: string
                    data:
                      description: embedded data that represents packet state.
                      format: byte
                      type: string
                    port_id:
                      description: channel port identifier.
                      type: string
                    sequence:
                      description: packet sequence.
                      format: uint64
                      type: string
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryPacketCommitmentsResponse is the request type for the

              Query/QueryPacketCommitments RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'PacketCommitments returns all the packet commitments hashes associated

        with a channel.'
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      operationId: Query_IBCChannelUnreceivedAcks
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - collectionFormat: csv
        description: list of acknowledgement sequences
        in: path
        items:
          format: uint64
          type: string
        minItems: 1
        name: packet_ack_sequences
        required: true
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              sequences:
                items:
                  format: uint64
                  type: string
                title: list of unreceived acknowledgement sequences
                type: array
            title: 'QueryUnreceivedAcksResponse is the response type for the

              Query/UnreceivedAcks RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UnreceivedAcks returns all the unreceived IBC acknowledgements associated

        with a channel and sequences.'
      tags:
      - Query
  ? /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets
  : get:
      operationId: Query_IBCChannelUnreceivedPackets
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - collectionFormat: csv
        description: list of packet sequences
        in: path
        items:
          format: uint64
          type: string
        minItems: 1
        name: packet_commitment_sequences
        required: true
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              sequences:
                items:
                  format: uint64
                  type: string
                title: list of unreceived packet sequences
                type: array
            title: 'QueryUnreceivedPacketsResponse is the response type for the

              Query/UnreceivedPacketCommitments RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UnreceivedPackets returns all the unreceived IBC packets associated
        with a

        channel and sequences.'
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      operationId: Query_IBCChannelPacketCommitment
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              commitment:
                format: byte
                title: packet associated with the request fields
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryPacketCommitmentResponse defines the client query response
              for a packet

              which also includes a proof and the height from which the proof was

              retrieved'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketCommitment queries a stored packet commitment hash.
      tags:
      - Query
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      operationId: Query_IBCChannelPacketReceipt
      parameters:
      - description: channel unique identifier
        in: path
        name: channel_id
        required: true
        type: string
      - description: port unique identifier
        in: path
        name: port_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
              received:
                title: success flag for if receipt exists
                type: boolean
            title: 'QueryPacketReceiptResponse defines the client query response for
              a packet

              receipt which also includes a proof, and the height from which the proof
              was

              retrieved'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'PacketReceipt queries if a given packet sequence has been received
        on the

        queried chain'
      tags:
      - Query
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      operationId: Query_ConnectionChannels
      parameters:
      - description: connection unique identifier
        in: path
        name: connection
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              channels:
                description: list of channels associated with a connection.
                items:
                  description: 'IdentifiedChannel defines a channel with additional
                    port and channel

                    identifier fields.'
                  properties:
                    channel_id:
                      title: channel identifier
                      type: string
                    connection_hops:
                      items:
                        type: string
                      title: 'list of connection identifiers, in order, along which
                        packets sent on

                        this channel will travel'
                      type: array
                    counterparty:
                      properties:
                        channel_id:
                          title: channel end on the counterparty chain
                          type: string
                        port_id:
                          description: port on the counterparty chain which owns the
                            other end of the channel.
                          type: string
                      title: counterparty channel end
                      type: object
                    ordering:
                      default: ORDER_NONE_UNSPECIFIED
                      description: "- ORDER_NONE_UNSPECIFIED: zero-value for channel\
                        \ ordering\n - ORDER_UNORDERED: packets can be delivered in\
                        \ any order, which may differ from the order in\nwhich they\
                        \ were sent.\n - ORDER_ORDERED: packets are delivered exactly\
                        \ in the order which they were sent"
                      enum:
                      - ORDER_NONE_UNSPECIFIED
                      - ORDER_UNORDERED
                      - ORDER_ORDERED
                      title: whether the channel is ordered or unordered
                      type: string
                    port_id:
                      title: port identifier
                      type: string
                    state:
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                      description: "State defines if a channel is in one of the following\
                        \ states:\nCLOSED, INIT, TRYOPEN, OPEN, or UNINITIALIZED.\n\
                        \n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT:\
                        \ A channel has just started the opening handshake.\n - STATE_TRYOPEN:\
                        \ A channel has acknowledged the handshake step on the counterparty\
                        \ chain.\n - STATE_OPEN: A channel has completed the handshake.\
                        \ Open channels are\nready to send and receive packets.\n\
                        \ - STATE_CLOSED: A channel has been closed and can no longer\
                        \ be used to send or receive\npackets."
                      enum:
                      - STATE_UNINITIALIZED_UNSPECIFIED
                      - STATE_INIT
                      - STATE_TRYOPEN
                      - STATE_OPEN
                      - STATE_CLOSED
                      title: current state of the channel end
                      type: string
                    version:
                      title: opaque channel version, which is agreed upon during the
                        handshake
                      type: string
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryConnectionChannelsResponse is the Response type for the

              Query/QueryConnectionChannels RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConnectionChannels queries all the channels associated with a connection

        end.'
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/next_sequence_send:
    get:
      operationId: Query_IBCChannelV2NextSequenceSend
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              next_sequence_send:
                format: uint64
                title: next sequence send number
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryNextSequenceSendResponse is the response type for the

              Query/QueryNextSequenceSend RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: NextSequenceSend returns the next send sequence for a given channel.
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_acknowledgements:
    get:
      operationId: Query_IBCChannelV2PacketAcknowledgements
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      - collectionFormat: multi
        description: list of packet sequences.
        in: query
        items:
          format: uint64
          type: string
        name: packet_commitment_sequences
        required: false
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              acknowledgements:
                items:
                  description: 'PacketState defines the generic type necessary to
                    retrieve and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to interpret
                    this

                    state as a commitment, acknowledgement, or a receipt.'
                  properties:
                    client_id:
                      description: client unique identifier.
                      type: string
                    data:
                      description: embedded data that represents packet state.
                      format: byte
                      type: string
                    sequence:
                      description: packet sequence.
                      format: uint64
                      type: string
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryPacketAcknowledgemetsResponse is the request type for the

              Query/QueryPacketAcknowledgements RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'PacketAcknowledgements returns all packet acknowledgements associated
        with

        a channel.'
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_acks/{sequence}:
    get:
      operationId: Query_IBCChannelV2PacketAcknowledgement
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryPacketAcknowledgementResponse is the response type
              for the

              Query/PacketAcknowledgement RPC method.'
            properties:
              acknowledgement:
                format: byte
                title: acknowledgement associated with the request fields
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketAcknowledgement queries a stored acknowledgement commitment hash.
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments:
    get:
      operationId: Query_IBCChannelV2PacketCommitments
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryPacketCommitmentResponse is the response type for the

              Query/PacketCommitment RPC method.'
            properties:
              commitments:
                description: collection of packet commitments for the requested channel
                  identifier.
                items:
                  description: 'PacketState defines the generic type necessary to
                    retrieve and store

                    packet commitments, acknowledgements, and receipts.

                    Caller is responsible for knowing the context necessary to interpret
                    this

                    state as a commitment, acknowledgement, or a receipt.'
                  properties:
                    client_id:
                      description: client unique identifier.
                      type: string
                    data:
                      description: embedded data that represents packet state.
                      format: byte
                      type: string
                    sequence:
                      description: packet sequence.
                      format: uint64
                      type: string
                  type: object
                type: array
              height:
                description: query block height.
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: 'Height is a monotonically increasing data type

                  that can be compared against another Height for the purposes of
                  updating and

                  freezing clients'
                type: object
              pagination:
                description: pagination response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketCommitments queries a stored packet commitment hash.
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      operationId: Query_IBCChannelV2UnreceivedAcks
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - collectionFormat: csv
        description: list of acknowledgement sequences
        in: path
        items:
          format: uint64
          type: string
        minItems: 1
        name: packet_ack_sequences
        required: true
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              sequences:
                items:
                  format: uint64
                  type: string
                title: list of unreceived acknowledgement sequences
                type: array
            title: 'QueryUnreceivedAcksResponse is the response type for the

              Query/UnreceivedAcks RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UnreceivedAcks returns all the unreceived IBC acknowledgements associated

        with a channel and sequences.'
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{sequences}/unreceived_packets:
    get:
      operationId: Query_IBCChannelV2UnreceivedPackets
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - collectionFormat: csv
        description: list of packet sequences
        in: path
        items:
          format: uint64
          type: string
        minItems: 1
        name: sequences
        required: true
        type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              sequences:
                items:
                  format: uint64
                  type: string
                title: list of unreceived packet sequences
                type: array
            title: 'QueryUnreceivedPacketsResponse is the response type for the

              Query/UnreceivedPacketCommitments RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'UnreceivedPackets returns all the unreceived IBC packets associated
        with a

        channel and sequences.'
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_commitments/{sequence}:
    get:
      operationId: Query_IBCChannelV2PacketCommitment
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryPacketCommitmentResponse is the response type for the

              Query/PacketCommitment RPC method.'
            properties:
              commitment:
                format: byte
                title: packet associated with the request fields
                type: string
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketCommitment queries a stored packet commitment hash.
      tags:
      - Query
  /ibc/core/channel/v2/clients/{client_id}/packet_receipts/{sequence}:
    get:
      operationId: Query_IBCChannelV2PacketReceipt
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: packet sequence
        format: uint64
        in: path
        name: sequence
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryPacketReceiptResponse is the response type for the
              Query/PacketReceipt

              RPC method.'
            properties:
              proof:
                format: byte
                title: merkle proof of existence or absence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
              received:
                title: success flag for if receipt exists
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PacketReceipt queries a stored packet receipt.
      tags:
      - Query
  /ibc/core/client/v1/client_creator/{client_id}:
    get:
      operationId: Query_ClientCreator
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryClientCreatorResponse is the response type for the
              Query/ClientCreator

              RPC method.'
            properties:
              creator:
                title: creator of the client
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ClientCreator queries the creator of a given client.
      tags:
      - Query
  /ibc/core/client/v1/client_states:
    get:
      operationId: Query_ClientStates
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryClientStatesResponse is the response type for the Query/ClientStates
              RPC

              method.'
            properties:
              client_states:
                description: list of stored ClientStates of the chain.
                items:
                  description: 'IdentifiedClientState defines a client state with
                    an additional client

                    identifier field.'
                  properties:
                    client_id:
                      title: client identifier
                      type: string
                    client_state:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      title: client state
                      type: object
                  type: object
                type: array
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ClientStates queries all the IBC light clients of a chain.
      tags:
      - Query
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      operationId: Query_ClientState
      parameters:
      - description: client state unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryClientStateResponse is the response type for the Query/ClientState
              RPC

              method. Besides the client state, it includes a proof and the height
              from

              which the proof was retrieved.'
            properties:
              client_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: client state associated with the request identifier
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ClientState queries an IBC light client.
      tags:
      - Query
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      operationId: Query_ClientStatus
      parameters:
      - description: client unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryClientStatusResponse is the response type for the Query/ClientStatus
              RPC

              method. It returns the current status of the IBC client.'
            properties:
              status:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Status queries the status of an IBC client.
      tags:
      - Query
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      operationId: Query_ConsensusStates
      parameters:
      - description: client identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              consensus_states:
                items:
                  description: 'ConsensusStateWithHeight defines a consensus state
                    with an additional height

                    field.'
                  properties:
                    consensus_state:
                      properties:
                        type_url:
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      title: consensus state
                      type: object
                    height:
                      description: 'Normally the RevisionHeight is incremented at
                        each height while keeping

                        RevisionNumber the same. However some consensus algorithms
                        may choose to

                        reset the height in certain conditions e.g. hard forks, state-machine

                        breaking changes In these cases, the RevisionNumber is incremented
                        so that

                        height continues to be monitonically increasing even as the
                        RevisionHeight

                        gets reset


                        Please note that json tags for generated Go code are overridden
                        to explicitly

                        exclude the omitempty jsontag. This enforces the Go json marshaller
                        to always

                        emit zero values for both revision_number and revision_height.'
                      properties:
                        revision_height:
                          format: uint64
                          title: the height within the given revision
                          type: string
                        revision_number:
                          format: uint64
                          title: the revision that the client is currently on
                          type: string
                      title: consensus state height
                      type: object
                  type: object
                title: consensus states associated with the identifier
                type: array
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryConsensusStatesResponse is the response type for the

              Query/ConsensusStates RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConsensusStates queries all the consensus state associated with a
        given

        client.'
      tags:
      - Query
  /ibc/core/client/v1/consensus_states/{client_id}/heights:
    get:
      operationId: Query_ConsensusStateHeights
      parameters:
      - description: client identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              consensus_state_heights:
                items:
                  description: 'Normally the RevisionHeight is incremented at each
                    height while keeping

                    RevisionNumber the same. However some consensus algorithms may
                    choose to

                    reset the height in certain conditions e.g. hard forks, state-machine

                    breaking changes In these cases, the RevisionNumber is incremented
                    so that

                    height continues to be monitonically increasing even as the RevisionHeight

                    gets reset


                    Please note that json tags for generated Go code are overridden
                    to explicitly

                    exclude the omitempty jsontag. This enforces the Go json marshaller
                    to always

                    emit zero values for both revision_number and revision_height.'
                  properties:
                    revision_height:
                      format: uint64
                      title: the height within the given revision
                      type: string
                    revision_number:
                      format: uint64
                      title: the revision that the client is currently on
                      type: string
                  title: 'Height is a monotonically increasing data type

                    that can be compared against another Height for the purposes of
                    updating and

                    freezing clients'
                  type: object
                title: consensus state heights
                type: array
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            title: 'QueryConsensusStateHeightsResponse is the response type for the

              Query/ConsensusStateHeights RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConsensusStateHeights queries the height of every consensus states

        associated with a given client.'
      tags:
      - Query
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      operationId: Query_ConsensusState
      parameters:
      - description: client identifier
        in: path
        name: client_id
        required: true
        type: string
      - description: consensus state revision number
        format: uint64
        in: path
        name: revision_number
        required: true
        type: string
      - description: consensus state revision height
        format: uint64
        in: path
        name: revision_height
        required: true
        type: string
      - description: 'latest_height overrides the height field and queries the latest
          stored

          ConsensusState.'
        in: query
        name: latest_height
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              consensus_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: consensus state associated with the client identifier at the
                  given height
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: 'Height is a monotonically increasing data type

                  that can be compared against another Height for the purposes of
                  updating and

                  freezing clients'
                type: object
            title: 'QueryConsensusStateResponse is the response type for the Query/ConsensusState

              RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConsensusState queries a consensus state associated with a client
        state at

        a given height.'
      tags:
      - Query
  /ibc/core/client/v1/params:
    get:
      operationId: Query_ClientParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryClientParamsResponse is the response type for the Query/ClientParams
              RPC

              method.'
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  allowed_clients:
                    description: 'allowed_clients defines the list of allowed client
                      state types which can be

                      created and interacted with. If a client type is removed from
                      the allowed

                      clients list, usage of this client will be disabled until it
                      is added again

                      to the list.'
                    items:
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ClientParams queries all parameters of the ibc client submodule.
      tags:
      - Query
  /ibc/core/client/v1/upgraded_client_states:
    get:
      operationId: Query_UpgradedClientState
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryUpgradedClientStateResponse is the response type for
              the

              Query/UpgradedClientState RPC method.'
            properties:
              upgraded_client_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: client state associated with the request identifier
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpgradedClientState queries an Upgraded IBC light client.
      tags:
      - Query
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      operationId: Query_IBCClientUpgradedConsensusState
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryUpgradedConsensusStateResponse is the response type
              for the

              Query/UpgradedConsensusState RPC method.'
            properties:
              upgraded_consensus_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: Consensus state associated with the request identifier
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      tags:
      - Query
  /ibc/core/client/v1/verify_membership:
    post:
      operationId: Query_VerifyMembership
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            block_delay:
              format: uint64
              title: optional block delay
              type: string
            client_id:
              description: client unique identifier.
              type: string
            merkle_path:
              description: the commitment key path.
              properties:
                key_path:
                  items:
                    format: byte
                    type: string
                  type: array
              type: object
            proof:
              description: the proof to be verified by the client.
              format: byte
              type: string
            proof_height:
              description: 'Normally the RevisionHeight is incremented at each height
                while keeping

                RevisionNumber the same. However some consensus algorithms may choose
                to

                reset the height in certain conditions e.g. hard forks, state-machine

                breaking changes In these cases, the RevisionNumber is incremented
                so that

                height continues to be monitonically increasing even as the RevisionHeight

                gets reset


                Please note that json tags for generated Go code are overridden to
                explicitly

                exclude the omitempty jsontag. This enforces the Go json marshaller
                to always

                emit zero values for both revision_number and revision_height.'
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: 'Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of updating
                and

                freezing clients'
              type: object
            time_delay:
              format: uint64
              title: optional time delay
              type: string
            value:
              description: the value which is proven.
              format: byte
              type: string
          title: 'QueryVerifyMembershipRequest is the request type for the

            Query/VerifyMembership RPC method'
          type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              success:
                description: boolean indicating success or failure of proof verification.
                type: boolean
            title: 'QueryVerifyMembershipResponse is the response type for the

              Query/VerifyMembership RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'VerifyMembership queries an IBC light client for proof verification
        of a

        value at a given key path.'
      tags:
      - Query
  /ibc/core/client/v2/config/{client_id}:
    get:
      operationId: Query_Config
      parameters:
      - description: client state unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              config:
                properties:
                  allowed_relayers:
                    items:
                      type: string
                    title: 'allowed_relayers defines the set of allowed relayers for
                      IBC V2 protocol

                      for the given client'
                    type: array
                title: 'Config is a **per-client** configuration struct that sets
                  which relayers are

                  allowed to relay v2 IBC messages for a given client. If it is set,
                  then only

                  relayers in the allow list can send v2 messages If it is not set,
                  then the

                  client allows permissionless relaying of v2 messages'
                type: object
            title: QueryConfigResponse is the response type for the Query/Config RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Config queries the IBC client v2 configuration for a given client.
      tags:
      - Query
  /ibc/core/client/v2/counterparty_info/{client_id}:
    get:
      operationId: Query_CounterpartyInfo
      parameters:
      - description: client state unique identifier
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryCounterpartyInfoResponse is the response type for the

              Query/CounterpartyInfo RPC method.'
            properties:
              counterparty_info:
                properties:
                  client_id:
                    title: 'client identifier is the identifier used to send packet
                      messages to our

                      client'
                    type: string
                  merkle_prefix:
                    items:
                      format: byte
                      type: string
                    title: merkle prefix key is the prefix that ics provable keys
                      are stored under
                    type: array
                title: 'CounterpartyInfo defines the key that the counterparty will
                  use to message

                  our client'
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CounterpartyInfo queries an IBC light counter party info.
      tags:
      - Query
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      operationId: Query_ClientConnections
      parameters:
      - description: client identifier associated with a connection
        in: path
        name: client_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              connection_paths:
                description: slice of all the connection paths associated with a client.
                items:
                  type: string
                type: array
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was generated
                type: object
            title: 'QueryClientConnectionsResponse is the response type for the

              Query/ClientConnections RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ClientConnections queries the connection paths associated with a client

        state.'
      tags:
      - Query
  /ibc/core/connection/v1/connections:
    get:
      operationId: Query_Connections
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryConnectionsResponse is the response type for the Query/Connections
              RPC

              method.'
            properties:
              connections:
                description: list of stored connections of the chain.
                items:
                  description: 'IdentifiedConnection defines a connection with additional
                    connection

                    identifier field.'
                  properties:
                    client_id:
                      description: client associated with this connection.
                      type: string
                    counterparty:
                      description: counterparty chain associated with this connection.
                      properties:
                        client_id:
                          description: 'identifies the client on the counterparty
                            chain associated with a given

                            connection.'
                          type: string
                        connection_id:
                          description: 'identifies the connection end on the counterparty
                            chain associated with a

                            given connection.'
                          type: string
                        prefix:
                          description: commitment merkle prefix of the counterparty
                            chain.
                          properties:
                            key_prefix:
                              format: byte
                              type: string
                          title: 'MerklePrefix is merkle path prefixed to the key.

                            The constructed key from the Path and the key will be
                            append(Path.KeyPath,

                            append(Path.KeyPrefix, key...))'
                          type: object
                      type: object
                    delay_period:
                      description: delay period associated with this connection.
                      format: uint64
                      type: string
                    id:
                      description: connection identifier.
                      type: string
                    state:
                      default: STATE_UNINITIALIZED_UNSPECIFIED
                      description: current state of the connection end.
                      enum:
                      - STATE_UNINITIALIZED_UNSPECIFIED
                      - STATE_INIT
                      - STATE_TRYOPEN
                      - STATE_OPEN
                      type: string
                    versions:
                      items:
                        description: 'Version defines the versioning scheme used to
                          negotiate the IBC version in

                          the connection handshake.'
                        properties:
                          features:
                            items:
                              type: string
                            title: list of features compatible with the specified
                              identifier
                            type: array
                          identifier:
                            title: unique version identifier
                            type: string
                        type: object
                      title: 'IBC version which can be utilised to determine encodings
                        or protocols for

                        channels or packets utilising this connection'
                      type: array
                  type: object
                type: array
              height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: query block height
                type: object
              pagination:
                description: "PageResponse is to be embedded in gRPC response messages\
                  \ where the\ncorresponding request message has used PageRequest.\n\
                  \n message SomeResponse {\n         repeated Bar results = 1;\n\
                  \         PageResponse page = 2;\n }"
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                title: pagination response
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Connections queries all the IBC connections of a chain.
      tags:
      - Query
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      operationId: Query_Connection
      parameters:
      - description: connection unique identifier
        in: path
        name: connection_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryConnectionResponse is the response type for the Query/Connection
              RPC

              method. Besides the connection end, it includes a proof and the height
              from

              which the proof was retrieved.'
            properties:
              connection:
                description: 'ConnectionEnd defines a stateful object on a chain connected
                  to another

                  separate one.

                  NOTE: there must only be 2 defined ConnectionEnds to establish

                  a connection between two chains.'
                properties:
                  client_id:
                    description: client associated with this connection.
                    type: string
                  counterparty:
                    description: counterparty chain associated with this connection.
                    properties:
                      client_id:
                        description: 'identifies the client on the counterparty chain
                          associated with a given

                          connection.'
                        type: string
                      connection_id:
                        description: 'identifies the connection end on the counterparty
                          chain associated with a

                          given connection.'
                        type: string
                      prefix:
                        description: commitment merkle prefix of the counterparty
                          chain.
                        properties:
                          key_prefix:
                            format: byte
                            type: string
                        title: 'MerklePrefix is merkle path prefixed to the key.

                          The constructed key from the Path and the key will be append(Path.KeyPath,

                          append(Path.KeyPrefix, key...))'
                        type: object
                    type: object
                  delay_period:
                    description: 'delay period that must pass before a consensus state
                      can be used for

                      packet-verification NOTE: delay period logic is only implemented
                      by some

                      clients.'
                    format: uint64
                    type: string
                  state:
                    default: STATE_UNINITIALIZED_UNSPECIFIED
                    description: current state of the connection end.
                    enum:
                    - STATE_UNINITIALIZED_UNSPECIFIED
                    - STATE_INIT
                    - STATE_TRYOPEN
                    - STATE_OPEN
                    type: string
                  versions:
                    description: 'IBC version which can be utilised to determine encodings
                      or protocols for

                      channels or packets utilising this connection.'
                    items:
                      description: 'Version defines the versioning scheme used to
                        negotiate the IBC version in

                        the connection handshake.'
                      properties:
                        features:
                          items:
                            type: string
                          title: list of features compatible with the specified identifier
                          type: array
                        identifier:
                          title: unique version identifier
                          type: string
                      type: object
                    type: array
                title: connection associated with the request identifier
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Connection queries an IBC connection end.
      tags:
      - Query
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      operationId: Query_ConnectionClientState
      parameters:
      - description: connection identifier
        in: path
        name: connection_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              identified_client_state:
                description: 'IdentifiedClientState defines a client state with an
                  additional client

                  identifier field.'
                properties:
                  client_id:
                    title: client identifier
                    type: string
                  client_state:
                    properties:
                      type_url:
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    title: client state
                    type: object
                title: client state associated with the channel
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryConnectionClientStateResponse is the response type for the

              Query/ConnectionClientState RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConnectionClientState queries the client state associated with the

        connection.'
      tags:
      - Query
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      operationId: Query_ConnectionConsensusState
      parameters:
      - description: connection identifier
        in: path
        name: connection_id
        required: true
        type: string
      - format: uint64
        in: path
        name: revision_number
        required: true
        type: string
      - format: uint64
        in: path
        name: revision_height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              client_id:
                title: client ID associated with the consensus state
                type: string
              consensus_state:
                properties:
                  type_url:
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                title: consensus state associated with the channel
                type: object
              proof:
                format: byte
                title: merkle proof of existence
                type: string
              proof_height:
                description: 'Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose
                  to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented
                  so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset


                  Please note that json tags for generated Go code are overridden
                  to explicitly

                  exclude the omitempty jsontag. This enforces the Go json marshaller
                  to always

                  emit zero values for both revision_number and revision_height.'
                properties:
                  revision_height:
                    format: uint64
                    title: the height within the given revision
                    type: string
                  revision_number:
                    format: uint64
                    title: the revision that the client is currently on
                    type: string
                title: height at which the proof was retrieved
                type: object
            title: 'QueryConnectionConsensusStateResponse is the response type for
              the

              Query/ConnectionConsensusState RPC method'
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: 'ConnectionConsensusState queries the consensus state associated with
        the

        connection.'
      tags:
      - Query
  /ibc/core/connection/v1/params:
    get:
      operationId: Query_ConnectionParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryConnectionParamsResponse is the response type for the

              Query/ConnectionParams RPC method.'
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  max_expected_time_per_block:
                    description: 'maximum expected time per block (in nanoseconds),
                      used to enforce block

                      delay. This parameter should reflect the largest amount of time
                      that the

                      chain might reasonably take to produce the next block under
                      normal

                      operating conditions. A safe choice is 3-5x the expected time
                      per block.'
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      tags:
      - Query
  /ibc/lightclients/wasm/v1/checksums:
    get:
      operationId: Query_Checksums
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending

          order.'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'QueryChecksumsResponse is the response type for the Query/Checksums
              RPC

              method.'
            properties:
              checksums:
                description: checksums is a list of the hex encoded checksums of all
                  wasm codes stored.
                items:
                  type: string
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: 'next_key is the key to be passed to PageRequest.key
                      to

                      query the next page most efficiently. It will be empty if

                      there are no more results.'
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: 'total is total number of results available if PageRequest.count_total

                      was set, its value is undefined otherwise'
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Get all Wasm checksums
      tags:
      - Query
  /ibc/lightclients/wasm/v1/checksums/{checksum}/code:
    get:
      operationId: Query_Code
      parameters:
      - description: checksum is a hex encoded string of the code stored.
        in: path
        name: checksum
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: QueryCodeResponse is the response type for the Query/Code
              RPC method.
            properties:
              data:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Get Wasm code for given checksum
      tags:
      - Query
swagger: '2.0'
